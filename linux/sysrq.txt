                DOCUMENTACIÓN SOBRE LA TECLA MÁGICA SYSRQ v1.2
                     ------------------------------------
                        [Sáb May 16 01:09:21 EDT 1998]
                        [Traducción de Vie 10 Nov 2000]
         Traducido por Gustavo A. Zapatero Carrasco <guszapa@hotmail.com>
                         para el proyecto NuLies

*  ¿Qué es la tecla mágica SysRQ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Es una combinación "mágica" de teclas que puedes presionar a las que el
núcleo responderá sin importar qué otras cosas esté haciendo, salvo que esté
completamente bloqueado.

*  ¿Cómo puedo hacer funcionar la tecla mágica SysRQ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Necesita decir si a 'Magic SysRq key (CONFIG_MAGIC_SYSRQ)' cuando configure
el núcleo. Esta opción sólo es accesible en núcleos 2.1.x o posteriores.

*  ¿Cómo uso la tecla mágica SysRQ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
En x86   - Presione la combinación 'ALT-SysRQ-<tecla comando>'. Nota -Algunos
           (¿los más viejos?) pueden no tener una tecla llamada 'SysRQ'. Esta
           tecla es conocida entonces como la tecla 'Print Screen' (Impr Pant).

En SPARC - Presione 'ALT-STOP-<tecla comando>', creo.

En PowerPC - Presione 'ALT-Print Screen-<tecla comando>'.

En otros - Si conoce las combinaciones de teclas para otras arquitecturas,
           por favor, hágamelo saber y lo podré añadir a esta sección. 

*  ¿Cuáles son las teclas 'comando'?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
'r'     - Cambia el teclado del modo raw al modo XLATE.

'k'     - Mata todos los programas en la consola virtual actual.

'b'     - Reiniciará inmediatamente el sistema sin sincronizar o desmontar
          sus discos.

'o'     - Apagará su sistema (si está configurado y lo soporta).

's'     - Intentará sincronizar todos los sistemas de ficheros montados.

'u'     - Intentará montar de nuevo todos los sistemas de archivos montados
          como solo lectura.

'p'     - Volcará los registros y banderas actuales a su consola.

't'     - Volcará una lista de las tareas en ejecución y su información a su
          consola.

'm'     - Volcará la información actual de la memoria a su consola.

'0'-'9' - Establece el nivel de información en consola, controlando los
          mensajes del núcleo que se mandarán a la consola. ('0', por ejemplo
          haría que sólo los mensajes de emergencia como PANIC u OOPS salieran
          en su consola.)

'e'     - Manda un SIGTERM a todos los procesos, excepto para init.

'i'     - Manda un SIGKILL a todos los procesos, excepto para init.

'l'     - Manda un SIGKILL a todos los procesos, INCLUYENDO init. (Su
          sistema ya no será operativo tras esto).

*  Vale pero, ¿para qué lo puedo usar?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Bueno, un'R'aw es práctico cuando su servidor X o un programa svgalib se
cuelga.

sa'K'udir (tecla de atención al sistema) va bien cuando quiere salir de un
programa que no le deja cambiar de consola. (Por ejemplo, X o un programa
svgalib.)

re'B'otar es bueno cuando no puede apagar. Pero también debería 'S'incronizar
y 'U'mountar primero.

'S'incronizar es genial cuando su sistema está bloqueado, le permite
sincronizar sus discos y disminuir el riesgo de pérdida de datos y el tener
que ejecutar fsck. Note que sync no habrá tenido lugar hasta que vea en su 
pantalla "OK" y "Done". (Si el núcleo está realmente en problemas, puede ser
que nunca vea los mensajes OK o Done...)

'U'mount se usa básicamente igual que 'S'. Yo normalmente 'S'incronizo, 
'U'monto, y re'B'oto cuando mi sistema se bloquea. Me ha ahorrado muchos
fsck. De nuevo, el desmontaje (montaje en solo lectura) no tiene lugar hasta
que los mensajes "OK" y "Done" aparezcan en su pantalla.

El nivel de mensajes '0'-'9' es práctico cuando su consola está siendo
inundada de mensajes del núcleo que ud. no quiere ver. Poniendo '0' evitará 
todos esos mensajes en su consola, menos los más urgentes . (Sin embargo, aún 
podrá verlos si syslogd/klogd están vivos.)

t'E'rminar y k'I'll son prácticos si tiene algún proceso en ejecución que no 
puede matar de ninguna otra manera, especialmente si está produciendo otros
procesos.

*  A veces SysRQ parece bloquearse tras usarla, ¿qué puedo hacer?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Eso me pasa a mí también. He descubierto que tecleando mayúsculas, alt, y 
control en ambos lados del teclado, y presionando una secuencia inválida sysrq 
de nuevo, arreglará el problema. (p. ej., algo como alt-sysrq-z). Cambiando a
otra consola virtual (ALT+Fn) y volviendo de nuevo,también podría ayudar.

*  Presiono SysRQ, pero no parece suceder nada,¿qué va mal?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Hay algunos teclados que no soportan 'SysRQ', puede intentarlo ejecutando 
'showkey -s' y presionando SysRQ o alt-SysRQ para ver si genera algún código 
0x54. Si no lo hace puede definir la secuencia mágica sysrq a una tecla 
diferente. Busque el código de la tecla con showkey, y cambie la definición de 
'#define SYSRQ_KEY 0x54' en [/usr/src/linux/]include/asm/keyboard.h al código 
de tecla que ud. quiera usar, y recompile. Oh, y a propósito, se sale de 
'showkey' esperando diez segundos sin teclear nada.

*  Tengo más preguntas, ¿a quién puedo preguntar?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Siéntase libre de mandarme un e-mail a myrdraal@deathsdoor.com.  
Responderé tan pronto como pueda. Si esta dirección de correo no funciona,
use myrdraal@jackalz.dyn.ml.org.

 -Myrdraal
