    “Usted puede estar ejecutando programas no-libres en su ordenador todos los días sin darse cuenta de ello, a través de su navegador web.

    En la comunidad del software libre, la idea de que los programas libres no maltratan al usuario es familiar. Algunos de nosotros se niegan por completo a instalar software propietario, y otros muchos no los consideran un ataque contra la libertad del programa. Muchos usuarios son conscientes de que esta cuestión se aplica a los plugins que ofrecen los navegadores para instalar, ya que pueden ser libres o no-libres.

    Sin embargo, los navegadores ejecutan otros programas no-libres y no preguntan sobre ello ni le informan acerca de los programas que contiene las paginas web o los enlaces. Estos programas son la mayoría de las veces escritos en JavaScript, aunque se utilizan otros lenguajes también.

    JavaScript (oficialmente llamado ECMAScript, pero pocos utilizan ese nombre) se utilizaba para pequeños adornos en las páginas web, algo lindo, pero sin esenciales características de navegación y visualización. Es aceptable considerarlos como simples extensiones del lenguaje HTML, en lugar de como verdaderos programas informáticos, y no constituyen un problema importante.

    Muchos sitios utilizan JavaScript, pero algunos lo usan para realizar el trabajo de los principales programas. Por ejemplo, Google Docs descarga en tu equipo un programa que mide medio megabyte, en una forma compacta que podríamos llamar Obfuscript porque no tiene comentarios y casi ningún espacio en blanco. El método de escritura es similar a una larga carta. El código fuente de un programa es la forma preferida para modificarlo. El código fuente real de este programa no está disponible para el usuario.

    Los navegadores no suelen decir cuando los programas cargan JavaScript. La mayoría de los navegadores tienen una manera de desactivar JavaScript totalmente, pero ninguno de ellos puede comprobar que JavaScript es trivial y no-libre. Sin embargo, incluso en la comunidad del software libre la mayoría de los usuarios no son conscientes de este problema, y el silencio del navegador tiende a ocultarlo.

    Es posible liberar un programa en JavaScript como sotfware libre, mediante la distribución del código fuente bajo una licencia de software libre. Pero incluso si el código fuente del programa está disponible, no hay una manera fácil de ejecutar esa versión modificada en lugar de la original. Los navegadores libres actuales no ofrecen la posibilidad de ejecutar tu propia versión modificada en lugar de la entregada por la página. El efecto es comparable al “Tivoización”, aunque no tan fácil de superar.

    JavaScript no es el único lenguaje utilizado en sitios web. Tendremos que estudiar la cuestión de Flash y formular las recomendaciones oportunas. Silverlight es probable que genere un problema similar al de Flash, pero mucho peor, ya que Microsoft lo utiliza como una plataforma para los codecs no-libres. Un sustituto de Silverlight no sería de utilidad en el mundo libre sin un reemplazo de los códecs.

    También ejecutar applets de Java en el navegador plantea cuestiones similares. En general, cualquier tipo de aplicación plantea este tipo de problema. Tener un entorno libre para la ejecución de un applet sólo nos lleva lejos de encontrar el problema.

    Un fuerte movimiento se ha desarrollado en sitios webs para comunicarse sólo a través de formatos y protocolos que son libres (algunos dicen “open”), es decir, cuya documentación se publica y cualquier persona es libre de usar. Con la presencia de aplicaciones en páginas web, el criterio es necesario pero no suficiente. JavaScript en si mismo, como formato, es libre, y el uso de JavaScript en un sitio web no es necesariamente malo. Sin embargo, como hemos visto anteriormente, también no es necesariamente bueno. Cuando el site transmite un programa al usuario, no es suficiente que el programa esté documentado, ese programa debe ser libre también. “Solo los programas libres deben ser transmitidos al usuario” debe convertirse en parte de un buen criterio de comportamiento de los sitios web.

    La carga y ejecución en modo silencioso de programas no-libres es una de las cuestiones planteadas por las “aplicaciones web”. El termino “aplicación web” fue diseñado para tener en cuenta la distinción fundamental entre el software entregado al usuario y el software que se ejecuta en el servidor.

    En términos prácticos, ¿como podemos hacer frente al problema de la falta de programas libres en JavaScript en la web? Aquí hay un plan de acción:

    En primer lugar, necesitamos un criterio práctico para los programas que usa JavaScript trivial. Ya que “trivial” es una cuestión de grado, se trata de diseñar un criterio simple que de buenos resultados.

    Nuestra propuesta es considerar un programa de JavaScript no trivial si define los métodos y las cargas, ya sea un script externo o una petición AJAX.

    Al final de este articulo se propone un convenio por el que un programa no trivial JavaScript en una web puede indicar la URL donde se encuentre su código fuente y puede también exponer su licencia.

    Por último, tenemos que cambiar los navegadores libres para apoyar la libertad de los usuarios de páginas con JavaScript. En primer lugar, los navegadores deben ser capaces de comunicarle al usuario acerca del programa trivial no-libre de JavaScript en lugar de ejecutarlo. Quizás NoScript podría adaptarse para hacer esto.

    El navegador también necesita una instalación para especificar que JavaScript usar en una determinada página. (El código especifico podría ser la sustitución total, o una versión modificada del JavaScript de esa página). Greasefire se acerca a ser capaz de hacer esto, pero no exactamente, ya que no garantiza la modificación del código JavaScript antes de que empiece a ejecutar el programa. Tenemos que construir una solución confiable y conveniente.

    Estas características hacen posible que un programa JavaScript incluido en una página web pueda ser libre en un sentido práctico y real. JavaScript ya no será un obstáculo para nuestra libertad, no más que C y Java lo son ahora. Seremos capaces de rechazar, e incluso sustituir el programa trivial no-libre, al igual que rechazamos y sustituimos los paquetes no-libres en una instalación habitual. Nuestra campaña para las páginas web libres de JavaScript puede entonces comenzar.

    Richard Stallman.”