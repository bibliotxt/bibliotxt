[5. Introduccion a los computadores y su programacion ]======================================]
[By Aseck ]==================================================================================]
[============================================================================================]

Hola cabros, este es mi primer articulo que escribo para CDT; aparte que soy nuevo en el 
team, ojala les guste; este tema muchos lo criticaran por su sencillez, o poca importancia,
pero partamos por conocer nuestra maquina ;P, y como funciona...
ok weno empecemos la wea...


1.-Una breve presentacion
--------------------------

Un computador es, muy resumidamente, una maquina electromecanica que resuelve problemas 
aceptando datos, realizando operaciones preestablecidas con ellos, y proveyendo los 
resultados de esas operaciones.

Bueno existen dos tipos de computadoras:

a) Computadoras analogicas.
b) computadoras digitales.


Los primeros (analogicos) operan sobre variables que representan datos continuos, por ejmplo
voltajes, intensidades de corriente etc... el computador anologico mide tales cantidades y 
resuelve sus problemas por analogia un ejemplo seria un problema de flujo de calor en una 
sustancia que puede ser resuelto por un circuito electrico que obedezca a ecuaciones que 
tengan la misma forma que las ecuaciones que describen el flujo de calor. la solucion al
problema entonces consiste de valores de variables electricas, tales como son intensidades 
de corriente, diferencias de potencial, etc.. que se interpretan como diferencia de 
temperatura, cantidad de calor, etc., una vez que se les multiplica por constantes 
apropiadas. Los computadores digitales, operan sobre variables expresadas discretamente. 
operaciones de naturaleza aritmetica y logica. este tipo de computadoras cuenta los datos y 
resuelve por conteo de pulsos discretos, ejemplo seria encontrar el valor de a elevado a x, 
para cierto x, con un cierto numero de cifras exactas, puede ser resuelto por un computador 
contando pulsos que equivalgan al desarrollo en serie de a elevado a x, obteniendo de esta 
manera el resultado que es un numero. este tipo de computadoras sera el que nos preocupara 
en el texto; P. (existe un tipo de computador que combina los dos tipos, se llama computador 
hibrido).

               [Esquema de un Computador digital y sus componentes funcionales.]
   
   
   (fig1)
    --------------  
    | Dispositivo <-->|
    | de entrada |     |
    --------------     |    #################
                       |    #               #
                       |    #-------------  #
                       |<-->#| Control   |  #
                       |    #|de entrada | -#---------
                       |    #|y salida   |  #         |
                       |    #------|------  #         |
    -------------- <-->|    #      |        #         |
    | Dispositivo     |    #------|------- #         |
    | de entrada |     |    #|  Unidad de | #         |
    --------------     |    #|   Control  | #--------------------->(  ALMACENAMIENTO )
                       |    #------|------- #         |             (   PRINCIPAL   )
                       |    #      |        #         |
                       |    #------|------- #         |
     --------------    |    #|   unidad   | #         | 
     | Dispositivo    |    #|  aritmetica|-#---------
     | de salida  |<-->|    #-------------- #
     --------------    |    #    (ucp)      #
                       |    #################
                       |
                       |
                       |
  -------------------  |
  |Dispositivo       |  |
  |de almacenamiento|  |
  |secundario       |  |
  -------------------  |
                   <-->|



2.- Logica de Computadoras
---------------------------

De los componentes de una computadora mostrados en el esquema anterior, podemos 
resaltar la UCP (CPU) y la memoria como las mas importantes para el tipo de funciones que 
realiza un computador, de hecho es imprescindible tener la posibilidad de guardar datos 
temporalmente en el almacenamiento principal y poder manipularlos para la maquina que nos 
referimos sea un computador, en esta seccion veremos brevemente como se guradan aquellos 
datos en su almacenamiento, y algunas operaciones sencillas que se efectuan sobre ellos.

El tipo de datos que se mantiene en el almacenamiento son de naturaleza muy sencilla y 
simple "solo digitos binarios", osea simplemente 0 y 1 (ver la figura 2), sin embargo una 
cierta cantidad de digitos binarios continuos pueden ser considerados un solo numero entero, 
en la figura 2, podemos considerar cada grupo de 4 digitos binarios como un entero en base 
binaria, y de esta manera "1100" representa el numero 1 x 2elvado a 3 + 1 X 2 elevado a 2 + 0 
X2 elevado a 1 + 0 x 2 elevado a 0 = 12 en decimal (decimal es la notacion posicional de los 
enteros).

Mas aun, estas agrupaciones no solo pueden representar numeros positivos como el ejemplo 
anterior, sino que tambien enteros y numeros racionales, finalmente tambien pueden 
representar caracteres de impresion, tales como la letra A o el signo #, gracias a esto 
tenemos la posibilidad de almacenar datos no-numericos, la que permite el uso de la 
computadora en la gran variedad  de aplicaciones que se les a encontrado.

 (fig2) digitos binarios en el almacenamiento


              ---     ---     ---     ---      ---      ---
       #     | 1 |   | 1 |   | 0 |   | 0 |    | 1 |    | 0 | *   *   *     #
       #      ---     ---     ---     ---      ---      ---                #
       #                                                                   #
       #     *  *  *  *  *  *                 almacenamiento               # 
       #####################################################################  


De esta manera, cualquier dato que se guarda en el almacenamiento es representado mejor dicho 
es codificado en binario, a los que se les llama "bits" (abreviacion de "binary digits"), son 
entonces los bits los valores realmente guardados por el almacenamiento y estos bits pueden 
ser considerados en grupos representado numeros enteros o racionales, o bien en caracteres,
"la manera en que los bits son representados depende eternamente de quien este usando los 
datos y las operaciones que esta efectuando sobre ellos" <-- parece muy estupido pero hay 
mucha gente que no lo sabe ;P.

Las operaciones mas simples que se pueden definir en los bits son las operaciones o funciones 
logicas. La operacion "Y" se define sobre dos bits A y B entonces si los dos bits tienen 
valor 1 el valor de la funcion Y es 1, en cualquier otro caso el valor es 0, esto puede ser 
expresado en una tabla como se muestra en la (figura 3a), en esta tabla se coloca en cada 
linea una de las posibles combinaciones de valores A y B, y el valor de la funcion para ese 
par de valores.

La operacion "O" sobre dos bits se define con valor 0, solo en el caso en que los dos bits 
tengan valor 0, en los restantes casos el valor es 1 como se muestra en la (figura 3b). La 
operacion "COMPLEMENTO" o "NEGACION" se define sobre un bit de manera todavia mas simple, 
como el valor opuesto de bit (figura 3c).



  (fig3a)                          (fig3b)                              (fig3c)
         
 A | B | A Y B                   A | B | A O B                         A  | COMPLE
 -------------                   -------------                         -----------  
 0 | 0 |   0                     0 | 0 |   0                            0 |   1
   |   |                           |   |                                  |
 0 | 1 |   0                     0 | 1 |   1                            1 |   0
   |   |                           |   |                                  |  
 1 | 0 |   0                     1 | 0 |   1                              |
   |   |                           |   |         
 1 | 1 |   1                     1 | 1 |   1               




 
3.- Operaciones Y, O, y complemento
------------------------------------

NOTA: La nomenclatura que usaremos aqui para representar los signos seran "^", este mismo 
invertido sera remplazado por una "u"( aqui en el texto, en la realidad no se remplaza) y "" 
por el caracter alt+191 que es muy parecido.

Bueno, como dice el titulo, las operaciones Y, O, complementos son remplazados por los signos 
que estan escritos en la NOTA, ^= Y , el mismo signo boca arriba, que lo remplazamos por una 
"u"= O, y la operacion complemento es remplazada por "".

De modo que A Y B se escribe A ^ B, estos simbolos son usados en la logica matematica donde 
tambien se identifican con "1" el valor "VERDADERO" y con 0 el valor "FALSO", en este sentido 
A "u" B es falso, por ejemplo cuando A es falso B es falso.

Es posible aplicar las operaciones logicas a los resultados de otras operaciones, esta 
sucesion de operaciones permite formar expresiones en las que se puede usar parentesis para 
señalar el orden en que se deban aplicar las operaciones. Asi la expresion  (A u B)^((A^B)), 
significa que debe evaluarse primero (A u B) y tambien (A ^ B), luego complementando el 
segundo de estos valores, obtener  (A ^ B) y finalmente realizar una operacion "Y" sobre 
este ultimo valor y el de (A u B) ya calculado; si A tiene valor 0 y B valor 1, la expresion 
anterior vale 1, que  realizando los pasos tenemos:
                  

                                                     A u B = 0 u 1 = 1
                                                     A ^ B = 0 ^ 1 = 0
                                                      (A ^ B) =  (0) = 1
                                             (A u B) ^ ( (A ^ B)) = (1) ^ (1) = 1

 
Hay operaciones logicas sobre dos bits A y B que pueden definirse. Algunas de ellas son 
triviales, como por ejemplo, la operacion que asigna un resultado 0, cualesquiera sean los 
valores de A y B; si designamos arbitrariamente esta operacion con un triangulo pequeño 
( parecido al que se forma con la tecla alt+30), podemos escribir A (alt+30) B = 0. otra 
operacion simple es la que se asigna el valor A al par de bits A y B; en otras palabras, el 
valor de la funcion aplicada sobre un par de bits depende solo del primer bit, y es igual a 
este.

En total existen 16 posibles operaciones logicas distintas, las que se generan asignando 
todas las combinaciones posibles de ceros y unos en la columna de valor de la operacion 
(4b):




                                (4a)                              (4b)
         
                                 A | B  | A (alt+30) B        A | B  | valor operacion           
                                 --------------------         ----------------------   
                                 0 |  0 |        0            0 |  0 |
                                   |    |                       |    | 
                                 0 |  1 |        0            0 |  1 |
                                   |    |                       |    |  
                                 1 |  0 |        1            1 |  0 |
                                   |    |                       |    |
                                 1 |  1 |        1            1 |  1 | 



     
En esta tabla mostrare algunas operaciones logicas:

i) A -> B (A IMPLICA B)

ii) A <-> B ( A SI Y SOLO SI B )
  
iii) A "fecha hacia abajo" B ( Ni A NI B )
  
iv) A "flecha hacia abajo" B ( No A Y B JUNTOS)


     

    A   |   B   |  A -> B  |  A <-> B  |  A "F. abajo" B  |   A "F. arriba" B
-------------------------------------------------------------------------------
    0       0        1           1               1                   1
------------------------------------------------------------------------------- 
    0       1        1           0               0                   1
-------------------------------------------------------------------------------             
    1       0        0           0               0                   1 
-------------------------------------------------------------------------------       
    1       1        1           1               1                   0
-------------------------------------------------------------------------------


4.- La UCP (CPU)
-----------------

Bueno esta se divide en 3 unidades funcionales, en la figura 1 al principio del texto 
habiamos ejemplificado una CPU, que consiste en tres unidades, unidad de control de entrada 
y salida, la unidad aritmetica y la de control.

la unidad de entrada/salida: esta unidad dirige la transferencia de datos  desde un 
dispositivo de entrada de datos, por ejemplo la disketera hacia el almacenamiento y viceversa

la unidad aritmetica (UA) es la unidad encargada de realizar operaciones aritmeticas sobre los 
datos en el almacenamiento por ejemplo sumar los bits de dos palabras, u operaciones logicas, 
por ejemplo realizar una operacion complemento sobre un bit particular.

La unidad aritmetica necesita almacenar temporalmente datos mientras realiza operaciones 
sobre ellos, y con este objeto usa registros, un registro es una serie de bits continuos 
( usualmente una palabra).

La unidad de control, coordina todo el computador, de modo que con los eventos tomen lugar en 
la secuencia apropiada y en el momento correcto, osea hablamos de la sincronizacion del 
computador.

Bueno vamos a tratar un poco mas a fondo lo que es la unidad aritmetica :P, principalmente 
sus caracteristicas. Entre los registros de la unidad aritmetica hay algunos que son 
particularmente importantes, los que son llamados acumuladores, una computadora puede no 
tener ningunos, solo uno, o varios de ellos, a los acumuladores tambien se les llama registro 
aritmetico, registros de uso general, registros base y registros indices. Un acumulador 
mantiene temporalmente resultados de operaciones logicas y aritmeticas, pero tambien 
direcciones (registros de base), o cantidades modificadoras de direcciones (en este caso se 
les llama registros indices). Los acumuladores, dependiendo del computador pueden tener 
largos que van desde una palabra a varias palabras.

Los computadores pequeños usualmente tienen un solo acumulador, mientras que los mas grandes 
tienen varios con objeto de hacer mas rapido las instrucciones, minimizando los accesos al 
almacenamiento. las operaciones que puede realizar la Unidad Aritmetica dependen, por 
supuesto, de los circuitos que esta disponga, los circuitos incluyen gran cantidad de 
circuitos elementales que realizan las operacionenes logicas descritas en la seccion de la 
logica de computadoras. Algunas operaciones que puede realizar la Unidad Aritmetica (UA):

i) Leer datos desde el almacenamiento a acumuladores.

Esta operacion es simple, asi como lo es la inversa, de escribir datos desde acumuladores a 
almacenamiento. Otra operacion simple es la de dejar un acumulador contenido solamente en 
ceros.

ii) operaciones logicas sencillas.

estas operaciones se realizan con un bit en un acumulador y el otro bit en otro acumulador. 
Como usualmente lo acumuladores tienen largo de una palabra es necesario indicar tambien en 
la operacion sobre el cual el bit dentro de la palabra se desea efectuar la operacion. Asi, 
una instruccion puede ser que  realice la operacion "Y", sobre los acumuladores numeros 5 y 
6, en el bit 2 el resultado dejelo en acumulador  5 (bit 2).

En otros computadores se a extendido la definicion de operaciones logicas a palabras, de modo 
que se puede hacer una operacion Y sobre los correspondientes bits de dos acumuladore, siendo 
el resultado tambien una palabra, por ejemplo "011101"^"110100" es iagual a "010100" ya que 
el primer bit del resultado es igual a la operacion ^ aplicada sobre el primer bit de la 
primera palabra y primer bit de la segunda palabra.

iii) Estas operaciones consisten en el corrimiento de bits, ya sea a la derecha o izquierda. 
por ejemplo si la palabra es de 6 bits, un corrimiento de un bit hacia la izquierda de la 
palabra "100101" nos da "001010". Notese que hemos agregado un cero a la derecha y eliminado 
el ultimo bit a la izquierda. Un corrimiento de dos bits a la derecha de la misma palabra 
"100101" nos da "001001" nuevamente, hemos introducido ceros en las posiciones que quedan 
vacias por efecto del desplazamiento.


 p original ---->             1 0 0 1 0 1                
                               \ \ \ \
 2 bits a la derecha            \ \ \ \
                                 \ \ \ \
 p desplazada--->             0 0 1 0 0 1


En algunos computadores, la operacion de desplazamiento se define como una rotacion, es 
decir, los bits que son eliminados por el desplazamiento son los bits introducidos por el 
otro extremo.


                               1 0 0 1 0 1 
                                  / / / /
                                 / / / /
 palabra rotada                 / / / / 
   2 bits                      0 1 0 1 0 1 


5.- La Operacion suma y resta
------------------------------


La suma es la operacion aritmetica Basica, ya que las otras operaciones aritmeticas 
elementales (sustraccion, multiplicacion y division) pueden describirse en terminos de 
sumas. La suma en un computador siempre se define para dos operandos (cantidades para ser 
sumadas) solamente por  de esta manera se tiene una reserva no mayor que 1, en cada 
posicion, Si se desean sumar mas de dos cantidades, siempre se pueden sumar las dos primeras 
y al resultado sumarle la tercera cantidad y asi sucesivamente.

En general el resultado de una suma queda en un acumulador, pero la ubicacion de los sumandos 
depende del tipo de computador algunos permiten sumar uno solo y otros permite sumar cualquier 
tipo de palabra del almacenamiento a un acumulador.

La sustraccion  es realizada por la UA efectuando una suma. En el caso simple de enteros sin 
signo la resta la realiza el hardware sumando el minuendo al complemento del sustraendo 
incrementado en 1. Como ejemplo supongamos que la palabra tenga 4 bits de largo, la resta 7-3 
es efectuada como se ilustra en la figura 13. Notese que se descarta el bit mas a la izquierda 
(que excede el tamaño de la palabra) del resultado. para otras representaciones de numeros de 
la UA tambien ejecuta la resta a traves de la suma.

(fig13)

                                      0 0 1 1        numero 3

                                      1 1 0 0        Complemento del numero 3

                                      1 1 0 1        Complemento del numero 3 mas 1                            
           
                                      0 1 1 1        numero 7

                                   +  1 1 0 1        Complemento de 3 mas 1
                                     --------
                                    1 0 1 0 0        Resultado = 4
                                    | 
                                bit descartado


6.- Operacion de multiplicacion y Division
-------------------------------------------

Estas operaciones son mas complejas que la suma y la resta. De hecho en los primeros 
computadores no existian instrucciones (circuitos) para multiplicar y dividir, si el 
programador necesitaba realizar una de estas operaciones debia programarlas haciendo sumas, 
restas y desplazamientos.

En los computadores modernos, la multiplicacion la realiza la unidad aritmetica mediante 
desplazamientos y sumas sucesivas, el ejemplo 14 ilustra la multiplicacion de dos palabras de 
4 bits. Cada bit del multiplicador desplazando el multiplicando un bit hacia la izquierda; 
si el bit del multiplicador siendo examinado es 1, el sumando es este multiplicando 
desplazado, y si el bit es 0, el sumando es 0. Notese que el desplazamiento se hace sobre un 
registro de 8 bits, es decir, dos palabras continuas; el resultado tambien ocupa dos palabras. 
Una instruccion de multiplicacion tipica es: "Multiplique los contenidos de los acumuladores 
numero 6 y 9, dejando el resultado en la doble palabra formada por acumuladores 6 y 7".


(fig14)

 Multiplicando          Multiplicador
 
  1 1 0 1         X        1 0 0 1        
                           | | | | 
                           | | | |x     1
                           | | | -------->    |  |  |   |   | 1 | 1 | 0 | 1 |
                           | | |              
                           | | |
                           | | |x     0
                           | |  --------->    |  |  |   | 0 | 0 | 0 | 0 |   |
                           | |
                           | |
                           | |x     0
                           |  ----------->    |  |  | 0 | 0 | 0 | 0 |   |   |
                           |
                           |
                           |
                           |x   1
                            ------------->    |  | 1| 1 | 0 | 1 |   |   |   |
            
                                              --------------------------------


                                                   1   1   1   0   1   0   1



  

La division la realiza la unidad aritmetica por un proceso repetido de desplazamientos de 
restas. El resultado es el cuociente y el resto, un ejemplo tipico de instruccion de division 
es: 

"Divida el numero que esta en la doble palabra formada  por los acumuladores  4 y 5 por el 
numero contenido en el acumulador 8 (quedando implicito que el cuociente quedara en los 
acumuladores del dividendo y el resto en el acumulador del divisor)".

Cuando el computador permite varios tipos de datos numericos, las instrucciones de 
multiplicacion y division debe ser diferente para cada uno de los tipos de datos ya que al 
igual que la suma y la resta estas operaciones dependen de la manera especifica en que los 
numeros estan representados.


7.- Operaciones de comparacion y examen
----------------------------------------

la operacion de comparacion consiste en determinar si una cierta cantidad es mayor o menor o 
igual a cero, o si una cantidad es mayor que la otra, en algunas computadoras la comparacion 
de una cantidad con otra es efectuada por la UA restando una cantidad de la otra y enseguida 
comparando esta diferencia con cero; si esta diferencia en mayor, menor o igual a cero 
entonces respectivamente, la primera cantidad es mayor, menor igual a la segunda.

El resultado de una comparacion se mantiene en la Unidad aritmetica o en la Unidad de control, 
hasta que se ejecuta otra operacion de comparacion.

La operacion de examen permite determinar el estado de indicadores de la CPU, por ejemplo 
puede examinar si el resultado de una operacion aritmetica fue normal o hubo un error (como 
revalsarce de una palabra)

El resultado de comparacion o examen se usa principalmente para modificar el secuenciamiento 
de instrucciones; por ejemplo antes de efectuar una division cuyo divisor en una cantidad 
que varia en el curso de una ejecucion, se debe comparar su valor con cero y en el caso que 
sea igual, claramente no se debe efectuar la division.


8.- La operacion de Edicion
----------------------------

Esta operacion es compleja, su existencia reduce drasticamente el numero de instrucciones 
necesarias para ciertos procesos. La operacion Edicion es una combinacion de reemplazos, 
re arreglos y comparaciones de bits dentro de una determinada secuencia. Un ejemplo del uso 
de esta operacion es la modificacion de una secuencia de caracteres que representa una cifra 
con objeto de dejarla en el formato comercial asi "+000428329" es trasformada en "$4.283,29", 
donde podemos observar la insercion de caracteres y la eliminacion de los ceros a la  
izquierda, desde luego la operacion se realiza sobre los bits que representan los caracteres.

Bueno con esta operacion concluimos una vision simple a lo que es la UA, en un computador 
especifico, cada una de estas operaciones tiene una definicion precisa de la accion que 
realiza ademas de los tipos y largos de operandos, es decir las entidades sobre las cuales 
se aplica la instruccion, que son admisibles a cada una acumuladores o direcciones de 
almacenamiento.

Bueno y para finalizar este texto cachemos algunas de las principales caracteristicas de la 
unidad de control:

La unidad de control es muy compleja en los computadores de ultima generacion, pero sin 
embargo es posible comprender las funciones principales. Observando el diagrama de la figura 
que esta mas abajo que representa la UCP de un computador pequeño, se muestran los registros 
mas importantes y los flujos de informacion entre ellos. El esquema no es representativo de 
los tamaños relativos de registros y almacenamiento, tampoco debe suponerse que necesariamente 
las unidades estan fisicamente separadas; en muchos computadores la CPU y almacenamiento 
estan contenidos en un solo gabinete.


9.- Los registros son los siguientes
-------------------------------------

El acumulador: es el registro que es la entrada y salida a las operaciones logicas y 
aritmeticas, como ya hemos visto. Tambien sirve de registro intermediario a los datos que 
van los dispositivos de entrada y salida desde el almacenamiento y viceversa (tipica de 
computadoras pequeñas).

El registro buffer del almacenamiento: es un registro que mantiene temporalmente datos a ser 
transferidos desde o hacia el almacenamiento.

El registro de proxima direccion: Contiene la direccion en el almacenamiento de la siguiente 
instruccion  a ser ejecutada.

El registro de direccion: contiene la direccion de almacenamiento en la que se esta leyendo 
o escribiendo.

El registro de instrucciones: contiene el codigo de la instruccion que esta siendo ejecutada.

El descodificador: es un dispositivo que interpreta la instruccion contenida en el registro 
de instruccion, y dirige la apertura de compuertas en los flujos de informacion de manera que 
la instruccion se lleve a cabo. Los flujos que en la figura se han representado con flechas 
son trayectorias a traves de la cuales los datos o señales pueden viajar entre los distintos 
registros y dispositivos.


10.- La Unidad de Control se efectua en dos etapas, para cada instruccion
--------------------------------------------------------------------------

a) lectura de instruccion: Primero, el contenido del registro de proxima direccion es 
   enviado al registro de direcciones; se lee el contenido de la direccion de almacenamiento 
   apuntado por el registro de direccion al registro buffer; desde ahi se trasfiere este 
   contenido al registro de instruccion; finalmente, el registro de proxima direccion se 
   incrementa en 1;

b) Ejecucion de la instruccion: El descodificador procede a abrir las compuertas a las 
trayectoria que corresponde con objeto de que la instruccion se efectue.


(fig 15)
        


##############################################
#          UNIDAD ARITMETICA                 #  
#                                            #
#                                            #
#                              ----------    #
#       --------              |          |   #      ----------
#  |--- circuito   ---------> |          |------->   Unidad 
#  |    sumador    <--------  |          |   #        de
#  |    --------              |          |<-------  Contro E/S  
#  |                          |          |   #      ----------
#  |                          |          |   #
#  |   ------------           |acumulador|   #
#  |    Circ. Mult.---------> |          |   #       ########################
#  |---  division  <--------  |          |   #       #   ---------------    #
#  |   ------------           |          |-----------#-> |               |   #
#  |                          |          |<--------------|               |   #
#  |                          |          |   #       #   |  Registro     |   # --------------
#  |                           ----------    #       #   |   Buffer      |   #
#  |                                         #       #   |    del        |---- ALMACENAMIENTO
#  |                                         #       #   |Almacenamiento |   #    PRINCIPAL
#  ------------------------------------------------------>               |<----
#                                            #       #   |               |   #  -------------     
##############################################       #   |               |   #       |
                                                     #   |               |   #       | 
                                                     #   |               |   #       |
                                                     #   |               |   #       |
                                                     #   |               |   #       |
        ##############################################   |               |   #       |
        #   --------                                     |               |   #       |
        #   Registro<------------------------------------ ---------------    #       |          
        #   de                                          /       /           #        |
        #   Proxima                                    /       /            #        |
        #   Direccion                                 /       /             #        |
        #   --------                                 /       /              #        | 
        #      |                                    /       /               #        |
        #      |                                   /       /                #        |
        #      |                                  /       /                 #        |
        #      |                                 /       /                  #        |
        #   -------- <-------------------------------   /                   #        |
        #   Registro            Registro de            /                    #        |
        #   de                  Instruccion <--------------   --------------#        |
        #   Direccion                        ---------------->Descodificador#        |
        #   --------            -----------                   --------------#        |
        #      |                                                            #        |
        #      |                                                            #        |
        #      |                                                            #        |
        #       ------------------------------------------------------------#---------                                                                      
        #                           UNIDAD DE CONTROL                       #
        #                                                                   #
        #####################################################################





Bueno con esto damos fin a este tema :P, de forma muy breve y sencilla, apto para todo tipo 
de personas...... bye y hasta la proxima e-zine.
                                      


