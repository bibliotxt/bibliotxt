[11. Manual de Linux II parte ]==============================================================]
[By _AlphaIce_] [From the DarkStar of DarkSide]...por una Cultura Digital ]==================]
[============================================================================================]


Hola a todos otra vez, jejeje, bueno aqui esta su amigo _Alph@Ice_ para traerles lo que es el
segundo capitulo de este basico pero necesario cursillo, en la primera parte vimos mas que 
nada definiciones de lo que es linux, ahora vamos a pasar a la parte interesante la cual es 
Comandos de Unix/Linux.  En el primer capitulo les quede debiendo la instalacion de RedHat y 
de Slack, pero ya que paso tanto tiempo desde que hice la primera parte que asumo que ya lo 
tienen instalado en su sistema :) la idea es hacer un poco mas adelantado el curso ya que 
seria engorroso repasar la instalacion (cosa que muchos han pasado satisfactoriamente).


0. Comandos Linux/Unix
-----------------------

Lo primero que vemos al iniciar el sistema es el sistema de loggeo el cual nos pide nombre de
usuario y la pass para este, asi que vamos a empezar con los siguientes comandos.

"Exit":

Esta es la orden de desloggeo o sea cuando queremos dejar la terminal libre para que otro 
usuario la utilice, escribimos el comando tal como dice "exit" y listo.

"Who":

Este comando sirve para ver quien o quienes estan conectados actual mente al sistema, se ve 
la info de la siguiente manera... el usuario y la hora en que este entro al sistema.

"mail":

En Unix/linux existe un mecanismo de correo electronico interno que nos permite enviar y 
recibir mails entre los usuarios del sistema, el sismtema nos avisa automaticamente cuando 
tenemos un mensaje diciendonos que tenemos un mail en el mailbox y para revisar nuestro mail 
simplemente tecleamos "mail"

Las opciones que podemos ver del buzon son las siguientes:
?  obvio, lista todos los comandos que podemos utilizar dentro de la orden mail.
q  salimos del buzon.
x  Salimos guardando los cambios hechos en el buzon.
d  Borra los mensajes que se encuentran en el buzon uno a uno.
+  Vemos el proximo mensaje o tambien podemos pulsar enter para ver el siguente mensaje.


"date":

Simple nos muestra la fecha y la hora de nuestro sistema.

"cal":

Nos muestra el calendario del mes y el año que les indiquemos como lo indica el siguiente 
ejemplo

alphaice@DarkStaR:$cal 2 2002

 febrero 2002
do lu ma mi ju vi sá
                1  2
3  4  5  6  7  8  9
10 11 12 13 14 15 16
17 18 19 20 21 22 23
24 25 26 27 28

Por lo que podemos ver podemos pedir el calendario de cualquier mes o año, todo esto a gusto 
del cliente jejejeje.

"uname":

La orden uname se utiliza para obtener información acerca de nuestro sistema  UNIX. Con ella 
podemos saber el tipo de maquina que estamos utilizando, la versión del sistema operativo, el 
tipo de CPU, etc. Las opciones más comunes se    muestran seguidamente:

sintaxis: uname ( opciones )

-a:	visualiza todo acerca de la máquina que estamos utilizando.
-m:	tipo de hardware utilizado
-r:	actualización del sistema operativo
-s:	nombre del sistema
-v:	versión del sistema operativo


"passwd":

Este es uno de los comandos mas importantes ya que con el podemos cambiar nuestra password o 
clave del sistema su uso es muy facil.  Si queremos cambiar nuestra password solo tecleamos 
el comando y despues ponemos la nueva clave y repetimos la clave para verificarla, en el caso 
que seamos root (administrador) y queremos cambiar la password a algun usuario del sistema 
solo debemos teclear el comando junto con el nombre de usuario al cual le queremos cambiar la 
contraseña despues debemos poner la nueva pass y repetirla, ejemplo...

root@DarkStaR:#passwd alphaice  ---> asi le cambiamos la contraseña al usuario alphaice.


"ls":

la orden ls se utiliza para listar los ficheros de un determinado directorio.
sintaxis: ls -(lFrD)

ejemplo:
$ls
anaconda-ks.cfg	informe_unix	informe-unix	mbox


ejemplo:
$ls -F

anaconda-ks.cfg		informe_unix	informe-unix	mbox


ejemplo:
$ls -l
total 40
-rw-r--r--    1 root     root         1078 ene 24 04:24 anaconda-ks.cfg
-rw-r--r--    1 root     root        12363 feb  9 00:08 informe_unix
-rw-r--r--    1 root     root          395 feb  5 10:02 informe-unix
-rw-------    1 root     root        13580 feb  8 22:56 mbox


con la orden ls -l podemos ver el tipo de archivo, de quien es y si esta o no protegido 
contra escritura, ademas podemos saber su tamaño.


ejemplo:

$ls -al

total 104

drwxr-x---    2 root     root         4096 feb  9 00:12 .
drwxr-xr-x   19 root     root         4096 feb  8 22:35 ..
-rw-r--r--    1 root     root         1078 ene 24 04:24 anaconda-ks.cfg
-rw-------    1 root     root        10050 feb  9 00:02 .bash_history
-rw-r--r--    1 root     root           24 jun 10  2000 .bash_logout
-rw-r--r--    1 root     root          234 jul  5  2001 .bash_profile
-rw-r--r--    1 root     root          176 ago 23  1995 .bashrc
-rw-r--r--    1 root     root          210 jun 10  2000 .cshrc
-rw-r--r--    1 root     root        12802 feb  9 00:12 informe_unix
-rw-r--r--    1 root     root          395 feb  5 10:02 informe-unix
-rw-------    1 root     root        20480 feb  5 13:50 .informe_unix.swp
-rw-------    1 root     root        13580 feb  8 22:56 mbox
-rw-r--r--    1 root     root          196 jul 11  2000 .tcshrc
-rw-r--r--    1 root     root         1126 ago 23  1995 .Xresourcesa
$

la orden ls -al nos muestra todos los archivos relacionados a este directorio.

ejemplo:

$ls -ld /etc

drwxr-xr-x   38 root     root         4096 feb  8 22:35 /etc


la opcion -d se utiliza normalmente junto con la opcion -l. Esta opcion la utilizaremos 
cuando queramos ver informaciòn relacionada con un directorio (propietario, derechos , fecha, 
etc.) y no su contenido.


"pwd":

Con este comando podemos ver en que lugar del sistema nos encontramos en ese instante, por 
ejemplo si estamos medios perdidos y no sabemos donde estamos tecleamos pwd y nos muestra en 
que directorio nos encontramos.

Ejemplo:

#pwd
#/root


"cd":

Esta orden viene del las iniciales de las siguientes palabras "change directory" que 
significan cambio de directorio y como dice su nombre esta nos permite cambiar el directorio 
al que queramos ir en ese instante, veamos algunos ejemplos...

alphaice#cd /root/programa
/programa#


lo que ven arriba es que cambiamos de directorio alphaice al directorio programa, que esta 
dentro del directorio root, asi podemos cambiar de directorio a nuestro gusto, claro siempre 
que la ruta sea la correcta.

Ahora si queremos subir un directorio solo tecleamos "cd .." y asi subimos al directorio
de arriba, ejemplo, como antes entramos al directorio programa y ahora queremos cambiarnos
al directorio /root solo debemos poner cd .. y listo estamos en el directorio /root.

Otro que no podemos olvidar es que si hacemos "cd" solo y sin rutas tal como es, nos llevara
al directorio home de nosotros, por ejemplo si hago cd y estoy con el usuario alphaice
llegaremos al directorio /home/alphaice, pero si estamos con root y hacemos cd, llegaremos
al directorio /root.


"mkdir":

Simple, nos sirve para crear carpetas.  Su sintaxis es "mkdir nuevacarpeta" donde nueva 
carpeta es el nombre de la carpeta creada Si lo hacemos en el directorio en que estamos la 
carpeta va quedar donde la hicimos. 
ejemplo de lo anterior

/alphaice# mkdir hola

En este caso estamos en la carpeta alphaice y creamos una carpeta llamada hola, la cual esta 
dentro de la carpeta alphaice.

Tambien podemos hacer una carpeta dictando su ubicacion, esto en el caso de que estemos en un 
directorio y no queramos salir de ahi para crearlo con una ruta, ejemplo:

# mkdir /mnt/LinuxInti

Lo que paso arriba es que estabamos en directorio raiz (/) pero queriamos crear la carpeta 
dentro del directorio mnt.


"rm y rmdir":

El comando rm nos sirve para borrar algun archivo, ojo, tengan cuidado con lo que hacen porque 
este comando ha sido el dolor de cabeza de algunos, tienen que estar seguros si quieren borrar 
el archivo porque este es irrecuperable, cumple con la misma sintaxis que todo, llamar el 
comando + el nombre el archivo a borrar, en cambio rmdir es una herramienta para borrar 
carpetas (lo contrario de mkdir) parecido pero no tanto, para esto ocupamos la misma sintaxis 
que el comando mkdir.


"cp":

Este comando sirve para copiar archivos desde una carpeta a otra o tambien en la misma carpeta
cumple con la misma sintaxis que los comandos anteriores pudiendo copiar desde un directorio a 
otro


"mv":

Este comando tiene dos funciones, la primera es mover el archivo o directorio de un lugar a 
otro, tenganlo claro es mover no copiar el archivo, cumple con las misma sintaxis que todo lo 
de arriba. Su segunda funcion es la de cambiar nombre de un archivo o directorio al que 
queramos su sintaxis es la siguiente:

# mv dos.c tres.c

lo que hicimos fue cambiar el nombre al archivo dos.c al nombre de tres.c.


"chmod":

nos permite modificar los permisos de un fichero. Para poder modificarlos debemos ser 
propietarios de estos.
De forma general, las abreviaciones simbolicas que podemos utilizar son las siguientes:

1. Convertir los campos a digitos binarios, poniendo un 1 en el caso de que queramos activar 
   el campo (rwx), o un 0 en el caso de que queramos desactivarlos.

2. Dividir esos tres digito binarios en tres partes: una para el usuario (propietario), otra 
   para el grupo y una ultima para el resto de los usuarios (otros), de tres dígitos cada uno.

3. Convertir cada uno de los tres grupos en un numero octal.

4. Reunir los tres digitos octal en uno solo, el cual será el modo que le pasemos como 
   argumento a chmod.


u	usuario
g	grupo
o	otros
+	añadir permiso
-	quitar permiso


$ls -l letter
-rwxr-xr--	2	chan	mail	3	apr	1	18:21	letter
$chmod  -w  letter (quitamos el derecho de escritura al fichero letter)
$ls -l letter
-r-xr-xr--	2	chan	mail	3	apr	1	18:21	letter
$chmod o+x letter (añadimos el derecho se ejcucion al resto de los usuarios)
-r-xr-xr--	2	chan	mail	3	apr	1	18:21	letter
$ls -l letter
-r-xr-xr-x	2	chan	mail	3	apr	1	18:21	letter


"chown" y "chgrp":

La orden chown se utiliza para cambiar un fichero o un grupo de ficheros de propietarios. La 
orden chgrp cambia el fichero de un grupo de usuarios a otro. Solamente los dueños de los 
ficheros pueden hacer esos cambios.

sintaxis: chown usuario fichero
	  chgrp usuario fichero


Ejemplos:

$ls -l tcp
-r-xr-xr-x	1	chan	users	1239	apr	1	18:21	tcp
$chown fernando tcp
$ls -l tcp
-r-xr-xr-x	1      fernando users	1239	apr	1	18:21	tcp
$

Inicialmente el propietario era chan ahora es fernando.

Ejemplos:

$ls -l carta
-r-xr-xr-x	1	chan	mail	1239	apr	1	18:24	carta
$chgr users carta
$ls -l carta
-r-xr-xr-x	1       chan	users	1239	apr	1	18:24	carta
$
Inicialmente el gruppo era mail ahora es users.


"id":

La orden id devuelve el identificador (nùmero) de usuario y de grupo del usuario que le 
indiquemos, Si no  se le indica el usuario, id visualizara los identificadores asociados al 
usuario que invoca la orden. 

sintaxis:id (-ug) (usuario)

Opciones:

-u	visualiza sòlo el UID (identificador del usuario)
-g 	visualiza unicamente el GID (identificador de grupo).


Ejemplo:

$id
uid=0(root) gid=0(root) grupos=0(rootL,1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)


"su":

Lo utilizamos para cambiar de un usuario a otro sin salir de la sesion en la que estemos por 
ejemplo somos usuarios normales y queremos ser root (claro tienen que serlo o tener la 
contraseña para serlo) solo escribimos "su", y para salir de ese usuario se escribe exit pero 
si queremos ser otro usuario, escribimos su acompañado del nombre de usuario al cual queremos 
acceder.


"mount":

Este comando lo usamos para montar dispositivos, a montar, me refiero a ponerlos a trabajar
me explico, si queremos cargar un cdrom o un disquette debemos usuar este comando, ya que
el sistema no los carga solo.

Veamos la sintaxis: mount (fichero_dispositivo) (directorio)

Ejemplo:

$mount /dev/fd0 /mnt/floppy
$
Hemos montado un diskette, para su posterior uso.

Los dispositivos mas comunes son el fd0 (el disquette) y el cdrom (tal como dice lo usamos 
para montar discos compactos), existen mas dispositivos e incluso podemos montar una imagen 
iso o incluso un disco duro pero para eso tienen que poner algunas opciones (man mount).


"umount":

Bueno si montamos un dispositivo, tambien podemos desmontarlo y para eso es esta orden, pero 
una indicacion si montaron un dispositivo como un cdrom y a este quieren sacarlo deben 
desmontarlo, nunca lo olviden, tambien debemos desmontar si queremos cambiar el cd o el 
disquette por otro que queramos usar y volverlo a montar para verlo.

La sintaxis es la siguiente: umount fichero_dispositivo_bloque

Ejemplo:

$umount /dev/fdo
$


"man":

El mas importante de todos ya que con este obtenemos informacion de cualquier comando, este 
lo usamos cuando no sabemos para que sirve un comando, llamando a la pagina de manual de este, 
su sintaxis es la siguiente:  

man nombre_del_comando.

Dicho  manual esta dividido en secciones, que contienen lo siguiente:

sección 1. Ordenes y programas de aplicación.

sección 2. Llamadas al sistema.

sección 3. Subrutinas.

sección 4. Formatos de ficheros.

sección 5. Misceláneas.

sección 6. Juegos.

sección 7. Ficheros especiales.

sección 8. Procedimientos de mantenimientos del sistema.

Ejemplo:

$man clear
clear(1)

NAME
clear- clear terminal screen

SYNOPSIS
clear

DESCRIPTION

Clear your screen if this is possible. It reads the TERM environment variable for the terminal 
type and then reads the appropriate termin of data base to figure outhow to cleat screen.
$


Depedida
---------

Bueno queridos pinguinos hoy los tengo que dejar para una proxima edicion donde vamos a ver
algunos otros comandos los demas mas importantes que existen finalizando los comandos y
pasando a los directorios, sus funciones y demases. Posterior a eso pasamos a ver ya la 
configuraciones del sistema y servidores linux.

Queridos pinguinos cuidense pasenla bien y practiquen "La practica hace al maestro", cualquier 
duda a mi mail, ok. cuidense bye

_Alph@Ice_ The DarkStaR from the dark side.
"El Pinugino de Cavancha", "Por una Cultura Digital".




