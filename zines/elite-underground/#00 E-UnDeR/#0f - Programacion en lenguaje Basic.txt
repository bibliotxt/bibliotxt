

-[b-04]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=[ b-04@midwar.com ]-
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=[ #0f ]-=-=-=-=
-[ #ELITE-UNDERGROUND ]=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-[ Programación en Lenguaje Basic ]-


Indice:
        
              1.0 - .................................. Introduccion
	      2.0 - .................................. ¿Que es basic?
	      3.0 - .................................. PRINT
              3.1 - .................................. PRINT EN EXPRECIONES MATEMATICAS
	      3.2 - .................................. PRINT, NEXT, & FOR
	      3.3 - .................................. PRINT, NEXT, FOR, & STEP
	      3.4 - .................................. PRINT & LOCATE
	      3.5 - .................................. PRINT & SCREEN
	      3.6 - .................................. PRINT , FOR , NEXT , SCREEN  & COLOR
	      4.0 - .................................. VARIABLES
 	      5.0 - .................................. CADENAS
	      6.0 - .................................. PRINT & INPUT
	      6.1 - .................................. PRINT , INPUT & CADENAS
	      7.0 - .................................. SENTENCIAS : IF , THEN  & ELSE
	      8.0 - .................................. DESPEDIDA...

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

1.0 - Introduccion

Bueno, este es el primer capitulo sobre programacion, alguno se preguntara porque eleji BASIC,
la respuesta es simple, no es porque sea un fanatico del windows pero si me pusiece a 
hablar de Bash me saldria algo confuso e incompleto, basic es un lenguaje muy simple y decidi
que estaria bien para empezar este articulo. Pero para los que ya estan cansados de windows, 
estare escribiendo algo de C en proximas ediciones.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

2.0 ¿Que es basic?

El Basic es un lenguaje de programacion que nacio en el año 1969 con el objetivo de ser tan facil
que hasta un usuario que no tenga conocimientos de informatica pudiese usarlo.
El Basic tuvo mucha competencia con lenguajes como C, Pascal, ASM y otros, debido a que estos
lenguajes eran mas estructurados y con compiladores mas avanzados el Basic se fue quedando atras.
El Basic fue evolucionando hasta llegar a lo que hoy conocemos como Visual BASIC.
A continuacion explicare sobre la programacion en BASIC.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

2.1 ¿Que necesito para empezar?

Para empezar necesitaras un compilador de Basic, como puede ser el famoso Quick Basic que viene
incluido en el CD de windows en la carpeta OldDos (qbasic.exe & qbasic.hlp) y tambien nos 
podriamos conseguir un compilador para pasar nuestros archivos .bas a .exe en www.qbasic.com.ar .

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

3.0 PRINT

La funcion PRINT indica al ordenador que tiene que escribir un texto en la pantalla.
E.J: Abrimos el Qbasic y ponemos :

10 PRINT "Esto es una prueba" 

Ahora apretamos F5 o vamos a "Ejecutar" y elejimos la Opcion "Iniciar". Se nos pondra una
pantalla negra y dira "Esto es una prueba".

3.1 PRINT EN EXPRECIONES MATEMATICAS

Si nosotros queremos que el PRINT nos haga una suma ponemos :

10 CLS
20 PRINT 2 + 2

Y ahora nos aparecera en la pantalla el resultado de 2+2 (4).

Si queremos restar:

10 CLS
20 PRINT 2 - 1

Y ahora aparece el resultado de 2-1 (1).

Si queremos multiplicar:

10 CLS
20 PRINT 2 * 2

Y ahora nos multiplicara y nos mostrara el resultado de 2 x 2 (4).

Si queremos dividir:

10 CLS
20 PRINT 4 / 2

Y  ahora nos aparecera el resultado de 4 dividido 2 (2).

Si nosotros queremos mostrar el resultado de una multiplicacion en una frace seria asi:

10 CLS
20 PRINT "2x2 es igual a:" ; 2*2;

Y veremos la frase "2x2 es igual a: 4"

 
Analizando un poco este codigo, vemos la instruccion "CLS", esto sirve para borrar otros trabajos
que hallamos hecho, si ponemos PRINT "HOLA" y lo ejecutamos y despues volvemos borramos y ponemos
PRINT "Hola2" y lo ejecutamos, nos encontramos con que dice "Hola" y "Hola2", con la funcion CLS
borramos otros trabajos que hallan quedado guardados.
Tambien se preguntaran porque aparecen numeros en cada linea, no es una obligacion ponerlos, nada
mas sirve para ser mas ordenados a la hora de hacer "go to" o comandos que salten a otras lineas,
Pero eso lo veremos mas adelante.
Las ";" indican el fin de una instruccion.

3.2 PRINT , NEXT & FOR

Ahora veremos el uso de instrucciones NEXT & FOR vinculadas con el PRINT.
E.J:

10 CLS
20 FOR x = 1 to 5
30 PRINT "Esto es una prueba"
40 NEXT x

Apretamos F5 y veremos en la pantalla 5 veces la frace "Esto es una prueba".
Como vemos, la x es una variable, la variable x tiene el valor 1, cuando el programa ejecuta el
"NEXT x", comprueba si x es 5, si no lo es vuelve a la instruccion FOR hasta llegar a 5.
Si nosotros modificamos la instruccion "FOR" y ponemos que llegue hasta 10 se ejecutara el PRINT 
hasta que llegue a 20.

3.3 PRINT , NEXT , FOR , & STEP

La instruccion STEP es una especie de "divisor".
E.J:

10 CLS
20 FOR x = 1 to 6 STEP 2
30 PRINT "Probando el STEP"
40 NEXT x

Ahora veremos 3 veces la frace "Probando el STEP" en la pantalla.

Lo que hiso el STEP es dividir la frace "Probando el STEP" (que estaba programada para decirce 6
veces) en 2, y por eso vimos la frace "Probando el STEP" 3 veces y no 6, si ubiesemos puesto 
"STEP 3" la ubiesemos visto 2 veces.

3.4 PRINT & LOCATE

La instruccion LOCATE nos sirve para ubicar un texto en una determinada parte de la pantalla.
E.J:

10 CLS
20 LOCATE 12, 40
30 PRINT "Probando el LOCATE"

Ahora nos encontramos con la frace "Probando el LOCATE" en el medio de la pantalla (si usamos una
resolucion de 800*600).
Lo que hace el LOCATE esubicar un texto en una linea y columna determinada, podemos ir probando 
distintos numeros y comparando resultados.

3.5 PRINT & SCREEN

La instruccion SCREEN sirve para agrandar el tamaño del texto. 
E.J:

10 CLS
20 SCREEN 12
30 PRINT "Probando el SCREEN"

Ahora veremos en nuestra pantalla el texto "Probando el SCREEN" en tamaño mas grande de lo normal
pero todavia se puede hacer mas grande, examinemos el siguiente ejemplo:

10 CLS
20 SCREEN 13
30 PRINT "Probando el SCREEN"

Ahora nos aparece esta frace, pero mas grande todavia, pero el SCREEN 13 podria traer confligtos
con algunas resoluciones, asi que conviene manejarnos con SCREEN 12.

3.6 PRINT , FOR , NEXT , SCREEN  & COLOR

Ahora veremos como escribir de distinto color.
Con el siguiente ejemplo veremos la lista de colores :

10 CLS
20 SCREEN 12
30 FOR x=1 to 15
40 COLOR x
50 PRINT "Este color es el n°:" ; x ;
60 NEXT

Esto nos mostrara un mensaje en cada color y el numero que le corresponde, esto sale todo pegado
para que no ocurra esto modifica la linea "50 PRINT "Este color el el n°:" ; x ; " por:
"50 PRINT "Este color es el n°:" , x" (sin las comillas iniciales).

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

4.0 VARIABLES

Una variable es la manera de cargar informacion a un termino.
E.J:

10 CLS
20 abc = 123
30 PRINT abc

Y nos encontramos con el texto "123" en la pantalla, lo que estamos haciendo es definir la 
variable "abc" como "123". 
Los nombres de las variables NUNCA pueden tener nombre de instrucciones como PRINT, CLS, COLOR...
Nunca el primer caracter de una variable puede ser un numero, siempre tiene que ser una letra 
(a,Z).

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

5.0 CADENAS

Una cadena es una manera de guardar la informacion de una variable.
E.J:

10 CLS
20 a1$ = "Cadena1"
30 a2$ = "Cadena2"
40 PRINT ""; a1$
50 PRINT ""; a2$

Y ahora veremos el texto "Cadena1" & "Cadena2" en la pantalla, esto tambien se podria hacer asi:

10 cls
20 a1$ = "Cadena1"
30 a2$ = "Cadena2"
40 PRINT a1$
50 PRINT a2$

Lo que estamos haciendo es cargar la cadena y escribiendola en la pantalla.
Se preguntaran que es el signo "$", el signo $ indica que es una variable de cadena.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

6.0 PRINT & INPUT

La instruccion INPUT, permite leer texto que ponga el usuario que use el programa.
E.J:

10 CLS
20 INPUT "Escribi tu nombre:" ; nombre$
30 PRINT "Tu nombre es:" ; nombre$

Y ahora nos preguntara nuestro nombre y cuando lo ingresemos y apretemos <ENTER> nos dira 
"Tu nombre es: <NoMBRE>". 
Lo que hisimos fue guardar el nombre que pusimos en la cadena "nombre$".

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

6.1 PRINT , INPUT & CADENAS

Ahora veremos como hacer para que el programa se detenga y vuelva al estado cuando apretemos una
tecla.
E.J:

10 CLS
20 PRINT "Presiona cualquier tecla para continuar"
30 x$=INPUT$(1)
40 PRINT "La tecla que apretaste es:" ; x$

Ahora el programa se detendra y cuando presionemos una tecla nos dira la tecla que apretamos.
Lo que hisimos fue definir la cadena x para que cuando apretemos una tecla esta siga (INPUT$(1))
Si quisiesemos que pare y no siga hasta que apretemos dos teclas tendriamos que cambiar el numero
del INPUT por 2, E.J: x$=INPUT$(2) . 

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

7.0 SENTENCIAS : IF , THEN & ELSE

Lo que hace la sentencia "IF" es comprobar si "tal cosa" es igual a "tal otra".
"THEN" seria algo como "Si no es asi, hace esto".
Y "ELSE" seria algo como "Si el IF es correcto, me ejecuto yo".
Ahora veremos un ejemplo para explicar esto mejor:

10 CLS
20 INPUT "¿Cuantas ruedas tiene tu auto?:", ruedas
30 IF ruedas < 4 THEN
40 PRINT "Nunca vi un auto de tan pocas ruedas."
50 ELSE PRINT "Tu auto es normal."
60 END IF

Lo que hace esto es comprobar si tu auto tiene 3, 2 o 1 rueda te dira "Nunca vi un auto con tan 
pocas ruedas" Y si ponemos 4 te dira "Tu auto es normal".
La funcion "END IF" indica que se termina la instruccion IF.

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

8.0 DESPEDIDA...

Bueno, hasta aca llega la primera parte de este tutorial de programacion en BASIC.
En la proxima edicion veremos como crear menus, poner musica a nuestros programas, guardar la
informacion, crear cubos y circulos y algunas cosas mas.
Cualquier duda, comentario, insulto, o lo que sea: b-04@MIDWAR.COM

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
bY: b-04  2002 © ® -  Para: Elite-Underground Team  Ezine n°: 0 .