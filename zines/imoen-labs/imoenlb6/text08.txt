			tutorial VBS
			-=-=-=-=-=-=
[autor: madhack]

Bueno vamos a ver en este numero algo mas divertido que los 
tipicos source code que os pongo, hoy aprenderemos a hacer ficheros 
de script gracias visual bascic y la tecnologia de microsoft y su 
fantastico windowsssssssssssssss dependiendo lo largo que vea 
el curso quiza decida hacerlo en dos capitulos asi que paciencia 
chikos si no lo acabo todo en este numero

Bueno para empezar necesitas tener instalado el windows y ademas
tenemos que tener el window scrinting host que casi todos los windows
a partir del 98 lo tienen instalado por defecto way is cool XD

Bueno pues nada esto no es ni mas ni menos que un poco el presente de
los ficheros bat del msdos, solo que ahora mas divertido bajo windows
Vista un poco una ligera introduccion empezamos ya con lo divertido 
si os parece.
Los ficheros que contengan ordenes vbs debe acabar justamente en *.vbs
logico no XDDD

bueno vamos a empezar con ejemplillo para los que esteis hambrientos 
de conocimiento :

fich1.vbs
wscript.echo "hola"

al guardar y hacer doble click obtendras una bonita caja que te dira hola
a que mola!!! pues solo el principio sigue leyendo.
Seguro que con esta gilipollez alguno ya estra flipando XD de que hes un haxor
y que sabe hacer que windows le diga hola XDD

Bueno pues vamos a contar mas cosas sobre como  poner mas ventanas que nos 
digan cosas.

Hay otra orden que nos permite poner mensajes en pantalla, lo mejor sera ponerte 
un ejemplo:

fich1.vbs
msgbox("hola")

facil y sencilla incluso mas que la anterior verdad, veremos que opinas despues
de esto, esta ventana permite varios parametros, como un numero y un titulo

1>MsgBox "mensaje",numero,"titulo"

En mensaje el mensaje 
En numero un numero para indicar que tipo de venta quieres poner:
	0 = ventana Aceptar
	1 = ventana Aceptar/Cancelar
	2 = ventana Anular/Reintentar/Omitir
	3 = ventana Si/No/Cancelar
	4 = ventana Si/No
	5 = ventana Reintentar/Cancelar
(hay mas, consulta el apendice 1 para ver los tipos de ventana 
 que puedes hacer segun el numero) 
En titulo un nombre para la ventana el que sale en la zona azul.

fichmbox.vbs
msgbox("hola",2,"zona de titulo")

Como en todo los lenguajes de programacion y esto tambien lo es aunque 
sea interpretado o de script o como coño lo llamen los expertos programadores
hay variables, no te voy a dar un charlon sobre variables solo lo 
justo y necesario para poder hacer mas cosas, 

Que es una variable?
Pues un trozo de memoria donde se guarda algo que puede variar, y que puedes
acceder al llamar a ese trozo de memoria por el nombre que tu le hayas 
puesto:

EJ trozo1= 15

Con eso un se coge un trozo de memoria llamado trozo1 y se le asigna el valor
15, y se puede acceder mediante la llamada a trozo15 

fich2.vbs

trozo1=15
wscript.echo trozo1

Bien pues en esa variable puede haber lo que te salga el culo
numeros y letra.

Bueno en visual basic y muchos mas lenguajes usa una cosa llamada arrays
que simplemente es la union de varias variables bajo el mismo nombre, y 
la forma de acceder a ca una de ellas es mediante un indice.
En vbs para delcarar un array se usa la palabra reservada DIM, ademas 
tambien se usa para delcarar la variable, lo cual n es obligatorio pero 
si recomendable

Ejemplo :

fich3.vbs
dim nombre
nombre="ana"
wscript.echo nombre

Bien ya sabemos poner mensajes y tambien sabemos usar variables , 
aunque solo sea de una forma muy simple pero ya hemos avanzado mucho.

Esta calro que mil tipos de variables , por no hablar d eobjetos y tal 
pero eso quiza sea en otro numero o en cualquier manual sobre
introduccion a la programacion aqui estamos pa otra cosa XDD

A partir de aqui usare la orden msgbox para los mostrar textos 

Bueno vamos a ir juntando cosas imaginate que en una variable pones 
tu nombre y quieres que salga en un mensaje de texto algo parecido a 
hola + el nombre que tienes guardado en la variable 

Pues esto es muy simple fijate en el ejemplo:

fich4.vbs
dim nombre
nombre = "ana"
msxbox ("hola"&nombre)

con eso hacemos que salga el mensaje que hemos escrito mas lo que haya dentro 
de la variable.

Venga vamos a ver como le pedimos datos al usuario y asi aumentaremos 
la diversion bastante.

Para eso usaremos la opcion inputbox, que es muy facil de usar y que os 
proporcionara horas de diversion, aqui esta como se usa

inputbox("lo que quieras","lo que quieras")
la primera parte se usa para indicar la pregunta y la 
segunda parte es el titulo de vantana.

fich5.vbs
dim nombre
nombre=inputbox("dime tu nombre lameruzo","nombre del lamer")
msgbox("nombre")

Fijate nombre es el nombre de la varaible y por eso van SIN COMILLASSSSSS
(los nombres de las variables para mostrar van sin comillas ok???)

Coño hemos pedido un nombre, lo hemos almacenado en una variable
que se llama nombre y despues lo hemos mostrado mediante una ventana 
de texto well done somos haxorrrrrrrrrrrr

Te propongo un varios ejercicios :

1) uno que le pida al usuario su nombre y apellido y despues se los 
muestres
2) tu tendras una variable llamada numero1=1, y le pediras al usuario 
que te diga otro numero y lo guardaras en otra variable llamada numero2
y al final le diras al usuario cual es la suma de las 2. 

soluciones al final apendice2

Bueno continuamos un poco mas vamos a ver que podemos hacer con las cosas
que el usuario nos mete por el culo, digo nos proporciona mediante 
las inputbox.
Para ese trabajo hay unas cosas llamadas operadores , o condionales
la forma de usarse son del tipo:

dos variables a y b 
a=1 y b=2

si a=b entonces 
a mayor que b
sino 
b mayor que ha 

y en codigo seria asi 

if a=b then
msgbox("a es mayor que b")
else
msgbox("b es mayor que a")
end if

Tampoco es demasiado complicado verdad joder al menos eso creo yo,
seguro que tu eres un haxorwin nada puede detenerte.

Vamos a hacer un ejemplillo algo mas complicoa pa q te enteres
y asi mezclo to lo qu ehemos visto que te parece ?

fich7.vbs
dim nombre
nombre="madhack"
nombre2=inputbox("dime tu nombre","windows tiene vida")

if nombre2=nombre then
msgbox("te reconozcotu eres "&nombre)
else
msgbox("no te conozao capullo apaga el puto pc")
end if 

Bastante claro y sencillo si el nombre que pone el usuario coincide con 
el de la variable le digo el primer mensaje y si no pues el ultimo
bien verdad ? seguro que esto ya te empieza a gustar, ya podemos hacer cosas 
segun nos diga el usuario nos responda de alguna forma u otra.


Otra cosa que debermos aprender es hacer que las cosas se repitan 
y en vbs hay varias formas de hacer esto aqui solo te contare una 
y para que mas santo tomas mientra sepas alguna forma que mas dan las demas 

bueno para repetir cosas usaremos el conjunto de instrucciones do ..loop
 ejemplo :

virus.vbs
do 
msgbox("te jodes que ahora te toca reiniciar")
loop

si lo ejecutas estara hasta el infinito y mas alla repitiendose el msgbox()
y solo podras quitarlo reiniciando el pc que way ehhh 
Joder con esto ya somos haxorwin de los wenos wenos
Y como podemos controlar el numero de repeticiones ? 
pues facil con una partilucilla llamada until 
es decir repite hasta que algo se cumpla, con esto mucho mejor verdad ?

bueno veamos un ejemplillo:

a=10
do 
msgbox("windows es la caña")
a=a-1
loop until a=5 

Esto hace que el bucle se repita solo 5 veces 
a=10 muestra una movida y cada vez la a vale uno menos asi hasta llegar a 5 luego 
despues se cumple la condicion de 5=5 y se termina de repetir 
a que mola ? 
Ahora prueba este y me dices cual es la diferencia:

a=10
do  until a=5
msgbox("windows es la caña")
a=a-1
loop 

Aqui solo se repite 4 veces porque cuando es 5 ya no se hace otra vez mas 
fijaros lo que se consigue con cambiar la comprobacion.
An la primera forma el tema se repite por lo menos una vez
y en la segunda forma puede que la movida no se repita ninguna vez si llega el caso 
obserba:

a=5
do  until a=5
msgbox("windows es la caña")
a=a-1
loop 

esto no se repite ninguna vez yeah fuckin men is god XDD

Bueno repasemos que hemos aprendido:
sabemos mostrar datos
sabemos usar variables
sabemos leer datos del usuario
sabemos hacer comprobaciones con los datos del usuario
sabemos repetir cosas
sabemos latin , ruso y hasta como convertir en oro el laton

Lo que viene ahora es mas interesante y seguro que le vamos a encontrar
utilidad, pero inebitablemente vamos a tener que contar antes algunas 
cosas que quiza no te resulten divertidas, si señor los objetos XDDDD, 
aunque quia no sea necesario del todo.

Veamos que coño es un objeto ? pues simple para vbs script podemos 
decir que son rutinas especiales que nos simplifican la vida
cuando programamos en vbs, puesto que son llamadas a cosas
que ya estan hechas como casi todo en windows, veamos  como 
crear un objeto de estos:

Set variablequenecites = CreateObject("nombreOBJetos que de la gana")

Esto es mas facil aun cuando veas un ejemplo en concreto pero 
antes te cuento una cosa mas, los objetos que mas vas a usar 
que no quiere decir que sean los unicos son los siguientes:
Scripting.FileSystemObject" y "WScript.Shell".
Asi que empezaremos por hacer cosas con el primero si os parece.

obj1.vbs
Set variable1 = CreateObject("Scripting.FileSystemObject")
variable1.CreateFolder "C:\imoenalbas"

guardalo y ejecutalo, que divertido acabamos de crear una carpeta 
es facil ehh hemos enlazado variable uno al objetofilesystem, y de este
hemos usado el parametro createfolder para hacer la carpeta es sencillo 
verdad pues contiuamos haciendo mas cosas por ejemplo crear un ficherillo:

obj2.vbs
Set variable1 = CreateObject("Scripting.FileSystemObject")
variable1.CreateTextFile "C:\fichero1.txt"

Ahh espera recuerda que donde yo he puesto .txt tu puedes poner la 
extension que te de la gana vale asi que espero que ya vayas teniendo 
alguna idea feliz XD.
Y si quieres borrar lo qu ehas hecho pues nada le pones 

obj3.vbs
Set variable1 = CreateObject("Scripting.FileSystemObject")
variable.DeleteFolder "imoenlabs"

Para copiar y mover ficheros consultar el apendice 2
Vamos a liar el asunto todavia un poco mas 
En fin que lo mejor sera poner un ejemplo comentado y 
luego el libre de movidasseguro que lo vas a enteder y caso 
contrario mejor lee la computer hoy: XD

obj4.vbs
Set variable1 = CreateObject("Scripting.FileSystemObject")
Set variable2 = variable1.CreateTextFile (".\muere_perro.txt", True)
*fijate en el true esto indica que si existe el fichero o si no, le
*da igual lo sobre escribe, si pones False y el fichero ya existe 
*no lo sobre escribe.
variable2.WriteLine "=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
*writeline escribe y luego hace un salto de linea
variable2.WriteLine "Tutorial de VBS" 
variable2.Write "p" 
variable2.Write "o"
variable2.Write "r"
*write escribe pero sin salto de linea
varaible2.WriteBlankLines "1" 
*writeline deja X lineas en blanco
variable2.WriteLine "MADHACK" 
variable2.WriteBlankLines "2" 
varaible2.WriteLine "Vitsita imoenlabs.cjb.net" 
variable2.WriteBlankLines "1" 
variable2.WriteBlankLines "1"
variable2.WriteLine "-------------------------------------"
variable2.Close
*cierra el fichero

Las lineas con * son las que yo pongo pa q te enteres si lo quieres probar 
pues la quitas y lo pruebas y obtedras un fichero de texto con algo escrito dentro
simpatico ehhh
creo que si le pones .delete borra el fichero.
Cambiamos objeto y nos vamos a uno muy interesante el  WScript.Shell
que principalmente nos servira para ejecutar cosas 
vemaos el ejemplo:

ejecutar.vbs
On Error Resume Next 
Set varaible1 = CreateObject("WScript.Shell")
varaible1.Run "C:\texto.txt"

Esto ejecuta el fichero que le hayas puesto, pero tambien le puedes hacer
que ejecute una web mira :

ejecutar2.vbs
On Error Resume Next 
Set varaible1 = CreateObject("WScript.Shell")
varaible1.Run "www.google.com",6 

Otra cosa te habras dado cuenta de que se ha incluido una linea al 
principiobueno pues esa linea sirve para que en caso de producirse 
un errorno salga mensajito en panatalla y se entere el usuario de 
lo que se esta cociendo. Aparte he añadido un ,6 eso sirve para 
que se ejecute minimizadoen el apendice 3 pongo una lista de 
que se puede hacer esta en ingles no me apecio traducirlo 
pero es facil de leer.

Pasemos a estudiar el ultimo de todos los objetos el Network
con ligero ejemplo de como mapear una unidad de red 
es decir usar una carpeta de algun pc de la red como una unidad
local:

network.vbs
Set varaible1 = WScript.CreateObject("WScript.Network")
variable1.MapNetworkDrive "S:", "\\nombrepc\carpeta"

hemos mapeado s: a la carpeta\\nombrepc\carpeta

network2.vbs
Set WshNetwork = WScript.CreateObject("WScript.Network")
WshNetwork.RemoveNetworkDrive "S:", True, True
WshNetwork.RemoveNetworkDrive "\\server\share", True, True

Y con esto la desconectamos, mas cosas sobre esto en el apendice2
pa q te diviertas.
Bueno amigos espero que lo se hayan divertido leyendo y probando
los script, tambien espero que les sirva de algo seguro que hay cosas
que hacen mil veces y esto les ayudara.

Si alguien se anima que intente hacer lo siguiente que haga
un fichero que se copie a si mismo, y que apunte a una web 
que lo difunda por internet y vera como ha creado el nuevo virus XDD

Ahora si amigos que lo pasen bien 


APENDICE 1
0 = ventana Aceptar
1 = ventana Aceptar/Cancelar
2 = ventana Anular/Reintentar/Omitir
3 = ventana Si/No/Cancelar
4 = ventana Si/No
5 = ventana Reintentar/Cancelar

6 al 15 = ventana Aceptar
2
16 = ventana de error Aceptar
17 = ventana de error Aceptar/Cancelar
18 = ventana de error Anular/Reintentar/Omitir
19 = ventana de error Si/No/Cancelar
20 = ventana de error Si/No
21 = ventana de error Reintentar/Cancelar

22 al 31 = ventana Aceptar

vbquestion = ventana de pregunta Aceptar
32 = ventana de pregunta Aceptar
33 = ventana de pregunta Aceptar/Cancelar
34 = ventana de pregunta Anular/Reintentar/Omitir
35 = ventana de pregunta Si/No/Cancelar
36 = ventana de pregunta Si/No
37 = ventana de pregunta Reintentar/Cancelar

38 al 47 = Ventana Aceptar

vbexclamation = ventana de exclamación Aceptar
48 = ventana de exclamación Aceptar
49 = ventana de exclamación Aceptar/Cancelar
50 = ventana de exclamación Anular/Reintentar 
51 = ventana de exclamación Si/No/Cancelar
52 = ventana de exclamación Si/No
53 = ventana de exclamación Reintentar/Cancelar

APENDICE2

copiar.vbs
Set varaible = CreateObject("Scripting.FileSystemObject")
variable.CopyFile ".\ejemplo1.vbs","C:\ejemplo1.txt"

mover.vbs
Set variable = CreateObject("Scripting.FileSystemObject")
varaible.MoveFile ".\pamela.vbs", "C:\pamela.vbs"

nombre de usuario
Set WshNetwork = WScript.CreateObject("WScript.Network")
WScript.Echo "Username: " & WshNetwork.UserName
 
Con esto veras el nombre del usuario de la red lo puedes usar
junto a mapear las unidades

nombrepc
Set Network = WScript.CreateObject("WScript.Network")
WScript.Echo "Computer Name: " & Network.ComputerName

con este otro podras ver el nombre del pc

APENDICE3

Windows Style Description 
0 Hides the window and activates another window. 
1 Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time. 
2 Activates the window and displays it as a minimized window. 
3 Activates the window and displays it as a maximized window. 
4 Displays a window in its most recent size and position. The active window remains active. 
5 Activates the window and displays it in its current size and position. 
6 Minimizes the specified window and activates the next top-level window in the Z order. 
7 Displays the window as a minimized window. The active window remains active. 
8 Displays the window in its current state. The active window remains active. 
9 Activates and displays the window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when restoring a minimized window. 
10 Sets the show state based on the state of the program that started the application. 

