
      KRIPTOPOLIS presenta...

      _______________________________________________________________

                    C  R  I  P  T  O  G  R  A  M  A
      _______________________________________________________________

         Número 26
                                               15 de Junio del 2000
      ________________________________________________________________     


      SUMARIO:

        1. SOAP
        2. Reimpresiones de CriptoGrama. 
        3. Noticias.
        4. Novedades desde Counterpane.
        5. Java y virus.
        6. En la ratonera: Infraworks.
        7. El Estándar de Cifrado de Datos (DES).
        8. Comentarios de los lectores.
 

    -- Ejemplar gratuito distribuido a más de 20.000 suscriptores --
     
      ________________________________________________________________

              * Suscripción gratuita:
                http://www.kriptopolis.com/subs.html

              * Baja conjunta de Criptograma y Boletín de Kriptópolis:
                http://www.kriptopolis.com/subs.html

              * Números anteriores:
                http://www.kriptopolis.com/criptograma/cg.html
     _________________________________________________________________




        1. SOAP
        ===================================================
        Por Bruce Schneier
        Traducción: David Gómez
        http://www.kriptopolis.com/criptograma/0026_1.html


SOAP (Protocolo de acesso a objetos simples) es un standard
propuesto para enlazar aplicaciones de Internet que se ejecutan en
diferentes plataformas, haciendo uso de mensajes XML. SOAP esta
diseñado para conectar programas que se ejecutan en diferentes
arquitecturas, independientemente de qué Sistema operativo/CPU haya
en cada uno. Son básicamente llamadas a procedimientos remotos (RPC)
que se implementan a través de HTTP con contenido XML. Como no se
requiere ninguna seguridad en HTTP, XML o SOAP, es bastante simple
suponer que diferentes personas tratarán cualquier cuestión de
seguridad de diferentes maneras, llevando a distintos agujeros en
implementaciones distintas. SOAP va a abrir una nueva vía a las
vulnerabilidades de seguridad.

SOAP ha sido diseñado por un puñado de compañías, pero es
instructivo leer las palabras de la misma Microsoft sobre seguridad
y SOAP:

"Actualmente, los desarrolladores se esfuerzan en hacer que sus
aplicaciones distribuidas funcionen en Internet cuando hay firewalls
de por medio. Ya que la mayoría de los firewalls bloquean todos los
puertos menos unos pocos, como el puerto 80 estándar de HTTP, todos
los protocolos de objetos distribuidos de hoy en día -como DCOM- se
ven afectados, ya que dependen de puertos asignados dinámicamente
para la invocación de métodos remotos. Si se puede convencer al
administrador del sistema para abrir un rango de puertos en el
firewall, se podrá dejar a un lado este problema siempre que los
puertos usados por el protocolo de objetos distribuidos estén
incluidos."

Para complicar las cosas, los clientes de las aplicaciones
distribuidas que se encuentran detrás de otro firewall de la empresa
están afectados por el mismo problema. Si no configuran su firewall
para abrir los mismos puertos, no serán capaces de usar la
aplicación. Hacer que los clientes reconfiguren sus firewalls para
acomodarse a la aplicacion, simplemente no es práctico.

Ya que SOAP se apoya en HTTP como mecanismo de transporte, y la
mayoría de los firewalls permiten el paso de HTTP, no se tendrán
problemas invocando a los puntos finales de SOAP desde el lado que
sea del firewall. No hay que olvidar que SOAP hace posible para los
administradores del sistema desde configurar los firewalls a
selectivamente bloquear las peticiones SOAP haciendo uso de
cabeceras HTTP específicas de SOAP.

Pues bien, esos molestos firewalls impiden a las aplicaciones
enviarse comandos de una a otra, asi que SOAP permite a los
compañías ocultar esos comandos como HTTP para que el firewall no se
dé cuenta.

Continuemos con el ejemplo de DCOM. ¿Qué pasa si DCOM se ejecuta
sobre un firewall?

DCOM es el principal protocolo de Microsoft para la comunicación
entre aplicaciones. No es solo usado por programas que están
dirigidos a ser servidores; es usado para todos los tipos de
aplicaciones de escritorio y de acceso remoto. El resultado es que
la máquina media tiene docenas de programas usando DCOM. La mia
muestra 48, incluyendo desde "Microsoft PowerPoint Presentation" a
"logagent" e incluyendo el llamado
"{000C101C-0000-0000-C000-000000000046}"; usted puede ver las suyas
yendo a la línea de comandos y escribiendo "dcomcnfg".

Ahora, hay montones y montones de maneras de hacer seguras las
aplicaciones DCOM, asi que quizá todas esas aplicaciones felizmente
están respondiendo sólo a peticiones autenticadas desde la máquina
local. Por otro lado, hay montones y montones de maneras de hacer
las aplicaciones DCOM inseguras, asi que quizás una de ellas esta
esperando a que alguien le envíe una petición sin ninguna
autenticación para que sobreescriba ciertos ficheros en mi disco
duro.

Los firewalls tienen buenas razones para bloquear protocolos como
DCOM que vienen de fuentes que no son fiables. Los protocolos que se
escabullen de los firewalls no son lo que se necesita.


Información sobre SOAP
http://soap.weblogs.com


Documento de Microsoft (el cual incluye los párrafos citados):
http://msdn.microsoft.com/library/periodic/period00/soap.htm




        2. REIMPRESIONES DE CRIPTOGRAMA
        ===================================================
        Por Bruce Schneier
        Traducción: José Luis Martín Mas
        http://www.kriptopolis.com/criptograma/0026_2.html


Aquellos que se hayan suscrito recientemente pueden haberse perdido
estos artículos de números anteriores:

Ataques de tiempo, análisis del consumo de alimentación, y otros
ataques de "canales alternativos" contra tarjetas inteligentes:
http://www.counterpane.com/crypto-gram-9806.html#side 


La internacionalización de la criptografía, política:
http://www.counterpane.com/crypto-gram-9906.html#policy 

y productos:

http://www.counterpane.com/crypto-gram-9906.html#products 


Las nuevas clases de virus, gusanos, y otras clases de software
malicioso:

http://www.counterpane.com/crypto-gram-9906.html#viruses 



        3. NOTICIAS
        ===================================================
        Por Bruce Schneier
        Traducción: José Luis Martín Mas
        http://www.kriptopolis.com/criptograma/0026_3.html



Nuevos tipos de dispositivos de red que se pueden atacar:

http://news.cnet.com/news/0-1003-200-
1864025.html?tag=st.ne.ron.lthd.ni

(Obsérvese la mención del "cifrado de 128 bits", como si eso lo
resolviera todo). 

 ----------

Las autoridades que controlan la publicidad en el Reino Unido han
denunciado que un folleto de RSA era publicidad engañosa al decir
que el software de cifrado freeware era en cierta forma inadecuado:

http://www.asa.org.uk/adj/adj_4765.htm 

 ----------

Un proyecto dedicado a reducir las vulnerabilidades por
desbordamiento de buffer:

http://www.bell-labs.com/org/11356/libsafe.html 

 ----------

Phreaking moderno:

http://www.wired.com/news/business/0,1367,36309,00.html 

 ----------

¿Qué ocurriría si gente inteligente se dedicara a escribir virus
informáticos?:

http://lcamtuf.na.export.pl/worm.txt 

 ----------

Excelente discurso de Dan Geer sobre gestión de riesgos y seguridad:

http://www.stanford.edu/~hodges/doc/Geer-RiskManagement.txt 


 ----------

Configurar Microsoft Windows 2000 para usar DES triple con IPSEC no
quiere decir que se esté usando:

http://www.wired.com/news/technology/0,1282,36336,00.html 

En algunas circunstancias, el software sólo emplea DES. Y para
empeorar las cosas, en ningún momento se preocupa de avisar al
usuario. 

 ----------

El gobierno canadiense trató de introducir todos los datos que
poseen sobre sus ciudadanos en una gran base de datos, incluyendo la
información de devolución de impuestos (que, por ley, la Hacienda
canadiense no puede entregar a otras ramas del gobierno).

http://www.wired.com/news/politics/0,1283,36435,00.html 

http://www.canoe.ca/CNEWSArchiveMay00/candigest_may16.html 

http://www.canoe.ca/CNEWSArchiveMay00/candigest_may17.html 

Pero el plan se ha abandonado:

http://www.hrdc-drhc.gc.ca/common/news/dept/00-39.shtml 

http://www.wired.com/news/politics/0,1283,36649,00.html 

 ----------

Más sobre los peligros de confiar en las PKIs:

http://www.DGA.co.uk/customer/publicdo.nsf/public/WP-HERESY 

 ----------

El Asistente de Microsoft Office -ese molesto clip que proporciona
ayuda en Office- tiene algunas vulnerabilidades penosas en Office
2000. Parece que un atacante puede escribir scripts para el
asistente que pueden hacer todo tipo de cosas dañinas, y parece que
se puede ejecutar automáticamente esos scripts cuando el usuario
haga click en una página web o cuando abra un correo con HTML. Es
una sorprendente brecha de seguridad para Microsoft. Debido a que la
compañía decidió clasificar todos los scripts del Asistente de
Office como "seguros", estos scripts pueden hacer todo lo que
quieran. Es exactamente el tipo de vulnerabilidad que los autores de
virus explotan. Esto no es un error de programación; es una decisión
de diseño tomada deliberadamente a un nivel muy alto. Aún más
pruebas de que Microsoft no se toma en serio la seguridad.

http://www.zdnet.com/zdnn/stories/news/0,4586,2570727,00.html 

Un boletín de Microsoft que quita importancia al asunto:

http://www.microsoft.com/technet/security/bulletin/ms00-034.asp 

Un parche de Microsoft:

http://officeupdate.microsoft.com/2000/downloadDetails/Uactlsec.htm 

 ----------

Alguien ha patentado el uso de un código de barras tatuado para
verificar la identidad de una persona. ¿No estaba eso ya en el libro
de las Revelaciones 13:16-18?

http://patents.uspto.gov/cgi-bin/ifetch4?
ENG+PATBIB-ALL+0+946309+0+7+25907+
OF+1+1+1+PN%2f5%2c878%2c155 


 ----------

Tesis doctoral sobre la incidencia de ataques serios por Internet.
Según esta investigación, ocurre con menos frecuencia de lo que dice
la gente:

http://www.cert.org/research/JHThesis/Start.html 

 ----------

¿Cansado de todos esos virus de Microsoft Visual Basic? Cómo
desactivar el Scripting Host:

http://www.fsecure.com/virus-info/u-vbs/ 

 ----------

Real Networks demuestra que no aprenden:

http://www.vortex.com/privacy/priv.09.15 

 ----------

Electrónica inteligente que sabe dónde está. ¿Se apuesta alguien
algo a que nadie ha pensado en la aplicación que puede tener esta
tecnología en la seguridad?

http://www.telegraph.co.uk/et?ac=
000111464113065&pg=/et/00/5/7/ntac07.html 


 ----------

No me importa que el gobierno de Estados Unidos estudie la
privacidad, pero en este caso un estudio de 18 meses ha significado
18 meses de inactividad:

http://www.cnn.com/2000/TECH/computing/
05/22/new.privacy.study.idg/index.html 

 ----------

Según las noticias, la Unión Europea eliminó todas las restricciones
sobre la tecnología de cifrado, a pesar de las protestas de Estados
Unidos.

http://www.heise.de/tp/english/inhalt/te/8179/1.html 

La verdad no era tan buena. En una reunión del 22 de mayo, los
ministros de Exteriores de la Unión Europea eliminaron la propuesta
de su agenda en el último minuto. No se dio ninguna explicación a
este cambio de actitud. Funcionarios de Francia y el Reino Unido
expresaron reservas sobre la medidad, y los funcionarios han
confirmado que Estados Unidos presionó a la Unión Europea para que
bloqueara la decisión. Que yo sepa, no se ha hecho ninguna
declaración oficial.

http://www.wired.com/news/politics/0,1283,36623,00.html 

 ----------

Buen artículo introductorio sobre cifrado en IEEE Spectrum:

http://www.spectrum.ieee.org/pubs/spectrum/0400/enc.html 

 ----------

XML y cómo hacerlo seguro:

http://www.zdnet.co.uk/news/2000/20/ns-15500.html 


 ----------

La Comisión Federal de Comercio (FTC) desiste en su intento de
imponer la autorregulación en la privacidad en Internet:

http://www.zdnet.com/zdnn/stories/news/0,4586,2574082,00.html 

Informe de la FTC:

http://www.ftc.gov/os/2000/05/index.htm#22 


 ----------

Ingeniería social en el mundo real: uso de identidades falsas para
entrar en edificios del gobierno.

http://www.cnn.com/2000/US/05/25/security.breaches.01/index.html 

La mejor frase es: "'Creo que cualquier demostración de las
vulnerabilidades es buena', dijo la Fiscal General Janet Reno..."
Esto, por supuesto, quiere decir que está a favor del anuncio
público completo de vulnerabilidades de red. 


 ----------

Herramienta de espionaje de lo que se teclea: un pequeño dispositivo
puede registrar y almacenar en secreto medio millón de pulsaciones
de teclas. Se puede ocultar el dispositivo en un teclado o un
conector PS/2, y no necesita la instalación de ningún software.

http://www.zdnet.co.uk/news/2000/12/ns-14347.html 


 ----------

El mito de la seguridad del código abierto: un ensayo del autor
sobre el programa 'open source' Mailman explica por qué el código
abierto no es tan seguro como se puede pensar usando agujeros de
seguridad de su propio código como ejemplo.

http://developer.earthweb.com/journal/techfocus/052600_security.html 

Reacciones de Slashdot al ensayo:

http://slashdot.org/articles/00/05/28/1838201.shtml 


 ----------

El penoso estado de la CIA y la NSA:

http://www.washingtonpost.com/wp-dyn/articles/A22957-2000May28.html 


 ----------

La NPR emitió un reportaje sobre las estaciones de números de onda
corta. Se entrevistó a Schneier para el reportaje.

http://www.npr.org/programs/lnfsound/stories/000526.stories.html 


 ----------

Declaración de la EFF sobre la Ley de Copyright para el Milenio
Digital. Una lectura interesante.

http://cryptome.org/dmca-eff.htm 


 ----------

Virus de correo electrónico robado del ordenador de un investigador:

http://www.herald.co.nz/storydisplay.cfm?
storyID=138622&thesection=technology&
thesubsection=general 


 ----------

Pennsylvania considera delito difundir un virus informático. No sé
cómo afecta esto a los virus de Outlook que se expanden solos.

http://www.cnn.com/2000/TECH/computing/
06/01/virus.crack.down.idg/index.html 


 ----------

SANS presenta las diez mayores vulnerabilidades críticas de
Internet.

http://www.sans.org/topten.htm 

 ----------

Se manipularon pruebas del robo con tarjetas de crédito de CD
Universe, así que no se puede llevar a juicio:

http://www.msnbc.com/news/417406.asp?cp1=1 




        4. NOVEDADES DESDE COUNTERPANE
        ===================================================
        Por Bruce Schneier
        Traducción: José Manuel Gómez
        http://www.kriptopolis.com/criptograma/0026_4.html


El servicio de monitorización controlada de seguridad de Counterpane
ha estado funcionando muy bien durante estos últimos meses. Estamos
monitorizando redes de clientes a lo largo de todos los EE.UU. y
estamos empezando a pensar en expandirnos a Europa y Asia. Si está
usted interesado en saber cómo podemos monitorizar su red, contacte
con nosotros en el (888) 710-8175 o en sales@sj.counterpane.com.

Entrevista con Bruce Schneier en Information Security Magazine:

http://www.infosecuritymag.com/jun2000/junqa.htm 

La revista Fast Company analiza Counterpane:

http://www.fastcompany.com/online/35/ifaqs.html 

Giga Research publica una opinión sobre el servicio de
monitorización de Counterpane:

http://www.counterpane.com/giga.pdf 

Conferencia sobre tratamiento de incidencias en seguridad
informática (Primera), 26-30 Junio, Chicago. Bruce Schneier hablará
el 27 a las 2:00 de la tarde y el 28 a las 9:15 de la mañana.

http://www.first.org/conference/2000/ 

Congreso de Seguridad PC Week/DCI, 27-29 Junio, Boston. Schneier
copreside y dará su conferencia a las nueve de la mañana del día 29.

http://www.dci.com/brochure/secbos/ 

Encuentros Black Hat, 26-27 Junio, Las Vegas. Schneier hablará el 26
por la mañana.

http://www.blackhat.com 

El sitio SecurityFocus dispone de una entrevista sonora con Bruce
Schneier:

http://www.securityfocus.com/templates/media.html?id=25 



        5. JAVA Y VIRUS
        ===================================================
        Por Bruce Schneier
        Traducción: José Manuel Gómez
        http://www.kriptopolis.com/criptograma/0026_5.html


En la conferencia JavaONE, a principios de este mes, Scottt MacNealy
realizó un comentario equivocado sobre Java. CNet lo recogió así:

"En su conferencia en JavaONE McNealy dijo que Java es inmune a
virus como "Melissa" e "I Love You" que se han extendido por medio
de Microsoft Outlook, una afirmación que los expertos en seguridad
generalmente apoyan."

A mí me parece que los expertos en seguridad no apoyan esa
afirmación, porque es errónea. McNealy confunde una aplicación
(Microsoft Outlook) con un lenguaje de programación (Java). Y
confunde fallos de diseño con fallos de implementación.

Los principales problemas de seguridad de Outlook se basan en que:

a) utiliza por defecto "sin seguridad" en muchos casos.

b) oculta por defecto información vital para evaluar riesgos (por
ejemplo, las extensiones de ficheros).

c) es demasiado dócil a la hora de ser invocado por otros programas
para que haga cosas.


Todos estos son fallos de diseño. Es decir, Microsoft Outlook fue
diseñado por Microsoft para tener esos problemas. No son fallos de
implementación, errores cometidos por los programadores a lo largo
del desarrollo. El problema fundamental radica en que las
implicaciones para la seguridad del diseño y las características
elegidas nunca fueron examinadas con un poco de sensatez.

Ninguno de los fallos de diseño enunciados arriba puede prevenirse o
ser tratado de forma segura por el modelo "sandbox" de Java, ni por
su mecanismo de políticas de seguridad ni por ningún otro aspecto
del modelo de seguridad de Java. De hecho, yo mismo podría escribir
fácilmente un programa de correo en Java que tuviera idénticos
fallos de diseño que Outlook Express. Nada en Java ni en su modelo
de seguridad puede prevenir, ni siquiera estorbar, a tal diseño.

Lo que McNealy quizás quiere hacer notar es la naturaleza permisiva
de Microsoft Outlook al ejecutar ficheros adjuntos, y la naturaleza
más segura de la "sandbox" de Java. Java dispone de recursos
específicos para manejar "applets" potencialmente peligrosas, e
intenta ejecutarlas en un modo protegido que limita fuertemente los
efectos que puedan tener sobre otras aplicaciones del ordenador
anfitrión. El equipo de diseño de Java ha dedicado mucho tiempo a
preocuparse de los ejecutables maliciosos y cómo evitar que corran a
su antojo.

Artículo de CNet:

http://news.cnet.com/news/0-1003-200-2026364.html 



        6. EN LA RATONERA: INFRAWORKS
        ===================================================
        Por Bruce Schneier
        Traducción: Juan Cruz Ruiz de Gauna
        http://www.kriptopolis.com/criptograma/0026_6.html


Otra compañía más proclama tener "nueva tecnología patentada y
revolucionaria" para controlar el uso de datos en los ordenadores de
otras personas.

Cito su anuncio de prensa: "Esto significa que puede enviar ficheros
digitales a cualquier persona sin temor a una redistribución no
autorizada. Por ejemplo, podría adjuntar un documento Word o Excel
en un correo electrónico enviado a cualquiera en cualquier parte, y
prohibir que sean reenviados, impresos, copiados o cortados y
pegados tanto en su totalidad como cualquier parte de ellos. Usted
establece los permisos, y los datos son borrados cuando los permisos
caducan. Usted dispone de un control total sobre su propiedad
digital."

"Si se intenta realizar una operación ilegal, el fichero se
autodestruye. Justo igual que en Misión Imposible. Ninguna otra
tecnología puede realizar esto."

Alguien debiera recordar a esta gente que Misión Imposible es
ficción.

http://www.infraworks.com/ 




        7. EL ESTÁNDAR DE CIFRADO DE DATOS (DES)
        ===================================================
        Por Bruce Schneier
        Traducción: Juan Cruz Ruiz de Gauna
        http://www.kriptopolis.com/criptograma/0026_7.html



El Estándar de Cifrado de Datos (DES) ha sido el algoritmo más
popular de cifrado durante los últimos veinticinco años.
Originalmente desarrollado por IBM Corporation, fue elegido por la
Oficina Nacional de Estándares (National Bureau of Standards, NBS)
como el algoritmo estándar de cifrado del gobierno en 1976. Desde
entonces, se ha convertido en un estándar de cifrado doméstico e
internacional, y ha sido utilizado en miles de aplicaciones. Las
preocupaciones por la escasa longitud de su clave han perseguido al
algoritmo desde sus inicios, y en 1998 fue construida una máquina
capaz de romper el algoritmo mediante fuerza bruta. Hoy día,
modificaciones a DES, como triple-DES, aseguran que continuará
siendo seguro en un futuro inmediato.

En 1972, el NBS (renombrado posteriormente como el Instituto
Nacional de Estándares y Tecnología, National Institute of Standards
and Technology, NIST) inició un programa para proteger los
ordenadores y las comunicaciones de datos. Como parte del programa,
querían estandarizar dicha protección en un único algoritmo de
cifrado. Después de dos solicitudes públicas de algoritmos,
recibieron un candidato de IBM basado en investigaciones realizadas
en sus laboratorios de Yorktown Heights y Kensington. Entre la gente
que trabajó en este candidato se encontraban Roy Adler, Don
Coppersmith, Horst Feistel, Edna Grossman, Alan Konheim, Carl Meyer,
Bill Notz, Lynn Smith, Walt Tuchman y Bryant Tuckerman.

El algoritmo, aunque complicado, era bastante directo. Utilizaba
sólo operaciones lógicas simples sobre pequeños grupos de bits y
podía ser implementado bastante eficientemente sobre el hardware
existente a mediados de los 70. DES no es muy eficiente al ser
implementado por software, especialmente en arquitecturas de 32 bits
que son las más comunes hoy día.

Su estructura general era algo llamado una red Feistel, también
usada en otro diseño de IBM llamado Lucifer. DES es un cifrado de
bloques, lo que quiere decir que cifra y descifra los datos en
bloques: bloques de 64 bits. DES es un cifrado repetitivo, lo que
significa que contiene 16 iteraciones (llamadas vueltas) de un
cifrado simple. La primera fortaleza del algoritmo viene de algo
llamado una Caja-S (S-box), una operación de búsqueda sobre una
tabla no lineal por la que grupos de seis bits serían reemplazados
por grupos de cuatro bits. Estas búsquedas en tablas se expresaban
como cadenas de constantes.

NBS carecía de capacidad para evaluar el algoritmo, por lo que
solicitaron ayuda de la Agencia Nacional de Seguridad (NSA). La NSA
hizo dos cosas: cambiaron las constantes de las Cajas-S, y redujeron
el tamaño de la clave desde el original de 128 bits hasta 56 bits.

El algoritmo revisado, llamado DES, fue publicado por el NBS en
Marzo de 1975. Hubo considerables protestas públicas, tanto
referidas a la "mano invisible" de la NSA -los cambios que
realizaron no se hicieron publicos y no se dio ninguna explicación
respecto a las constantes de las Cajas-S- como a la corta longitud
de la clave. Originalmente se suponía que la longitud de la clave se
reducía a 64 bits, pero cuando se publicó el estándar, convertía 8
de estos bits en "bits de paridad" usados para confirmar la
integridad de los otros 56 bits, y no como parte de la clave.

A pesar de las críticas, DES fue adoptado como un Estándar Federal
de Procesamiento de Información en Noviembre de 1976. Era la primera
vez que un algoritmo de cifrado evaluado por la NSA se hacía
público, y fue uno de los dos desarrollos más importantes que
estimularon el desarrollo de la investigación de cifrado público (el
otro fue la invención del cifrado de clave pública).

Después de convertirse en un estándar del gobierno de los EE.UU.,
DES fue adoptado por otros organismos de estándares a lo ancho de
todo el mundo, incluyendo ANSI e ISO. Se convirtió en el algoritmo
de cifrado estándar en la industria bancaria, y fue usado en muchas
aplicaciones en todo el mundo. Los términos del estándar estipulaban
que debía ser revisado y recertificado cada cinco años. El NBS
recertificó DES por primera vez en 1987. NIST (como es conocido NBS
tras cambiar su nombre) recertificó DES en 1993. En 1997 inició un
programa para reemplazar a DES: el Estándar Avanzado de Cifrado
(AES). La implicación de la NSA en los valores de las Cajas-S salió
a la luz a comienzos de los 90. Dos criptógrafos israelíes, Eli
Biham y Adi Shamir, inventaron un potente ataque criptoanalítico
llamado "criptoanálisis diferencial", y mostraron que las Cajas-S
habían sido optimizadas para resistir este ataque, hasta aquel
momento aún desconocido. Más tarde se hizo público que el propio
equipo de IBM había desarrollado este ataque mientras creaban
Lucifer y DES, y que la NSA había declarado secreta su
investigación.

A finales de los 90, se extendió ampliamente la sospecha de que la
NSA era capaz de romper DES probando todas las posibles claves, algo
llamado criptoanálisis por "fuerza bruta". Esta posibilidad fue
gráficamente demostrada por la Fundación de Fronteras Electrónicas
en Julio de 1998, cuando John Gilmore construyó una máquina de
250.000 dóalres capaz de romper claves DES mediante fuerza bruta en
sólo unos días.

Años antes de esto, aplicaciones más seguras ya lo habían convertido
en un algoritmo de cifrado llamado triple-DES (también conocido como
3DES). Triple-DES es la aplicación repetida de tres cifrados DES,
usando dos o tres claves diferentes. Este algoritmo afianza toda la
seguridad de DES ya que alarga efectivamente la longitud de la
clave, y goza de un amplio uso hoy en día para proteger toda clase
de secretos personales, de negocios y financieros.

DES es el algoritmo más importante realizado jamás. Como disponía de
un pedigree NSA se creyó ampliamente que era seguro. Es también el
algoritmo de cifrado más estudiado que se ha inventado jamás, y
muchos criptógrafos "fueron a la escuela" sobre DES. Casi todos los
nuevos algoritmos usados hoy en día hunden sus raíces en DES, y
todavía en la actualidad se publican documentos analizando
diferentes aspectos de DES. 




        8. COMENTARIOS DE LOS LECTORES
        ===================================================
        Por Bruce Schneier
        http://www.kriptopolis.com/criptograma/0026_8.html

De: "J. Christopher Williams" (jcw@datarave.com)
Asunto: Artículo de Phil Agre sobre los gusanos de Outlook
 ---------------------------------------------------------------------
 Traducido por Jesús Reyes

Phil Agre escribió:

"He recibido alrededor de 60 copias del último virus de correo
electrónico de Microsoft y sus variantes. ¿Cuántos recibió Usted?
Afortunadamente gestiono mi correo electrónico con el mailx de
Berkeley y las macros de teclado de Emacs, por lo que estuve fuera
de peligro. Aunque si hablamos de los miles de millones de dólares
en daños, equivalentes a millones de días de trabajo perdidos,
entonces creo que tenemos que tener una pequeña charla con
Microsoft."

Aunque muchos pudieran considerar los comentarios anteriores
relevantes para el asunto que tenemos entre manos, utilizar
productos de marca como método de asegurar sus ordenadores me parece
una exageración. El hecho es que hay varias formas de evitar tales
virus y gusanos, algunas de las cuales no requieren ningún producto
software adicional. Estoy de acuerdo en que sería estupendo si estas
características estuvieran habilitadas por defecto. Lo único que
podría ser usado para prevenir una infección de virus, no mencionado
por el autor, es el cerebro humano. Extraño, considerando que es el
arma de elección.


"... Esto es un comportamiento por diseño, no un problema de
vulnerabilidad de la seguridad.
"Más lenguaje raro. Es como decir,  Esto es una roca, no algo que
pueda caer al suelo. Es confuso hasta pensar en ello..."

El autor puede que sea un experto en seguridad o en informática,
pero su comprensión de la gramática básica es bastante pobre. La
conversión gramatical correcta debería ser: "Esto es un objeto
lanzado al suelo, no un objeto en caída libre". La afirmación por sí
sola simplemente ayuda a definir qué puede ser llamado "lanzado" y
qué puede ser llamado objeto en "caída libre". No es errónea, a
menos que el lector crea en algún tipo de campaña de desinformación
que el autor sugiere. Para mí el autor está aparentemente empleando
la misma táctica de "echar la culpa a otro" de la que acusa a
Microsoft.

"...Esta particular táctica de echarle la culpa a otro es
especialmente falsa, dado que el virus se propagó a través de la
propia Microsoft, hasta tal punto, que la compañía tuvo que bloquear
todo el correo entrante (Wall Street Journal 5/5/00)..."

Mi compañía tuvo menos de 20 empleados infectados sobre un total de
más de 1600 empleados en todo el país, y sin embargo también
cerramos nuestros servidores Exchange. Hagamos una comparación
estadística: cada empleado en la oficina en la que trabajo dispone
de un ordenador, sin ninguna excepción. Nosotros experimentamos un
crecimiento de más de 250 empleados en los últimos 90 días,
previendo que se doble la cifra de empleados de partida en los
próximos 90 días. Otras oficinas se cuidan de estar equipadas de una
forma similar, aunque su crecimiento sea diferente. La decisión a
tomar, estuvo basada más en la posibilidad de infectar a ordenadores
que no eran de la compañía (es decir, por las consecuencias que
podría tener la infección de un cliente y la pérdida de su buena
disposición) y en el riesgo de recibir material infeccioso adicional
mientras ILOVEYOU viviera su minuto de fama.


"Microsoft no debería dividirse. Debería ser cerrada."

Estoy de acuerdo en general con el sentido del artículo, e incluso
con su presentación. Con la excepción de la afirmación anterior. La
afirmación es muy anti-individuo (en este caso anti-entidad) lo que
equivale a prejuiciosa.

Creo que el mensaje del autor puede ser resumido en "Microsoft
debería proteger a un cliente de si mismo, tanto si entiende dicha
protección como si no".

Personalmente creo en la seguridad. Creo en las claves de cifrado y
en las firmas. Creo tanto en la investigación pura como en las
aplicaciones prácticas de la teoría criptográfica. Y además creo que
este no es el lugar donde el "Gran Hermano" decide qué tipo o cuánta
criptografía utilizo. Preferiría que Microsoft proporcionara un
sistema operativo estable con la posibilidad de incorporar la
criptografía. Y preferiría mucho más que gente como Counterpane
proporcionara alternativas e investigación en criptografía para
permitirme escoger la mejor solución.

De uno u otro modo, no creo que el producto perfecto e intachable
exista. Como Counterpane ha dicho varias veces: La seguridad no es
un destino, es el viaje. Microsoft no puede localizar cada agujero
de seguridad que haya en sus sistemas operativos o en sus
aplicaciones; de lo que son responsables es de revelar los fallos de
seguridad. Ése es el estándar que deberíamos tener.

Resumiendo mi mensaje: creo que las empresas de software deberían
ser responsables de sus negligencias. Por el hecho de que un
programa se demuestre que tiene un fallo y que se siga implementando
sin corregirlo, o que aún no haya sido "parcheado", se debería
permitir a la parte perjudicada poner un pleito a la empresa
desarrolladora del producto. La obvia (para mí) inclinación
anti-Microsoft de Phil, me lleva a cuestionar su objetividad, y por
lo tanto el objetivo con el que escribió su artículo. 


De: "Bob Smart" (Bob.Smart@cmis.CSIRO.AU)
Asunto: Gusano ILOVEYOU
 ---------------------------------------------------------------------
Traducido por Oscar Esteban

Me temo que el mensaje del asunto ILOVEYOU no se ha entendido bien.
John Carder acierta en este caso concreto en una respuesta al
artículo de SLATE de James Gleick: "Windows Scripting Host otorga a
un script en Visual Basic la autoridad del usuario que ejecuta el
script, no la autoridad del autor del script".

El problema de ejecutar con seguridad contenido que nos llega a
través de la red no está limitado a Windows. El código móvil es un
hecho, sea en forma de software descargado o como applets Java. La
comunidad Unix tendrá que prestar atención a este asunto porque está
claro que ahora Microsoft lo hará.

Cuando nuestra recepcionista envió un ejecutable con la felicitación
navideña que una amiga le había enviado yo, por supuesto, no lo
ejecuté. Sin embargo, si el software estuviera bien diseñado
entonces debería ser posible que cualquiera enviase tales cosas a
sus amigos. Debería ser posible ejecutarlas sin peligro de causar
daño, exactamente igual que un applet en una JVM segura. 


De: phred@teleport.com
Asunto: RTM frente al "Virus del amor"
 ---------------------------------------------------------------------
Traducido por Oscar Esteban

Microsoft afirma en su respuesta al artículo de Jim Gleick en Slate
que la situación del "Virus del amor" es de algún modo similar al
gusano RTM.

Totalmente absurdo.

Es muy sencillo: RTM incluía un destroza-pila y un buscador de
claves mediante diccionario con un rudimentario mecanismo de reenvío
y un desvencijado canal de propagación hacia atrás. Ninguna
intervención del usuario era necesaria.

El gusano RTM se apoyaba en errores de programación. El "Virus del
amor" se apoyaba en características introducidas por Microsoft en
sus programas. Esto es lo que marca la diferencia. 


De: jeff@antistatic.com
Asunto: Ingeniería social y el gusano ILOVEYOU
 ---------------------------------------------------------------------
Traducido por Oscar Esteban

Lo del gusano ILOVEYOU fue ingeniería social de parvulario.
Microsoft tuvo suerte de que haya sido un golpe discreto. Podría
haber sido mucho peor.

Si yo hubiera sido el programador malicioso hubiera añadido un paso
crítico. Tras conseguir el elemento de la lista de direcciones, el
script debería haber buscado el último mensaje enviado por ese
usuario y emplear ESA línea de asunto.

1) Alice envía a Bob un mensaje con el asunto "¿Picnic el sábado?"

2) Carl envía a Bob el virus.

3) El virus envía una copia de sí mismo de Bob a Alice con el asunto
"Re: ¿Picnic el sábado?"

El daño podría haber sido mucho peor, y hubiera sido más difícil
filtrar en los servidores. Añádase un nivel de automodificación del
código, y se podrían haber echado abajo totalmente sistemas enteros
de correo electrónico. 


De: Peter Houppermans (Peter.Houppermans@pa-consulting.com)
Asunto: Sobrecargas de buffer
 ---------------------------------------------------------------------
Traducido por José Manuel Gómez

No estoy muy seguro de si es sólo falta de interés en la buena
calidad, pero me llama la atención que algunas casas de software
hayan decidido ACEPTAR que "no está mal" es suficiente para sacar el
producto a la venta. El artículo que apunto más abajo realiza
algunas observaciones interesantes con las que estoy de acuerdo,
aunque yo apuntaría una causa algo más profunda: buenos fundamentos
de diseño. Las sobrecargas de buffer me parecen el resultado de
procesos de desarrollo no demasiado bien dirigidos y algunos dirían
que es la consecuencia de utilizar C (por proporcionar suficiente
lazo como para colgarse uno o, en mi opinión, con la potencia y la
flexibilidad viene la responsabilidad).

http://www2.linuxjournal.com/articles/currents/019.html 

En un tono más divertido, Microsoft ha descubierto que está expuesta
a las leyes, puesto que en Francia (y, hasta donde yo alcanzo, en
toda Europa) la exclusión de garantía no es legal (es decir, nula y
vacía). Así que algunos usuarios emprendedores están llevando a
Microsoft a los tribunales por maravillosos virus cuyo nombre no
quiero mencionar debido a que los filtros rebotarían el correo ;-)
alegando neglicencia puesto que deberían haber cubierto este tema a
raíz del virus Melissa. 


De: Joe Harrison (joe-harrison@MailAndNews.com)
Asunto: Responsabilidad del fabricante por mal software
 ---------------------------------------------------------------------
Traducido por José Manuel Gómez

Estoy perplejo por sus frecuentes afirmaciones acerca de que los
fabricantes de software ponen a la venta productos de tan poca
calidad que serían considerados invendibles, por defectuosos, en
otros campos.

Quizás ocurra eso en los EE.UU. pero yo hubiera pensado que muchos
(¿la mayoría?) otros países trataran el software exactamente igual
que cualquier otro artículo en los litigios sobre adecuación a su
propósito. Aquí, en el Reino Unido, los fabricantes han sido
denunciados con éxito y se ha establecido un precedente. Legalmente,
su material tiene que funcionar de forma correcta en lo que se
supone tiene que hacer.

Eche un vistazo a:

http://elj.warwick.ac.uk/jilt/cases/97_3stal/stalban.htm 


De: Ray Jones (rjones@pobox.com)
Asunto: Clientes Fiables y Juegos de Ordenador
 ---------------------------------------------------------------------
Traducido por Francisco Leal Vázquez

Usted pinta una imagen bastante triste de las comunidades de
jugadores. Quake ha estado teniendo serios problemas últimamente,
pero Netrek trataba con clientes fiables allá en 1992 (tenían
instalado un sistema rudimentario antes de eso), y parecen haber
evitado problemas serios desde entonces.

La comunidad Netrek parece haberse adaptado a Borgs [programas
informáticos que asisten el juego] mediante dos medidas:

1- aprobación binaria con un esquema no trivial

2- provisión de algunos servidores que estén de acuerdo con los
borgs 

El sistema de aprobación está basado en RSA, con la clave privada
del cliente escondida en el binario. Esto permite una distribución
abierta de la lista de claves de clientes aprobadas, de tal modo que
cualquiera puede ejecutar un servidor sin tener que estar en alguna
lista de fiables de "dioses" servidores. Tener servidores que
permitan borgs proporciona un foro reconocido para que los autores
de los borg muestren sus habilidades de hacking.

Los detalles sobre verificación no son tan importantes. Lo que es
interesante son los ataques que la gente ha utilizado para
difundirlos. En particular, de los dos hacks que he escuchado,
ninguno contaba con extraer la clave del binario. El primero
utilizaba una modificación del kernel para permitir a un cliente
reabrir un socket después de que el cliente aprobado se hubiera
autentificado él mismo. El segundo hack se basaba en el código
generador de claves (una pobre generación de números aleatorios, mea
culpa).

Ciertamente es posible extraer la clave, y después incluirla en un
borg, pero el resultado no es bueno. Es probable que alguien se dé
cuenta y rechace la clave, y los autores de borgs ya son capaces de
usar sus clientes en escenarios donde poder realizar competiciones
reales (borg contra borg).

Admitamos que Netrek tiene menos posibilidad de colaboración entre
mentes que Quake, y que también es más apto para los borgs (siendo
más táctico y menos estratégico que Netrek, en mi humilde opinión).
La escasez de ataques puede venir dada porque la gente se interesa
menos. De cualquier modo, la combinación de los dos elementos arriba
mencionados (palo, zanahoria) parece haber funcionado bastante bien.
Como usted escribió en alguna otra parte del Criptograma de este
mes, la seguridad trata sobre reducir los riesgos, no sobre evitar
la amenaza. 


De: Ian Mason (ian@ian.co.uk)
Asunto: Re: Más sobre Microsoft Kerberos
 ---------------------------------------------------------------------
Traducido por Francisco Leal Vázquez

Si, como hice yo, usted se descarga el .exe correspondiente al
auto-extraible del Microsoft Kerberos, pero utiliza WinZip para
descomprimirlo, no se verá forzado a aceptar el así llamado contrato
de aceptación. Eso me permite utilizar mi copia actuando dentro de
las leyes normales de Copyright. Específicamente eso significa que
puedo utilizar los contenidos sin que ello afecte a ningún tema de
secreto comercial.

Está bastante claro que Microsoft está actuando de un modo
anti-competitivo. Piden la adhesión a un "standard" público de
Kerberos pero luego lo "amplian" de una forma incompatible. Después,
con la posición dominante en el mercado de los ordenadores de
sobremesa, dificultan la creación de un producto servidor mediante
la restricción del acceso a la utilización de los detalles de sus
extensiones. Quizá es hora de que la IETF se ponga un poco dura con
ellos. Tal vez una demanda por pasar por alto la denominación
Kerberos.

Aquí en la Unión Europea tenemos disposiciones que consideran ilegal
impedir la ingeniería inversa con propósitos de compatibilidad.
Desafortunadamente, no tenemos una ley que evite a un jugador
dominante, forrado de dinero, pagar abogados y vencer a un jugador
pequeño en los juzgados, pero ¿existe eso en algún sitio? 


De: Graystrea (wex@media.mit.edu)
Asunto: Desactivar software a distancia
 ---------------------------------------------------------------------
Traducido por José Manuel Gómez

Los fabricantes no tienen que hacer un túnel a través de los
cortafuegos para desactivar software de forma remota. Hoy en día la
mayoría, si no todos, los programas se autoactualizan. Observen la
característica "LiveUpdate" de Norton Antivirus como un ejemplo
destacado. Otros programas piden permiso para ir a un sitio web y
descargar una "actualización".

Incluso sin planificarlo de antemano, tales autoactualizaciones
pueden ser utlizarse para desactivar usuarios de forma selectiva.
Así es como Napster realizó la prohibicón de más de 300.000 usuarios
identificados por Metallica. Si se conecta a Napster con la versión
2.5 de su cliente, se le pdirá que espere mientras se descarga la
versión 2.6. Al ejecutarse la 2.6, usted quedaría bloqueado de golpe
si estuviera en la lista de usuarios prohibidos.

Claramente, este tipo de acontecimietno no figuraba en los planes
originales de Napster, aunque han sabido implementarlo limpiamente.
Espero que Norton, Microsoft y otros fabricantes de software sean
igual de limpios a la hora de programas expiraciones en función de
los usuarios. 


De: Ian Mason (ian@ian.co.uk)
Asunto: Tratado sobre Cibercrimen
 ---------------------------------------------------------------------

Traducido por José Manuel Gómez

El ordenamiento actual no prohibe la investigación. Para infringir
el tratado propuesto se tendría que tener intención de cometer un
delito ("diseñado o adaptado con el *propósito* de cometer un
delito"). Si el propósito de uno era investigar vulnerabilidades
para prevenir delitos, entonces la intención de uno claramente no es
cometer los delitos. Si no me creen, pregunten a cualquier buen
abogado sobre el concepto de "mens rea" (literalmente "mente
delictiva", habitualmente leído como "intención de delinquir") en el
contexto que hablamos. No propone crear un delito absoluto (uno para
el que baste demostrar un 'actus reas', acción delictiva, sin
importar la intención, para demostrar la culpabilidad). Yo puedo,
legalmente, fabricar, tener y utilizar una palanqueta. Es ilegal que
tenga una con el propósito de utilizarla para cometer robos. El
tratado se centra sólo en el último supuesto.

Lo lamento pero, por una vez, se trata de técnicos que no entienden
a los abogados, en vez de al revés, que resulta más habitual. 


De: Johan Ovlinger (johan@ccs.neu.edu)
Asunto: Abogado denuncia a USWest por conexión DSL insegura
 ---------------------------------------------------------------------
Traducido por José Manuel Gómez

Aunque estoy de acuerdo con el principio de la responsabilidad del
fabricante, este es más bien un caso del tipo "obtuvo lo que pidió,
pero no pidi´´o lo que quería". Pacific Bell conectaba su ordenador
a Internet de forma continua. Eso es lo que solicitó y lo que
obtuvo. Que no desactivara la compartición de ficheros es culpa
suya. Si hay alguien a quien culpar, sería Microsoft, por hacer tan
lamentablemente fácil dispararse en el pie como en este caso (no es
que Red Hat venga con una configuración por defecto mucho mejor,
pero al menos le obligan a uno a introducir una contraseña de
administrador como parte de la instalación).

En realidad no veo qué tiene que ver Pacific Bell con esta
compartición de archivos, al menos que ellos la activaran durante la
instalación.

Me gustaría que este pleito se sobreseyera para que no creara un mal
precedente (porque espero que pierda). Luego, me gustaría ver cómo
se piden cuentas a los auténticos responsables por el lamentable
estado de su "seguridad". Por desgracia (creo que se nota que no soy
un vapuleador de Microsoft), el actual clima político convierte a
Microsoft en el único objetivo viable. Si acaban escindidos, sus
EULAs se verán como algo que no vale el papel donde están impresos,
disponíendoles así a todo este tipo de acciones legales.

Incluso si eso nunca tuviera éxito, sería digno de ver un pleito de
una Fortune 500 contra ellos por los muchísimos gigadólares que se
perdieron por culpa del último gusano de Internet, ¿no es cierto? 



_____________________________________________________________________

      
      CriptoGRAMA es la versión española de Crypto-GRAM, elaborada
por el equipo de traductores de Kriptópolis, con autorización expresa
de Bruce Schneier. 
 
      Este ejemplar nunca hubiera sido posible sin la colaboración
desinteresada de las siguientes personas:

             *  Francisco Leal Vázquez
             *  José Luis Martín Más
             *  Juan Cruz Ruiz de Gauna
             *  David Gómez
             *  Oscar Esteban
             *  Jesús Reyes
 
    
_____________________________________________________________________



      -- AVISO IMPORTANTE --

      Kriptópolis dispone de la pertinente autorización de Bruce
Schneier para traducir, elaborar y publicar la versión española de su
boletín Crypto-GRAM. La información contenida en CriptoGRAMA sólo
puede ser redistribuida siempre que se haga de forma completa y con
expresa mención de Bruce Schneier como autor de Crypto-GRAM y de
Kriptópolis como responsable de CriptoGRAMA.

      Crypto-GRAM es un boletín mensual gratuito dedicado a
resúmenes, análisis, comentarios e ideas sobre criptografía y
seguridad informática. Crypto-GRAM es elaborado por Bruce Schneier,
presidente de Counterpane Systems, autor de "Applied Cryptography" y
creador de los algoritmos Blowfish, Twofish y Yarrow. Schneier ha
pertenecido a la dirección de la International Association for
Cryptologic Research, EPIC y VTW, y es asiduo escritor y
conferenciante sobre criptografía.


     
_____________________________________________________________________

 
      © Bruce Schneier
      © Kriptopolis (versión en Español).
     
_____________________________________________________________________

