

      _______________________________________________________________

      C  R  I  P  T  O  G  R  A  M  A
      _______________________________________________________________

      Número 19
      15 de Noviembre de 1999
     ________________________________________________________________     


      SUMARIO: 
 
        1. Por qué son inseguros los ordenadores. 
        2. Counterpane: Investigación documentada.
        3. Noticias.
        4. Roto el cifrado de DVD. 
        5. En la ratonera: Microsoft Windows CE. 
        6. Puesta al día de la legislación en Estados Unidos. 
        7. Criptografía de Clave Pública de Curvas Elípticas.
        8. Comentarios de los lectores 



      -- Ejemplar gratuito distribuido a más de 14.000 suscriptores --
      ________________________________________________________________

      * Versión Web de este ejemplar:
           http://www.kriptopolis.com/criptograma/cg0019.html

      * Suscripción gratuita:
           http://www.kriptopolis.com/subs.html

      * Números anteriores:
           http://www.kriptopolis.com/criptograma/cg.html
      _______________________________________________________________




        1. POR QUÉ SON INSEGUROS LOS ORDENADORES
        ________________________________________________

        Por Bruce Schneier
        Traducción: Isidre Marques Serret


        Casi cada semana la prensa informática habla de otro fallo de seguridad: 
        un virus que se aprovecha del Office de Microsoft, una vulnerabilidad en 
        Windows o UNIX, un problema de Java, un agujero de seguridad en una de 
        las páginas principales de Internet, un ataque contra un popular 
        cortafuegos. ¿Por qué no pueden conseguir los diseñadores que esto 
        funcione?, nos preguntamos. ¿Cuándo mejorará?

        Yo no creo que lo haga nunca. He aquí el por qué:

        La ingeniería de la seguridad es diferente de cualquier otro tipo de 
        ingeniería. La mayoría de los productos, como procesadores de textos o 
        teléfonos celulares, son útiles por lo que hacen. Los productos de 
        seguridad, o las características de seguridad ofrecidas dentro de estos 
        productos, son útiles precisamente por lo que no permiten que se haga. 
        La mayor parte del diseño implica hacer que las cosas funcionen. Piense 
        en la definición original de un hacker: alguien que se las ingenia para 
        hacer que pasen cosas “diferentes”. El diseño de seguridad implica 
        evitar que sucedan estas cosas. Implica deducir cómo fallan las cosas, y 
        a partir de ahí prevenir estos fallos.

        En muchos aspectos esto es similar a la ingeniería de seguridad. La 
        seguridad es otro requisito de la ingeniería que no es simplemente una 
        "característica". Pero el diseño de la seguridad implica asegurarse de 
        que las cosas no fallarán en presencia de fallos aleatorios: es 
        programar el ordenador de Murphy, si usted quiere. El diseño de la 
        seguridad implica lograr que las cosas seguras no fallen en presencia de 
        un adversario inteligente y malévolo que fuerza estos fallos 
        precisamente en el peor momento y de la peor manera. El diseño de la 
        seguridad implica programar el ordenador de Satanás.

        Y el ordenador de Satanás es difícil de probar.

        Prácticamente todo el software se desarrolla a través de un sistema de 
        "prueba-y-error". Se programan pequeños fragmentos, se prueban, se 
        arreglan, y se prueban de nuevo. Varios de estos pequeños fragmentos se 
        combinan en un módulo, y entonces este módulo se prueba, se arregla, y 
        se prueba de nuevo. Luego se combinan varios de estos pequeños módulos 
        en módulos más grandes, y así sucesivamente. El resultado final es un 
        software que más o menos funciona como se esperaba, aunque en programas 
        complejos siempre se escapa algún error.

        El método de "prueba-y-error" simplemente no sirve para comprobar la 
        seguridad. Ninguna cantidad de pruebas es suficiente para poder 
        descubrir un fallo de seguridad, por lo que el proceso de la 
        comprobación no descubrirá nada. Recuerde que seguridad no tiene nada 
        que ver con funcionalidad. Si usted tiene un teléfono cifrado, puede 
        probarlo. Puede hacer y puede recibir llamadas. Puede intentar, y no 
        lograr, interceptarlo. Pero no tiene ninguna forma de averiguar si el 
        teléfono es seguro o no.

        La única manera razonable de "probar" la seguridad es realizar 
        revisiones de seguridad. Esto es un proceso manual caro y largo. No es 
        suficiente comprobar los protocolos de seguridad y los algoritmos de 
        cifrado. Una revisión debe cubrir especificación, diseño, aplicación, 
        código fuente, funcionamiento, y todo la demás. Así como la prueba 
        funcional no puede demostrar la ausencia de errores, una revisión de 
        seguridad no puede demostrar que el producto es realmente seguro.
        Y todavía peor. Una revisión de seguridad de la versión 1.0 dice poco 
        sobre la seguridad de versión 1.1. Una revisión de seguridad de un 
        producto del software aislado no sirve necesariamente para el mismo 
        producto en un ambiente operacional. Y cuanto más complejo es el 
        sistema, más dura se vuelve una evaluación de seguridad y más fallos de 
        seguridad habrá.

        Supongamos que un producto de software se desarrolla sin ninguna 
        comprobación funcional en absoluto. Ninguna comprobación funcional de 
        las versiones alfa o beta. Se escribe el código, se compila, y se envía. 
        Las posibilidades de que este programa simplemente funcione –incluso 
        dejando de lado que esté libre de errores- es cero. A medida que aumenta 
        la complejidad del producto, aumentará el número de errores. Todos 
        sabemos que las pruebas son esenciales.

        Desgraciadamente, este es el estado actual, en la práctica, de la 
        seguridad. Están distribuyéndose productos sin ninguna, o con mínimas 
        comprobaciones de seguridad. No me sorprende que los errores de 
        seguridad se presenten una y otra vez. No puedo creer que nadie espere 
        otra cosa.

        Aún peor; los productos se vuelven más complejos cada año: los sistemas 
        operativos son más grandes, tiene más características, más interacciones 
        entre los diferentes programas en Internet. Windows NT ha estado 
        funcionando durante algunos años, y todavía se descubren errores de 
        seguridad. Podemos esperar muchos más errores en Windows 2000; el código 
        es significativamente más grande. Podemos suponer que lo mismo será 
        cierto para cualquier otro producto de software.

        Esto no cambiará. El incremento en el uso de los ordenadores y la 
        convergencia en Internet, están aumentando a un ritmo creciente. Los 
        sistemas se están convirtiendo en más y más complejos, y necesariamente 
        más inseguros, más rápido de lo que podemos arreglarlos (e incluso más 
        rápidamente de lo que podemos aprender a arreglarlos).

        Reconocimientos: La frase "programando el ordenador de Satanás" era 
        originalmente de Ross Anderson. Pero es demasiado buena como para evitar 
        usarla. Una versión acortada de este ensayo aparecía originalmente en 
        número del 15 de noviembre de la revista _Computerworld_. 



        2. COUNTERPANE: INVESTIGACION DOCUMENTADA
        ________________________________________________

        Por Bruce Schneier
        Traducción: David Gómez

        "Autentificar items seguros utilizando acceso lento a memoria"

        John Kelsey y Bruce Scheneier, Primer Simposio en USENIX sobre las 
        tarjetas inteligentes, USENIX Press, por aparecer.

        Presentamos un protocolo de autentificación que permite que un item, 
        como una tarjeta inteligente, se autentifique en un sistema informático 
        seguro en el otro extremo a traves de un lector inseguro. Este protocolo 
        se basa en el hecho de que el item respondera a las consultas de forma 
        lenta, y que el propietario del objeto no se sentara pacientemente 
        mientras el lector parece que no funciona. Este protocolo puede ser 
        usado de forma independiente, con items de memoria "tontos", o con items 
        basados en procesadores.

        http://www.counterpane.com/slow-memory.html




        3. NOTICIAS
        _________________________________________________

        Por Bruce Schneier
        Traducción: David Gómez


        Una compañía ha desarrollado un paquete de cifrado de correo que permite 
        al remitente elegir durante cuánto estará disponible la clave de 
        descifrado, convirtiendo cualquier copia de ese correo en ilegible 
        después de la fecha elegida. Es un buen sistema para prevenir que la 
        gente accidentalmente olvide borrar su correo (a la vista del juicio de 
        Microsoft, muchas compañías tienen ya políticas de borrar todo el correo 
        antiguo a partir de una cierta fecha.) No es nada bueno, sin embargo, 
        como una medida de seguridad para *prevenir* a alguien de grabar su 
        correo pasada esa fecha. Alguien puede grabar siempre el correo 
        descifrado en un fichero, incluir el correo en un mensaje saliente sin 
        la restricción, o incluso hacer una captura de pantalla y grabar una 
        copia del correo de esa manera. Este puede ser un buen producto, pero no 
        se engañe a si mismo pensando que sirve como una medida de seguridad:
        http://www.technologypost.com/internet/DAILY/
        19991011102015158.asp?Section=Main


        El idioma como criptografía. Estas historias hablan acerca de un 
        lenguaje secreto utilizado en China. La segunda historia menciona que el 
        castigo en la China Imperial por inventar un lenguaje secreto era la 
        muerte:
        http://www.smh.com.au:80/news/9910/12/text/world5.html
        http://www.foxnews.com/scitech/101899/chinese_lingo.sml 


        Arjen Lenstra y Eric Verheul han escrito un excelente documento sobre 
        las longitudes de las claves: simétricas, claves publicas (incluyendo 
        curvas elipticas), etc. Comparan las longitudes de las claves de 
        diferentes sistemas, y efectúan predicciones sobre el futuro. Bájese 
        esto:
        http://www.cryptosavvy.com 


        El Departamento de Policía de Los Angeles ha sido acusado de efectuar 
        cientos de escuchas ilegales durante varios años. Tenga esta historia a 
        mano la próxima vez que alguien le diga que las escuchas de la policía 
        son algo bueno, y que por supuesto se puede confiar en la policía:
        http://www.zdnet.com/zdnn/stories/news/
        0,4586,2378149,00.html?chkpt=hpqsnewst


        Falsa alarma: Jaws Technologies está aprovechando una ocasión 
        para sus adquisiciones:
        http://www.nationalpost.com/network.asp?f=991103/117402 


        Departamento de malas ideas: la Internet Engineering Task Force (IETF) 
        estaba considerando introducir posibilidades de escucha en futuras 
        versiones de Internet. Cualquiera que tenga voz debería presentarse en 
        los encuentros del IETF para oponerse a esto:
        http://www.wired.com/news/print/1,1294,31895,00.html

        El Congresista Bob Barr se pronuncia contra esta idea:
        http://www.wired.com/news/print/1,1294,32100,00.html
        El sentido común prevaleció, y en el reciente encuentro de la IETF en 
        D.C, decidieron no llevarlo a efecto.
        http://www.wired.com/news/politics/0,1283,32455,00.html 


        Una compañía llamada SecureLogix está construyendo un firewall para los 
        PBXs. Esto es una buena idea.
        http://www.securelogix.com 


        La administración Clinton está pensando en relajar los controles de 
        exportación sobre el código fuente criptográfico:
        http://www.wired.com/news/print/1,1294,32006,00.html
        http://www.computerworld.com/home/news.nsf/all/9910225source 


        Los analistas del grupo Gartner están haciendo mucho ruido acerca de los 
        virus del año 2000:
        http://www.computerworld.com/home/news.nsf/all/9910122gartner2 


        Y el FBI dice que ha recogido 30,000 amenazas de virus relacionados con 
        el año 2000. Aunque esto se parece un poco a la lista McCarthy's de los 
        500 comunistas conocidos, tiene sentido el ser extremadamente cuidadoso 
        al abrir adjuntos de los correos y bajarse nuevo software hacia el 
        cambio de año:
        http://www.zdnet.com/zdnn/stories/news/0,4586,2386686,00.html?chkpt=zdnnstop 



        Microsoft ha respondido ofreciendo software anti-virus gratuito, 
        olvidando aparentemente que el software obtenido hoy no ayudará contra 
        virus que no darán la cara hasta el año que viene:
        http://www.computerworld.com/home/news.nsf/all/9911011msy2k
        http://www.infoworld.com/cgi-bin/displayStory.pl?99111.hnmsy2k.htm 


        La Agencia Nacional de Seguridad valorará ahora la seguridad de las 
        redes para agencias de defensa y civiles. Intentarán incluso romper los 
        sistemas de las agencias para señalar vulnerabilidades:
        http://www.fcw.com/pubs/fcw/1999/1101/fcw-agnsa-11-01-99.html 


        Excelente entrevista con Ross Anderson de la revista New Scientist:
        http://www.newscientist.com/ns/19991106/confidenti.html 


        TEMPEST es el nombre en código de la NSA para la habilidad de espiar los 
        equipos electrónicos interceptando y decodificando sus señales 
        electromagnéticas. Un archivero piensa publicar en su sitio Web 
        documentos, obtenidos de la NSA a través del Acta para la Libertad de 
        Información, que nos proporcionan más detalles:
        http://www.wired.com/news/print/0,1294,32097,00.html
        Vea también:
        http://www.newscientist.com/ns/19991106/newsstory6.html 


        La información sobre Echelon sale lentamente a la luz:
        http://www.wired.com/news/print/0,1294,32302,00.html
        http://washingtonpost.com/wp-srv/WPcap/1999-11/14/019r-111499-idx.html
        http://www.independent.co.uk/news/Digital/Features/spies151199.shtml 


        Lo inevitable ha sucedido finalmente. Alguien inventó un virus de correo 
        que puede infectar su sistema cuando usted lea su correo; no tiene que 
        ejecutar nada. El virus Bubbleboy necesita que el usuario esté 
        ejecutando los programas de correo Microsoft Outlook o Outlook Express; 
        Windows 95, 98, o 2000; y Internet Explorer 5.0 o superior. Su blanco es 
        un agujero de seguridad para el cual Microsoft ya ha creado un parche, 
        pero que muchos usuarios todavía tienen que actualizar:
        http://www.wired.com/news/story/0,1240,32434,00.html
        http://www.wired.com/news/technology/0,1282,32529,00.html

        El parche de Microsoft:
        http://www.microsoft.com/security/Bulletins/ms99-032.asp 


        Mi comentario en Comunicaciones de la ACM sobre el futuro del software 
        malicioso:
        http://www.counterpane.com/insiderisks2.html 





        4. ROTO EL CIFRADO DE DVD
        _________________________________________________

        Por Bruce Schneier
        Traducción: Daniel Cabezas

        El sistema de protección de los DVDs ha sido roto. Ahora hay programas 
        freeware en la red que eliminan la protección de copia en los DVDs, 
        permitiendo que sean reproducidos, editados y copiados sin restricción 
        alguna.

        Esto no debería ser una sorpresa para nadie, y menos aún para la 
        industria del ocio.

        El esquema de protección es gravemente defectuoso en varios aspectos. 
        Cada DVD está cifrado con algo llamado "Content Scrambling System (CCS)" 
        - Sistema de embrollo de contenido. Tiene una clave de 40 bits. (No 
        tengo idea de por qué. La NSA y el FBI no deberían preocuparse del 
        cifrado DVD. No hay películas terroristas cifradas que necesiten 
        observar). Ni tan siquiera es un algoritmo muy bueno. Pero incluso 
        aunque el cifrado fuese triple-DES, este sistema sería defectuoso.

        Cada reproductor de DVD, incluyendo las consolas hardware que se 
        enchufan al televisor, y los reproductores de software que se pueden 
        descargar al ordenador, tienen su propia y única clave de acceso. (En 
        realidad, cada uno tiene varias, no se por qué). Esta clave es usada 
        para dar acceso a la clave de cifrado en cada DVD. Un DVD tiene 400 
        copias de la misma clave única de descifrado, cada una cifrada con cada 
        código de acceso. Nótese el secreto a voces: si se las arregla para 
        conseguir una clave de acceso para un reproductor, puede descifrar todos 
        y cada uno de los DVD.

        Pero incluso si esto fuese completamente perfecto, el sistema nunca 
        podría funcionar.

        El defecto se encuentra en el modelo de seguridad. El reproductor de 
        software, finalmente, consigue la clave de descifrado, descifra el DVD y 
        lo muestra por pantalla. Esa información descifrada del DVD está en el 
        ordenador. Tiene que estar, no hay otra manera de mostrarla por 
        pantalla. No importa lo bueno que sea el sistema de cifrado, la 
        información del DVD está disponible en texto en claro (tal cual), para 
        cualquiera capaz de escribir un programa de ordenador para obtenerla.

        Otro tanto ocurre con la clave de descifrado. El ordenador debe 
        descifrar el DVD. La clave de descifrado debe estar en el ordenador. Así 
        que la lave de descifrado está disponible, de forma transparente, para 
        cualquiera que sepa dónde buscar. Está protegida por una clave de 
        acceso, pero el lector tiene que darnos acceso a ella.

        Se suponía que los fabricantes de software para DVD encubrirían el 
        funcionamiento del programa de descifrado, y posiblemente el programa 
        reproductor, empleando algún tipo de técnicas de ocultamiento del 
        software. Estas técnicas nunca han demostrado funcionar mucho tiempo; 
        solo parecen obligar a los hackers a gastar un par de semanas extra 
        haciéndose una idea de como funciona el software. Ya he escrito sobre 
        esto anteriormente en relación a la protección de copia de software: no 
        se puede ofuscar el software.

        Puede que sea un mal trago que aceptar para la industria del ocio, pero 
        la protección de contenidos de software no funciona. No puede funcionar. 
        Se pueden distribuir contenidos cifrados, pero para poder permitir que 
        sean leídos, vistos o escuchados, deberán ser pasados a texto en claro. 
        Un hacker lo suficientemente inteligente, con herramientas de depuración 
        de programas lo bastante buenas, siempre será capaz de invertir el 
        funcionamiento del algoritmo, obtener la clave, o simplemente capturar 
        el texto en claro tras el descifrado. Y puede escribir un programa de 
        software que permita a otros realizar estas tareas automáticamente. Y 
        esto no puede ser impedido.

        Si en cambio asumimos hardware seguro, el sistema funciona. (De hecho, 
        la industria quiere extender el sistema por todo el camino hasta llegar 
        al monitor, y finalmente realizar ahí el descifrado). El ataque funciona 
        porque el hacker puede ejecutar un depurador y otras herramientas de 
        programación. Si el dispositivo de descifrado y el de visionado (deben 
        ser ambos) están dentro de una pieza de hardware a prueba de 
        intromisiones, el hacker se queda atascado en su intento. No puede 
        aplicar ingeniería inversa a nada. Pero el hardware a prueba de 
        intromisiones es en gran manera un mito, así que en la realidad este 
        caso tan sólo sería otra barrera que alguien finalmente superaría. La 
        protección de contenidos digitales simplemente no funciona; pregunte a 
        cualquiera que haya intentado proteger software contra copias.

        Una lección más y una observación:

        La lección: este es un ejemplo más de una empresa, reunida en secreto 
        para diseñar un algoritmo de cifrado propietario, que termina siendo 
        desconcertantemente débil. Nunca he entendido por qué la gente no emplea 
        algoritmos y protocolos ya publicados, en los que se pueda confiar. 
        Siempre son mejores.

        La observación: la “solución” por la que la industria del ocio ha estado 
        pugnando es ilegalizar la ingeniería inversa. Lo han conseguido en los 
        Estados Unidos: el acta de Copyright Milenio Digital incluye 
        disposiciones al efecto, a pesar de las protestas de comunidades 
        científicas y de derechos civiles. (Sí, se podría ir a la cárcel por 
        tener un depurador de código). Han conseguido hacer pasar una ley 
        semejante en el Reino Unido, y están trabajando para lograrlo en la 
        Unión Europea. Esta “solución” no funciona y no tiene ningún sentido.
        Primero, a menos que la ingeniería inversa sea ilegal en todo el 
        planeta, siempre habrá alguien capaz de aplicarla en algún lugar. Y una 
        persona es todo lo que se necesita, porque puede escribir software que 
        usen todos los demás. Segundo, la ingeniería inversa puede, como en este 
        caso, funcionar anónimamente. Las leyes no habrían ayudado en este caso. 
        Y tercero, las leyes no pueden “meter de nuevo al gato en la bolsa”. 
        Incluso aunque puedas atrapar y encausar a los hackers que lo hicieron, 
        no afectaría a las herramientas de los hackers que ya han sido -y 
        continúan siendo- escritas.

        Lo que la industria del ocio sí puede hacer, y han hecho en este caso, 
        es emplear amenazas legales para enlentecer la difusión de estas 
        herramientas. Hasta ahora, la industria ha amenazado con acciones 
        legales contra la gente que ha puesto estas herramientas de software en 
        sus sitios web. El resultado es que estas herramientas existirán en las 
        páginas web hackers, pero nunca estarán en software de dominio público 
        (Linux, por ejemplo).

        El tremendo fallo de todo esto es que la industria del ocio es perezosa, 
        y está intentando encontrar un solución tecnológica a lo que es un 
        problema legal. Es ilegal robar copyrights o marcas comerciales, tanto 
        si es una película DVD, una camisa de Ralph Lauren o un bolso Louis 
        Vitton. Esta protección legal todavía existe, y todavía es fuerte. Por 
        alguna razón la industria del ocio ha decidido que tiene un derecho 
        legal a la protección de su tecnología, y eso no tiene sentido alguno.
        Por otra parte, están presionando a las parlamentos para aprobar leyes 
        que afiancen esta protección tecnológica defectuosa. En los Estados 
        Unidos y Reino Unido (y posiblemente, pronto en la Unión Europea), es 
        ilegal saltarse su tecnología, incluso cuando nunca se haga para violar 
        un copyright. Es ilegal iniciar investigaciones científicas sobre el 
        cifrado utilizado en esos sistemas. Es ilegal intentar mirar dentro de 
        algo que se adquirido legalmente. Así que no sólo el sistema no 
        funciona, sino que además crea un mercado negro donde no lo había 
        anteriormente, y sin hacer ningún bien a la sociedad durante el proceso.
        La rotura de la protección del DVD es algo bueno. No servía al interés 
        de nadie que la industria del ocio depositara su confianza en un mal 
        sistema de seguridad. Es una buena investigación la que lleva a mostrar 
        lo malo que es el algoritmo de cifrado y lo mal concebido que está el 
        modelo de seguridad en si. Lo aprendido en esta ocasión puede ser 
        aplicado a hacer los sistemas futuros más resistentes.

        http://www.wired.com/news/technology/0,1282,32263,00.html
        http://www.ntk.net/index.cgi?back=archive99/now1029.txt

        Resumen del modelo de encriptación DVD:
        http://crypto.gq.nu 

        Material para expertos:
        http://livid.on.openprojects.net/pipermail/livid-dev/1999-October/00058.html
        http://livid.on.openprojects.net/pipermail/livid-dev/1999-October/00059.html
        http://livid.on.openprojects.net/pipermail/livid-dev/1999-October/00069.html
        http://livid.on.openprojects.net/pipermail/livid-dev/1999-October/00061.html 

        Mi ensayo sobre protección de copia de software:
        http://www.counterpane.com/crypto-gram-9811.html#copy 

        Mis comentarios sobre el Acta de Copyrights Digital Milenio:
        http://www.zdnet.com/pcweek/news/0622/22wipo.html 

        Nuevas técnicas de ofuscación de software de Intel que, pronostico, 
        serán pronto rotas:
        http://www.intel.com/pressroom/archive/releases/in110999.htm/ 





        5. EN LA RATONERA: MICROSOFT WINDOWS CE
        _________________________________________________

        Por Bruce Schneier
        Traducción: Miguel Camacho

        Microsoft cifra su contraseña Windows NT cuando se guarda en una unidad 
        Windows CE. Pero si uno mira cuidadosamente el algoritmo de cifrado, 
        simplemente realizan una operación XOR con "susageP" (Pegasus escrito al 
        revés). Pegasus es el nombre clave de Windows CE. Es tan patético que 
        resulta asombroso.

        http://www.cegadgets.com/artsusageP.htm 



        6. PUESTA AL DÍA DE LA LEGISLACIÓN EN ESTADOS UNIDOS
        _______________________________________________________

        Por Bruce Schneier
        Traducción: Miguel Camacho


        A veces parece que nunca cambia nada. Los proyectos para relajar los 
        controles de exportación en materia criptográfica están avanzando a 
        rastras tanto a travás del Congreso como del Senado. Pero nunca se llega 
        a votar nada.

        En el parlamento, más de 250 miembros del Congreso han copatrocinado H.R 
        850, el acta sobre seguridad y libertad mediante cifrado (SAFE) 
        presentado por los Republicanos Bob Goodlatte (R-VA) y Zoe Lofgren 
        (D-CA). El proyecto de ley permite para la libre exportación de 
        dispositivos criptograficos (tanto en hardware como en software) si un 
        producto equiparable está disponible desde una compañía extranjera, y 
        suprime la obligatoriedad de la custodia de claves. Por otra parte, 
        también incluye una controvertida cláusula que crea un nuevo delito 
        federal al usar criptografia para "favorecer actuaciones criminales".
 
        Este proyecto ha sido aprobado por cinco comisiones, lo que llevaría a 
        pensar que ya existiría suficiente como para emitir una decision. Sin 
        embargo, en dos de los comités (Inteligencia y Servicios Armados) los 
        proyectos fueron enmendados para mantener en la práctica los controles 
        de exportación. El Comité de reglamentacion parlamentaria tendra que 
        decidir sobre cuál de las versiones será sometida a votación.

        Por parte del Senado, el presidente de la Comisión de Comercio y 
        candidato presidencial John McCain (R-AZ), dio marcha atrás en sus 
        posiciones iniciales oponiéndose a la criptografia e introdujo S. 798, 
        el acta de 1999 que promueve las transacciones en línea seguras para 
        estimular el comercio y negocios (PROTECT). El proyecto de ley permite 
        la libre exportación de productos de 64 bits o inferiores. El cifrado 
        más potente puede ser exportado a comerciantes en línea, grandes 
        empresas de administración pública, industrias controladas por el 
        gobierno, filiales o subsidiarias de empresas americanas y gobiernos 
        pertenecientes a la NATO, OECD y ASEAN. (Es de destacar esto último; 
        ¿Quieren vender cifrado fuerte a Vietnam y Birmania, pero no a Brasil o 
        Argentina?)

        Un departamento de consejo de exportación criptográfica puede aconsejar 
        relajar las restricciones. Finalmente, sobre Enero del 2002 los 
        productos que adopten el AES o su equivalente serán libremente 
        exportables. El proyecto de ley fue aprobado por la Comisión de Comercio 
        en junio y espera actualmente la votación del Senado.

        Mas información:
        http://www.epic.org/privacy/bill_track.html 




        7. CRIPTOGRAFÍA DE CLAVE PÚBLICA DE CURVAS ELÍPTICAS
        _____________________________________________________

        Por Bruce Schneier
        Traducción: Angel Galindo Sánchez

        En septiembre de este año, alrededor de 700 personas, utilizando 740 
        ordenadores, fueron capaces de romper un mensaje cifrado con 
        criptografía de curva elíptica de 97 bits. El proceso necesitó 16.000 
        MIPS-años de cálculos, aproximadamente el doble de lo que necesitó otro 
        equipo que recientemente rompió una llave de cifrado RSA de 512 bits.

        Certicom, la empresa que patrocinó este concurso, ha ofrecido estos 
        resultados como evidencia de que la criptografía de curva elíptica es 
        más fuerte que RSA. Analicemos esta afirmación un poco más despacio.

        Todos los algoritmos de llave pública, ya sean para intercambio de 
        claves, cifrado o firma digital, están basados en uno de estos dos 
        problemas: el problema de factorización o el problema del logaritmo 
        discreto. (Hay otros algoritmos en círculos académicos, pero son 
        demasiado difíciles de manejar como para ser utilizados en el mundo 
        real). La seguridad de RSA proviene de la dificultad de factorizar 
        números grandes. Los sistemas fuertes basados en RSA utilizan números de 
        1024 bits, e incluso mayores.

        La seguridad de la mayoría del resto de los algoritmos de clave pública 
        -ElGamal, DSA, etcétera- se basa en el problema del logaritmo 
        discreto. Los dos problemas son muy similares, y todos los algoritmos de 
        factorización modernos pueden utilizarse para calcular logaritmos 
        discretos en un grupo multiplicativo de dimensión finita. De forma 
        aproximada, factorizar un número de un cierto tamaño y calcular el 
        logaritmo discreto de otro número del mismo tamaño, supone la misma 
        cantidad de trabajo. Esto significa que, para un tamaño de clave dado, 
        RSA, ElGamal, DSA, etcétera, son aproximadamente igual de seguros. (Esto 
        no es estrictamente cierto, pero es una aproximación suficientemente 
        buena para este artículo).

        Todos estos algoritmos requieren el uso de algo llamado "grupo 
        algebraico". Cuando se inventó la criptografía de llave pública, todos 
        los algoritmos se implementaron en el grupo algebraico más sencillo: los 
        números de módulo n. Por ejemplo, la cifrado RSA es m^e mod n, y una 
        llave pública Diffie-Hellman es g^y mod n. De hecho, cualquier grupo 
        algebraico valdría. Las curvas elípticas son, simplemente, otro grupo 
        algebraico.

        En criptografía de curva elíptica, las llaves públicas y privadas se 
        definen como puntos situados sobre un objeto matemático llamado curva 
        elíptica. (No se preocupe: en realidad no importa qué es lo que 
        significa ésto). La suma es una operación que combina dos puntos y 
        produce un tercero. El algoritmo parece lo mismo, pero las operaciones 
        concretas son muy distintas.

        Pero si sirve cualquier grupo algebraico, ¿por qué hay gente que se 
        preocupa por las curvas elípticas?. Parece que para algoritmos de curva 
        elíptica de logaritmos discretos, tal vez podamos utilizar llaves más 
        pequeñas. (Esto no es cierto para RSA, y por ello nunca verá una 
        variante RSA de curva elíptica).

        Todos los algoritmos más rápidos para calcular logaritmos discretos - el 
        filtro del campo numérico y el filtro cuadrático - utilizan algo llamado 
        índice de cálculo y una propiedad de los números de módulo n llamada 
        uniformidad [smoothness], y, por tanto, para romper algoritmos de curva 
        elíptica hay que utilizar métodos antiguos: la rho de Pollard, por 
        ejemplo. Entonces, sólo tenemos que utilizar claves lo suficientemente 
        largas como para que sean seguras frente a estos viejos y lentos 
        métodos. De ahí que las claves puedan ser más cortas.

        Y pueden ser significativamente más cortas. Debido a la rotura de la que 
        hablábamos, Certicom recomienda llaves de 163 bits. Compare ésto con la 
        longitud de clave recomendada para algoritmos convencionales de 
        algoritmo discreto, que es como mínimo de 1024 bits.

        El hecho de que esta recomendación tenga sentido depende de lo rápido 
        que puede hacerse que los algoritmos trabajen con las curvas elípticas. 
        La cuestión a preguntarse es: "¿Esta falta de uniformidad es una 
        propiedad fundamental de las curvas elípticas, o simplemente es un vacío 
        en nuestros conocimientos sobre ellas?". O, más en general: "¿Es 
        inherentemente más difícil calcular logaritmos discretos en las curvas 
        elípticas, o podremos tal vez encontrar algún método para hacerlo de 
        forma tan eficiente como con los números de módulo n?".

        Si creemos en lo primero, las curvas elípticas serán siempre más seguras 
        -para la misma longitud de clave- que los números de módulo n. Si 
        creemos lo segundo, sólo es cuestión de tiempo que se consiga romperlas.
        Certicom desea fervientemente creer en lo primero. Dicen cosas como: 
        "Las curvas elípticas como entidades algebraicas/geométricas han sido 
        estudiadas de forma extensiva durante los últimos 150 años, y de estos 
        estudios ha surgido una rica y profunda teoría". Concluyen que, debido a 
        ésto, podemos confiar que los nuevos avances algorítmicos no sean 
        demasiado devastadores.

        Para mí, esto es una montón de buenos deseos. Sería maravilloso si 
        dispusiéramos de 150 años de investigaciones en las propiedades 
        criptográficas de las curvas elípticas. Pero no es así; por el 
        contrario, tenemos 150 años de trabajos en las propiedades de las curvas 
        elípticas que interesan a los matemáticos, y la mayoría de ellas sólo se 
        relacionan accidentalmente con las que interesan a los criptógrafos. La 
        criptografía de curva elíptica fue inventada apenas en 1985, y sólo se 
        ha estudiado seriamente durante unos pocos años.

        Incluso hoy, la mayoría del trabajo sobre curvas elípticas en un típico 
        departamento universitario de matemáticas es bastante irrelevante para 
        nosotros, los criptógrafos. Seguramente, algunos de sus resultados 
        podrían ocasionalmente ayudarnos a comprender la fortaleza de los 
        algoritmos de curva elíptica; pero éste no ha sido casi nunca el 
        objetivo de las investigaciones en matemáticas. Esta situación está 
        cambiando ahora, pero muy lentamente.

        Más aún, la investigación en algoritmos eficientes para curvas elípticas 
        es muy nuevo. La propia noción de algoritmo eficiente, incluso, no 
        apareció hasta los 60 o 70, y la teoría algorítmica de números sólo se 
        ha popularizado en las pasadas dos décadas. Antes de los ordenadores, ni 
        siquiera era relevante.

        La respuesta real a la pregunta es "No lo sabemos". No sabemos si hay 
        formas eficientes de calcular logaritmos discretos en grupos de curvas 
        elípticas. No sabemos si hay una definición de uniformidad que nos 
        permita aplicar el filtro del campo numérico a las curvas elípticas. No 
        sabemos si, a largo plazo, pueden utilizarse claves más cortas con 
        algoritmos de curva elíptica.

        A corto plazo, las recomendaciones de Certicom son razonables. Hoy, no 
        podemos calcular logaritmos discretos en curvas elípticas de forma tan 
        eficiente como con los números de módulo n. Los sistemas pueden utilizar 
        claves más cortas con curvas elípticas. Pero, a largo plazo, no lo 
        sabemos.

        Hay otras diferencias que también es necesario considerar. Comprobar 
        firmas de curva elíptica es aún complicado, comparado con la 
        comprobación de las firmas RSA. Y todos los usuarios de un sistema de 
        curva elíptica tienen que utilizar la misma curva. (Si no se hace ésto, 
        se pierden la mayor parte de los beneficios de tamaño en las claves de 
        curva elíptica). Esto tiene implicaciones en seguridad: es más fácil 
        romper la clave de un usuario al azar de un sistema, que romper la clave 
        de un usuario concreto. Me gustaría ver más análisis sobre este aspecto 
        para los sistemas de curva elíptica.

        Mi recomendación es que si está usted trabajando en un sistema con 
        limitaciones en el tamaño de clave -tarjetas inteligentes, algunos 
        teléfonos móviles o receptores de mensajes, etcétera-, considere la 
        utilización de curvas elípticas. Si no tiene restricciones de tamaño, 
        utilice RSA. Si necesita seguridad durante varias décadas (casi ningún 
        sistema lo necesita), utilice RSA.

        Tenga en cuenta que algún día -el próximo año, en diez años, en un 
        siglo-, alguien puede encontrar una forma de definir la uniformidad, o 
        algo incluso más útil, en curvas elípticas. Si ocurre ésto, tendrá que 
        utilizar la misma longitud de clave que se emplearía en algoritmos de 
        logaritmo discreto, y entonces ya no habrá ninguna razón para utilizar 
        algoritmos de curva elíptica.

        Postdata: Este análisis puede aplicarse también a la factorización. A la 
        gente de RSA Security, Inc. les gusta hablar de la larga historia del 
        problema de factorización, y de cómo nos da confianza sobre la seguridad 
        de RSA. Sí, se ha estudiado durante siglos, pero sólo recientemente esos 
        estudios han estado remotamente relacionados con la criptografía. Más 
        aún, el trabajo en factorización no ha sido considerada como un área 
        respetable de estudio hasta recientemente; antes de eso, se consideraba 
        como un hobby excéntrico. Y los algoritmos eficientes para la 
        factorización sólo se han estudiado en el último par de décadas.
        Realmente no tenemos ni idea de la fortaleza de la factorización fuerte.

        La verdad es que las empresas tienen tendencia a exagerar sus productos. 
        Antes de tomar una decisión sobre algoritmos criptográficos, los 
        clientes deberían recabar una amplia variedad de opiniones 
        independientes (de personas no involucradas económicamente en los 
        resultados de la decisión que se tome) sobre qué están comprando.

        Noticias sobre los recientes esfuerzos de craqueo de las curvas 
        elípticas:
        http://www.computerworld.com/home/news.nsf/all/9909282ellip
        http://www.certicom.com/press/99/sept2899.htm 


        Una excelente introducción matemática a las curvas elípticas:
        http://www.certicom.com/ecc/enter/index.htm 


        Una excelente comparación sobre las longitudes de claves, incluyendo RSA 
        y curvas elípticas:
        http://www.cryptosavvy.com 




        8. COMENTARIOS DE LOS LECTORES
        _________________________________________________

        Por Bruce Schneier
        Traducción: Juan Cruz Ruiz de Gauna y Oscar Esteban


        De: Reinhard Wobst
        Tema: El problema del código abierto
        -------------------------------------
        Hoy, durante el congreso ISSE en Berlin, hemos tenido un debate acerca 
        del siguiente tema "¿Ayuda el código abierto a aumentar la seguridad?". 
        Por supuesto, hablábamos acerca de la seguridad general de las 
        tecnologías de información, no sólo acerca de criptografía.

        Lo que escribió en Criptograma acerca de los algoritmos de cifrado de 
        código abierto es totalmente cierto. El ejemplo de las máquinas de 
        cifrado AG, donde la clave secreta era cifrada por una clave NSA y 
        después probablemente colocada en la cabecera del mensaje, es un ejemplo 
        ilustrativo. En contraste con esto, estamos de acuerdo en que el código 
        abierto en sistemas operativos o aplicaciones generalmente no incrementa 
        la seguridad, sino que se limita a hacer que la localización de errores, 
        así como su corrección, sean más rapidas. En ambientes comerciales no es 
        posible realizar parches con la misma frecuencia con que se localizan 
        agujeros de seguridad y estos son cerrados. Algunas veces los usuarios 
        se dan cuenta de estos problemas y escriben un parche para sus 
        aplicaciones que fallará con la siguiente versión. Su teoría sobre 
        localizar los errores más importantes en el menor tiempo posible suena 
        bien. Sin embargo, personas de organizaciones como DFN-CERT argumentan 
        que la cadena no tiene fin, e incluso "errores sin importancia" pueden 
        ser usados fácilmente para ataques automatizados.

        Por lo tanto, estamos de acuerdo al decir: el código abierto no 
        necesariamente incrementa la seguridad considerablemente, pero 
        incrementa la FIABILIDAD. Y esto es, por supuesto, muy importante para 
        implementaciones criptográficas. 


        De: Larry Nathanson
        Tema: Re: E*Trade
        --------------------
        Dwight Arthur (dwight@bestweb.net) dijo:

        "Me gusta E*Trade, yo comercio allí. E*Trade nunca me ha pedido que esté 
        de acuerdo con ser responsable de cualquiera de los negocios hechos con 
        mi password, por tanto mi opinión es que están poniendo en riesgo sus 
        propios recursos (no los míos) con esta seguridad débil".

        Me gustaria reconsiderar esta postura.

        De la aceptación de cláusulas del cliente E*TRADE (etiquetada como 
        ET100/0798 en la última página): "Este documento contiene los términos y 
        condiciones que gobiernan su cuenta E*TRADE. Por favor, léalos 
        cuidadosamente y consérvelos para su información." 

        "Aceptación del cliente", Item 28, Párrafo 2 (página 6): Usted debiera 
        ser el único usuario autorizado del servicio al que afecta esta 
        aceptación de términos. Usted debiera ser responsable de la 
        confidencialidad y uso de su identificación de usuario, clave de 
        contratación, clave de comercio y PIN. Usted debe comprender que es el 
        único responsable de todos los pedidos introducidos a través del 
        servicio usando su identificador de usuario, clave de contratación, 
        clave de comercio y PIN.... Usted acepta que E*TRADE y sus afiliados no 
        serán responsables de ninguna pérdida resultante a partir de una causa 
        de la que E*TRADE o sus afiliados no tengan control directo, incluyendo, 
        pero no limitandose a, ...accesos no autorizados...".

        Tambien en linea en:
        https://trading.etrade.com/cgi-bin/gx.cgi/
        AppLogic+AcctDefault?gxml=etrade_info/customer_agreement.html (requiere login). 


        De: Estes, Danal
        Tema: El "Paquete Mágico" de AMD
        --------------------------------
        El último Criptograma contenía una referencia al "Paquete Mágico" de AMD 
        que podría encender un PC a través de la red. Su expresión acerca del 
        asunto de la seguridad es acertada en su objetivo, pero asociar este 
        tema con un vendedor o tecnología concretos no lo es.

        Esto afecta a cualquiera que soporte "Wake-On-Lan" (Activación a Través 
        de la Red) en su placa madre/tarjeta de red, y no sólo a AMD:
        http://www.microsoft.com/hwdev/specs/PMref/PMnetwork.htm#details

        Desde hace algún tiempo, los fabricantes de placas madre y tarjetas de 
        red han estado soportando un estándar conocido como "Wake On Lan". Esto 
        inicialmente requería un cable especial desde la tarjeta de red hasta un 
        pequeño cabezal de 2 pines en la placa madre. En conjunción con los 
        estándares de suministro de energía ATX, que mantienen una pequeña 
        porción de la placa madre con energía (lo que permite "pulse la barra 
        espaciadora para encender", etc), la tarjeta de red podría también 
        permanecer con energía y enviar la señal de "energía total" a la placa 
        madre a través de este cable. Creo recordar haber visto una referencia a 
        permitir esta misma idea vía el bus PCI (sin requerir ningún cable 
        especial) en algún nivel de revisión.

        IBM, Compaq, Dell, etc, han estado promocionando esta tecnología en sus 
        presentaciones durante al menos los dos últimos años. Por tanto, no es 
        sólo AMD; es toda una completa variedad de fabricantes de componentes y 
        sistemas acabados.

        De nuevo, los problemas de seguridad son reales. El formato del paquete 
        para producir un "despertar" está estandarizado y bien difundido. 
        Necesitamos conocer la dirección hardware (capa MAC) de la tarjeta de 
        red, pero ésta se obtiene fácilmente en el momento en que el ordenador 
        está activo y comunicándose. Etc, etc. 

        "Wake On Lan" precisa ciertas configuraciones para funcionar, que no son 
        generalmente las características por defecto de la combinación placa 
        madre/tarjeta de red. ¿Quiénes son más proclives a permitir esto? 
        Grandes compañías que tienen iniciativas de "Gestión de Sistemas 
        Empresariales". Mientras este estándar gana empuje, mientras se 
        convierte en parte del bus(es) en lugar de cables especiales, si/cuando 
        se convierta en permitido por defecto... Ya he dicho bastante. 

        Mantengámonos alerta.


        De: Gary Ellison
        Tema: Nueva política sobre criptografía en los EE.UU.
        -----------------------------------------------------
        Algunos comentarios acerca de la nueva política sobre criptografía de la 
        administración Clinton que creo merece la pena destacar.

        Primero, las nuevas reglas no cambian nada con respecto a la 
        "criptografía no de serie". En otras palabras, los kits de herramientas, 
        como BSafe o Java Cryptographic Extensions, seguirán sufriendo las 
        mismas restricciones que sufren hoy. Tampoco está claro cuál será el 
        destino de los aceleradores criptográficos hardware (ASIC u otros 
        componentes). En el caso de kits software, la NSA no permitirá la 
        exportación de criptografía fuerte a menos que el kit sea cerrado (como 
        son los casos de CAPI o CDSA). De acuerdo con la nueva política, los 
        productos criptográficos "finales" pasarán una "revisión única". Supongo 
        que la revisión de la NSA será algo más detallada en el futuro que hasta 
        ahora. Dicho esto, ¿qué queda para impedir a la NSA decir que estos 
        productos "finales" son "criptografía no de serie" y denegar la licencia 
        de exportación? Por ejemplo, Eudora podría no cumplir en lo sucesivo los 
        criterios de exportación de la NSA dada la arquitectura de su api de 
        plugins.

        Otra cuestión es que el plan de la administración Clinton abarca 
        aproximadamente el 80% del Acta SAFE y es poco probable que llegue a 
        haber nunca el tipo de apoyo necesario para eliminar las restricciones 
        del 20% restante.

        Por último, las nuevas reglas de la administración Clinton no están 
        escritas como ley y cualquier administración posterior podría 
        cepillárselas con igual facilidad.

        Tal vez la CESA debería ser llamada Acta de Instalación de Micrófonos 
        Ocultos de 1999. 


        De: Greg Weiss
        Tema: ¿Son los votos electrónicos más proclives
               a la coacción del votante?
        ------------------------------------------------
        Con toda la charla sobre votación electrónica, está bien que alguien 
        reconozca que hay algunos problemas de seguridad serios. El más 
        importante, al menos para mí, es la coacción del votante... 

        Yo solía compartir esa misma opinión al respecto. Pero hablando con 
        alguien sobre el voto por correo esta semana, me temo que este problema 
        está igualmente presente en este escenario actual no virtual. ¿Cómo? 
        Bueno; el voto por correo permite la coacción de los votantes en la 
        privacidad de los lugares de sondeo no públicos. Los votos electrónicos 
        no son particularmente más subvertibles que los votos por correo, al 
        menos en relación con la amenaza de la coacción del votante.

        Es cierto que con el voto por correo hay una protección adicional. 
        Parece ser que es posible aún votar en persona en la sala electoral, y 
        ese voto tiene prioridad sobre el voto por correo. Pero este mismo 
        enfoque podría valer para los votos electrónicos, ¿no?. La gente 
        coaccionada, o cuyo voto fuera comprado, podría aún votar en el lugar 
        público y ese voto tendría prioridad. Así que la coacción del votante me 
        parece una minucia, sea el voto electrónico o no. 



      _____________________________________________________________________

      
      CriptoGRAMA es la versión española de Crypto-GRAM, elaborada por el equipo 
      de traductores de Kriptópolis, con autorización expresa de Bruce Schneier. 
 
      Este ejemplar nunca hubiera sido posible sin la colaboración desinteresada
      de las siguientes personas:

             *  Isidre Marques Serret
             *  Miguel Camacho
             *  Angel Galindo Sánchez
             *  Juan Cruz Ruiz de Gauna
             *  David Gómez
             *  Daniel Cabezas
             *  Oscar Esteban

      _____________________________________________________________________



      -- AVISO IMPORTANTE --

      Kriptópolis dispone de la pertinente autorización de Bruce Schneier 
      para traducir, elaborar y publicar la versión española de su boletín 
      Crypto-GRAM. La información contenida en CriptoGRAMA sólo puede ser 
      redistribuida siempre que se haga de forma completa y con expresa 
      mención de Bruce Schneier como autor de Crypto-GRAM y de Kriptópolis 
      como responsable de CriptoGRAMA.


      Crypto-GRAM es un boletín mensual gratuito dedicado a resúmenes, análisis, 
      comentarios e ideas sobre criptografía y seguridad informática. 
      Crypto-GRAM es elaborado por Bruce Schneier, presidente de Counterpane 
      Systems, autor de "Applied Cryptography" y creador de los algoritmos 
      Blowfish, Twofish y Yarrow. Schneier ha pertenecido a la dirección de la 
      International Association for Cryptologic Research, EPIC y VTW, y es 
      asiduo escritor y conferenciante sobre criptografía.


      _____________________________________________________________________


      Versión Web de este ejemplar:
      http://www.kriptopolis.com/criptograma/cg0019.html

      Este ejemplar se ha distribuido gratuitamente a más de 14.000 personas.

      Si desea recibir la edición mensual de CriptoGrama y la edición semanal
      del Boletín de Kriptópolis, inscríbase gratis en:
      http://www.kriptopolis.com/subs.html


      © Bruce Schneier
      © Kriptopolis (versión en Español).


      _____________________________________________________________________


