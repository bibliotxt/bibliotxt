 

            C R I P T O - G R A M A

            
            © Bruce Schneier
            © Kriptopolis (versión en Español).

            ------------------------------------------------------
            
			Número 8
			            15 de Diciembre de 1998
			
            SUMARIO: 
			
                El engaño de los concursos de 'crackeado' 
                Cómo reconocer texto en claro 
                Noticias 
                En desgracia: los discos Iomega Zip 
                Noticias desde Counterpane Systems 
                Informe final del Consejo Técnico Asesor del Departamento de 
                Comercio sobre Recuperación de claves 
                Comentarios de lectores 
            
            
            ----------------------------------------------------------------
                                  
            CriptoGRAMA es la versión española de Crypto-GRAM, elaborada por el 
            equipo de traductores de Kriptópolis, con autorización expresa de 
            Bruce Schneier. Nuevos ejemplares de CriptoGRAMA estarán disponibles
            cada mes en:
        
               Cripto-GRAMA:   http://www.kriptopolis.com/criptograma/cg.html
                                
            Crypto-GRAM es un boletín mensual gratuito dedicado a resúmenes, 
            análisis, comentarios e ideas sobre criptografía y seguridad 
            informática. Crypto-GRAM es elaborado por Bruce Schneier, presidente 
            de Counterpane Systems, autor de "Applied Cryptography" y creador de 
            los algoritmos Blowfish, Twofish y Yarrow. Schneier ha pertenecido a 
            la dirección de la International Association for Cryptologic 
            Research, EPIC y VTW, y es asiduo escritor y conferenciante sobre 
            criptografía.
            
              Crypto-GRAM:    http://www.counterpane.com/crypto-gram.html
                                 
            ----------------------------------------------------------------          
            
            
                El engaño de los concursos de 'crackeado'
                
                Por Bruce Schneier
                Traducción: Isidre Marqués Serret, ismase@mx3.redestb.es
				
                Podemos verlos anunciados en cualquier momento: "La Compañía X 
                ofrece 1.000.000 de dólares a quien puede atravesar su 
                cortafuegos/reventar su algoritmo/hacer una transacción 
                fraudulenta usando su protocolo/hacer cualquier otra cosa." 
                Estos son los Concursos de Crackeado, y se supone que son para 
                mostrar lo fuerte y seguro que es el objetivo del concurso. La 
                lógica sigue este camino: nosotros ofrecimos un premio para 
                quien lo reventara, y nadie lo hizo. Esto significa que el 
                blanco es seguro.
				
                No lo significa.
				
                Los concursos son un pésimo camino para demostrar la seguridad. 
                Un producto/sistema/protocolo/algoritmo que ha sobrevivido a un 
                concurso sin ser vencido no es, obviamente, de más confianza que 
                uno que no ha sido el objetivo de un concurso. Los mejores 
                productos/sistemas/protocolos/algoritmos disponibles hoy, no han 
                sido el objetivo de ningún concurso, y probablemente nunca lo 
                sean. Los concursos, generalmente, no dan resultados útiles. Hay 
                tres razones básicas para esto.
				
                1. Los concursos son generalmente injustos.
				
                El criptoanálisis supone que el atacante lo conoce todo excepto 
                la clave. Conoce los algoritmos y protocolos, el código fuente, 
                todo. Conoce el texto cifrado y el original. Incluso puede 
                conocer algo sobre la clave de cifrado.
				
                Pero el resultado de un criptoanálisis puede ser cualquier cosa. 
                Puede ser un éxito completo: se logra atravesar, completamente, 
                el sistema de seguridad en un periodo razonable de tiempo. Puede 
                ser un éxito teórico: no se logra romper el sistema de seguridad 
                de una manera útil, pero se descubren agujeros que demuestran 
                que no es tan seguro como se dice. Y cualquier otra cosa entre 
                ambas posibilidades.
				
                La mayoría de concursos de criptoanálisis tiene reglas 
                arbitrarias. Definen con qué tiene que trabajar el atacante, y 
                qué se considera una rotura. Jaws Technologies proporcionó un 
                archivo cifrado y, sin explicar nada acerca de su algoritmo de 
                trabajo, ofreció un premio a quien pudiera recuperar el texto 
                original. Este no es el procedimiento correcto de trabajo del 
                auténtico criptoanálisis; si nadie gana el concurso no significa 
                nada.
				
                La mayoría de los concursos no revelan el algoritmo. Y la 
                mayoría de los criptoanalistas no saben cómo realizar un 
                procedimiento de ingeniería inversa para averiguarlo (yo 
                personalmente lo encuentro tedioso y aburrido); nunca se 
                molestan en analizar el sistema. Este es el motivo por el cual 
                COMP128, CMEA, ORYX, el sistema de cifrado Firewire, el sistema 
                DVD, y el sistema PRNG de Netscape fueron todos ellos vencidos 
                pocos meses después de su divulgación (a pesar de que algunos de 
                ellos se han estado usando desde hace muchos años); una vez se 
                da a conocer el algoritmo, es fácil encontrarle los defectos, 
                pero pueden pasar años antes de que alguien se moleste en 
                realizar el procedimiento de ingeniería inversa y publique el 
                resultado. Los concursos no ayudan en nada.
				
                (Por supuesto, el párrafo anterior no tiene aplicación para el 
                campo militar. Los éxitos de la ingeniería inversa --VENONA, 
                PURPLE-- son innumerables en el mundo "real". Pero, por suerte o 
                por desgracia el mundo académico no trabaja de esa manera.)
                Los concursos injustos no son nada nuevo. A mediados de los 80 
                los autores de un algoritmo de cifrado llamado FEAL lanzaron un 
                concurso. El algoritmo ha sido repetidamente roto por 
                criptógrafos, mediante el criptoanálisis diferencial y lineal y 
                mediante otros sistemas de ataque estadístico. Todo el mundo 
                está de acuerdo en que el algoritmo tiene graves errores. Pero 
                nadie ha ganado todavía el concurso.
				
                2. El análisis no esta controlado.
				
                Los concursos son pruebas aleatorias. ¿Cuentan diez personas 
                trabajando cada una 100 horas para ganar el concurso como 1000 
                horas de análisis? ¿O hicieron todos ellos las mismas cosas? 
                ¿Son analistas competentes, o son gente sin conocimiento que oyó 
                hablar del concurso y quiso probar suerte? Que nadie ganó el 
                concurso no significa que el objetivo es seguro... simplemente 
                significa que nadie ganó.
				
                3. Los premios del concurso rara vez son auténticos incentivos.
				
                El criptoanálisis de un algoritmo, protocolo, o sistema puede 
                ser un trabajo muy duro. La gente cualificada para hacer el 
                trabajo lo puede hacer por una gran variedad de motivos --el 
                dinero, el prestigio, el aburrimiento-- pero tratar de ganar un 
                concurso raramente es uno de ellos. Los concursos se ven en la 
                comunidad del criptoanálisis con escepticismo: la mayoría las 
                compañías que los patrocinan no son conocidas, y la gente duda 
                de si juzgarán los resultados honradamente. Y tratar de ganar un 
                concurso no es nada seguro: alguien se le puede adelantar, 
                dejándole sin nada que recompense sus esfuerzos. Los 
                criptoanalistas son mucho mejores analizando sistemas cuando 
                cobran por su trabajo, o pueden publicar artículos explicando 
                sus éxitos.
				
                Simplemente analicemos las razones económicas. Tomando (a un 
                precio conservador de 125 dólares por hora) el trabajo de un 
                criptoanalista competente, 10.000 dólares significan el sueldo 
                de dos semanas de trabajo, tiempo insuficiente para, 
                simplemente, comenzar a analizar el código. Un premio de 100.000 
                dólares podría valer la pena, pero la ingeniería inversa es un 
                procedimiento aburrido, y todavía no compensa el tiempo 
                necesario para hacer un trabajo completo. Un premio de 1.000.000 
                de dólares empieza a ser interesante, pero la mayoría de las 
                compañías no pueden permitirse este gasto. Y el criptoanalista 
                no tiene ninguna garantía de conseguir el premio: puede no 
                encontrar nada, puede lograr tener éxito, pero después de otra 
                persona, o la compañía puede simplemente no pagar. ¿Por qué 
                debería un criptoanalista donar su tiempo (y buen nombre) a la 
                campaña publicitaria de esa compañía?
				
                Los concursos de criptoanálisis, generalmente, no son más que 
                una herramienta de publicidad. Patrocinar un concurso, incluso 
                uno justo, no es ninguna garantía de que la gente analice el 
                objetivo. Superar un concurso tampoco es ninguna garantía de que 
                no haya errores en el objetivo.
				
                La auténtica medida de confianza es cuántos análisis se han 
                hecho, no si había un concurso. Y el análisis es un proceso 
                lento y pesado. La gente confía en los algoritmos de cifrado 
                (DS, RSA), en los protocolos (Kerberos), y los sistemas (PGP, 
                IPSEC) no a causa de concursos, sino porque todos han sido 
                sometidos a años (décadas, incluso) de profundos análisis y 
                revisiones. Y se han analizado no a causa de un premio 
                escurridizo, sino porque eran interesantes o ampliamente 
                extendidos. El análisis de los quince candidatos al AES va a 
                durar varios años. No hay un premio en el mundo que pueda hacer 
                que los mejores criptoanalistas dejen lo que están haciendo y se 
                dediquen a examinar las ofertas de Meganet Corporation o RPK de 
                Security Inc., dos de las compañías que recientemente ofrecieron 
                premios para quien craquee sus productos. Es mucho más 
                interesante encontrar defectos en Java, o Windows NT, o en la 
                seguridad de los teléfonos celulares.
				
                Las tres razones arriba expuestas son generalizaciones. Hay 
                excepciones, pero son pocas y muy separadas en el tiempo. Los 
                desafíos de RSA, tanto sus desafíos de factorización como los de 
                fuerza bruta simétrica, son justos y interesantes. Estos 
                concursos tienen éxito no porque el dinero de premio sea un 
                incentivo para factorizar números o construir máquina de 
                craquear por fuerza bruta, sino porque los investigadores se 
                interesan ya en la factorización y el craqueo mediante la fuerza 
                bruta. Los concursos simplemente proporcionan un foco para lo 
                que era ya un empeño interesante. La disputa AES, aunque es más 
                una competición que un concurso de criptoanálisis, también es 
                justa.
				
                Nuestro concurso de criptoanálisis sobre Twofish ofrece un 
                premio de 10.000 dólares para el mejor comentario negativo 
                contra Twofish que no sea escrito por los autores del mismo. No 
                hay las definiciones arbitrarias de que es un análisis ganador. 
                No hay texto cifrado que romper o claves que recuperar. Nosotros 
                simplemente premiamos el mejor resultado de la investigación 
                criptoanalítica, cualquiera que pueda ser y sin importar si 
                tiene éxito (o no). Además, el concurso es justo porque 1) el 
                algoritmo esta completamente especificado, 2) no hay definición 
                arbitraria de significa ganar, y 3) el algoritmo es de dominio 
                público.
				
                Los concursos, si se montan correctamente, pueden proporcionar 
                información útil y premiar áreas concretas de investigación. 
                Pero no son una medida útil para juzgar la seguridad. Yo puedo 
                ofrecer 10.000 dólares a la primera persona que fuerce la 
                entrada en mi casa y robe un libro de mi biblioteca. Si nadie lo 
                hace antes de que el concurso termine, ello no significa que mi 
                casa sea segura. Quizá nadie con suficiente habilidad para el 
                robo ha oído hablar sobre mi concurso. Quizá estaban demasiado 
                ocupados haciendo otras cosas. Quizá no eran capaces de forzar 
                la entrada en mi casa, pero sabían cómo falsificar el título de 
                propiedad para ponerla a su nombre. Quizá forzaron la entrada en 
                mi casa, pero echaron una mirada alrededor y decidieron volver 
                cuando hubiera en juego algo de más valor que un premio de 
                10.000 dólares. El concurso no probó nada.
				
                Gene Spafford escribió contra los concursos de craqueo y su 
                texto lo podéis encontrar en la siguiente dirección:
				
                http://www.itd.nrl.navy.mil/ITD/5540/ieee/cipher/old-issues/issue9602 
                
                Matt Blaze también escribió contra estos concursos, pero no 
                hemos podido hallar ninguna buena dirección. 
                
                
                
                
                
                Cómo reconocer texto en claro
                
                Por Bruce Schneier
                Traducción: Juan Cruz Ruiz de Gauna Gorostiza, 
                juancruz.ruiz@si.upna.es
				
                Una máquina de ruptura de claves mediante fuerza bruta prueba 
                todas las claves posibles hasta que encuentra la adecuada. Si la 
                máquina tiene una porción de texto cifrado y lo descifra con una 
                clave tras otra, ¿cómo sabe cuándo ha dado con con el texto en 
                claro (es decir, el texto original legible y sin cifrar) 
                correcto?.
				
                Para mí la respuesta es obvia, pero me encuentro esta pregunta 
                lo suficientemente a menudo como para tratarla en estas páginas. 
                La máquina sabe que ha encontrado el texto en claro precisamente 
                porque el resultado obtenido parece texto en claro.
				
                El texto en claro tiende a parecer texto en claro. Es un mensaje 
                en lenguaje natural, o un fichero de datos de una aplicación 
                informática (programas como Microsoft Word tienen largas 
                cabeceras conocidas; incluso los ficheros PK-ZIP tienen 
                cabeceras conocidas), o una base de datos con un formato 
                aceptable. Cuando miramos un fichero desencriptado parece algo 
                comprensible. Cuando miramos un fichero cifrado o descifrado con 
                una clave errónea, parece un auténtico galimatías.
				
                En los años 40, Claude Shannon inventó un concepto denominado la 
                "distancia de unicidad". Entre otras cosas, la distancia de 
                unicidad mide la cantidad de texto cifrado que se requiere de 
                tal forma que le corresponda un único texto en claro razonable. 
                Este número depende tanto de las características del texto en 
                claro como de la longitud de la clave del algoritmo de cifrado.
                Por ejemplo, RC4 cifra los datos en bytes. Imaginemos una carta 
                con un único carácter ASCII como texto en claro. Hay 26 posibles 
                textos en claro a partir de 256 posibles descifrados. Cualquier 
                clave aleatoria, usada para desencriptar el texto cifrado, tiene 
                una oportunidad de 26/256 para producir un texto en claro 
                válido. El analista no tiene forma de distinguir el texto en 
                claro incorrecto de aquél que sea el correcto.
				
                Ahora imagínemos un mensaje de correo electrónico de 1 KB. El 
                analista prueba claves aleatorias, y eventualmente aparece un 
                texto en claro que parece un mensaje de correo electrónico: 
                palabras, frases, sentencias, gramática. Las posibilidades de 
                que este no sea el texto en claro correcto son infinitesimales.
                Cualquier otra cosa queda a medio camino. La distancia de 
                unicidad determina cuándo podemos pensar como en el segundo 
                ejemplo en lugar de como en el primero.
				
                Para un mensaje standard en inglés la distancia de unicidad es 
                K/6.8, donde K es la longitud de la clave. (El 6.8 es una medida 
                de la redundancia del idioma inglés en ASCII. Para otros textos 
                en claro puede ser más o menos, pero no mucho más o menos). Para 
                DES, la distancia de unicidad es 8.2 bytes. Para cifrados de 128 
                bits, la distancia de unicidad es alrededor de 19 bytes.
                Esto significa que si intentamos descifrar mediante fuerza bruta 
                un texto DES necesitaremos dos bloques de texto cifrado (La 
                longitud de un bloque DES es de 8 bytes). Descifraremos el 
                primer bloque de texto con una clave tras otra. Si el texto en 
                claro resultante parece ser inglés, entonces descifraremos el 
                segundo bloque con la misma clave. Si el segundo bloque también 
                parece ser inglés entonces hemos localizado la clave correcta.
                La distancia de unicidad aumenta a medida que la redundancia del 
                texto en claro disminuye. Para ficheros comprimidos, la 
                redundancia puede ser 2.5, o tres bloques de texto cifrado con 
                DES. Para un cifrado con clave de 256 bits, esto supondría un 
                texto en claro de 105 bytes. Si el texto en claro es una clave 
                aleatoria la redundancia es cero y la distancia de unicidad se 
                va a infinito: es imposible distinguir el texto en claro 
                correcto de uno cualquiera incorrecto.
				
                Pero este es un caso especial. Las más de las veces es fácil 
                reconocer texto en claro. 
                
                
                
                
                
                Noticias
                
                Por Bruce Schneier
                Traducción: José Luis Martín Mas, jlmartin@lander.es
				
                Bien; por fin me he enterado de la verdad sobre Network 
                Associates Inc. y la Key Recovery Alliance (Alianza por el 
                Almacenamiento Centralizado de Claves). El mes pasado hablé de 
                un artículo de Wired News según el cual se habían reincorporado 
                a la KRA. La historia es falsa. Nunca abandonaron la KRA. Desde 
                su creación, Trusted Information Systems ha sido un gran 
                promotor de la KRA. Cuando NAI compró TIS en mayo de 1998, la 
                vinculación de TIS a la KRA le fue transferida a NAI. NAI 
                renunció a la posición de liderazgo que TIS había ostentado 
                hasta entonces en la Alianza, y dejó de acudir a sus reuniones, 
                pero nunca abandonó la KRA. Así pues, NAI es un miembro de la 
                KRA desde que compró TIS.
				
                http://www.wired.com/news/print_version/technology/story/16219.html 
                
                
                
                Un juez federal ha emitido una orden temporal de suspensión 
                contra la entrada en vigor de la Acta para la Protección de la 
                Infancia en Redes (la denominada CDA II). Esto es un asunto 
                importante, y algo que celebrar. Se puede leer la decisión del 
                juez en:
				
                http://www.aclu.org/court/acluvrenoII_order.html
				
                El texto completo del informe del demandante está en:
				http://www.epic.org/free_speech/copa/tro_brief.html
				
                Para mantenerse al día sobre este tema, suscríbase a EPIC Alert:
				http://www.epic.org/alert/subscribe.html
				
                Información sobre un fascinante agujero de seguridad en la Web:
				http://www.securexpert.com/framespoof/index.html 
                
                
                Los abogados de Liquid Audio, una compañía que promueve la 
                distribución segura de música en la Red, presionaron a una 
                persona para que retirara información sobre cómo eliminar las 
                protecciones anti-copia. Se supone que aún se enseña la Primera 
                Enmienda en las clases de la Facultad de Derecho.
				
                http://www.mp3.com/news/122.html 
                
                
                Una buena biblioteca para C++: NTL proporciona estructuras de 
                datos y algoritmos para manipular enteros con signo de longitud 
                arbitraria, vectores, matrices y polinomios en campos de enteros 
                y campos finitos. Acaba de salir la versión 3.1b.
				
                http://www.cs.wisc.edu/~shoup/ntl/ 
                
                
                A la Administración Clinton no le basta con tratar de destruir 
                los medios necesarios para proteger la privacidad personal en 
                Estados Unidos; durante años han tratado de exportar sus 
                principios a otros países. Ahora, cumpliendo con los principios 
                defendidos por esta Administración, los 33 países firmantes del 
                Tratado de Wassenaar se han puesto de acuerdo para poner en 
                práctica los mismos absurdos controles de exportación sobre 
                software de uso general que existen en los Estados Unidos. No sé 
                si esto es del todo cierto, -esta Administración ya ha mentido 
                otras veces sobre cómo son aceptadas internacionalmente sus 
                políticas- pero si lo es, es un gran paso atrás. No tengo muy 
                claro por qué esta Administración cree que asegurarse de que 
                cualquier información delicada será encriptada débilmente, de 
                tal manera que los delincuentes puedan leerla sin dificultades, 
                ayudará al mundo, pero estoy seguro de que tienen alguna idea.
				
                http://www.nytimes.com/library/tech/98/12/biztech/articles/04encrypt.html 
                http://jya.com/wass-au.htm 
                http://jya.com/wass-de2.htm 
                http://biz.yahoo.com/rf/981203/3l.html 
				
                Los firmantes del Tratado de Wassenaar son: Alemania, Argentina, 
                Australia, Austria, Bélgica, Bulgaria, Canadá, Corea del Sur, 
                Dinamarca, Eslovaquia, España, Estados Unidos, Finlandia, 
                Francia, Grecia, Holanda, Hungría, Irlanda, Italia, Japón, 
                Luxemburgo, Noruega, Nueva Zelanda, Polonia, Portugal, Reino 
                Unido, República Checa, Rumanía, Rusia, Suecia, Suiza, Turquía y 
                Ucrania.
				
                http://www.wassenaar.org/
				
                Visite el website de FreeCrypto y envíe un mensaje en contra del 
                Tratado.
                http://www.freecrypto.org 
                
                
                
                                
                
                
                
                En desgracia: discos Iomega Zip
                
                Por Bruce Schneier
                Traducción: Antonio Muntaner, mmg@balears.net
				
                Las instrucciones siguientes describen una forma de saltarse la 
                protección de lectura/escritura en los discos ZIP-100 de Iomega. 
                No se trata de un trabajo mío: lo he recibido de forma anónima. 
                Si alguien sabe quién ha sido su autor, le ruego le diga que se 
                ponga en contacto conmigo.
				
                La característica de protección por contraseña supone tener una 
                contraseña y un indicador (flag) de seguridad almacenados en el 
                disco ZIP (¿en el sector de arranque?). Esta clave e indicador 
                de estado de seguridad son leídos por el "firmware" de la unidad 
                ZIP, no permitiendo el acceso a un disco que considera que está 
                protegido contra lectura/escritura.
				
                La unidad ZIP lleva un sistema de autoapagado que detiene 
                literalmente el giro de la unidad (¿y aparca la cabeza de 
                lectura/escritura?) tras quince minutos de inactividad. La 
                unidad vuelve a arrancar automáticamente en cuanto se necesita.
                El "firmware" no se da cuenta (en el momento de escribir esto: 
                28 de Mayo de 1998), de un cambio en el disco a través del 
                dispositivo manual de expulsión del disco que existe en la parte 
                de atrás del dispositivo. Si tras una parada, un disco que se 
                sabe está protegido es expulsado manualmente, y se inserta en su 
                lugar otro disco también protegido, la contraseña del primer 
                disco todavía es considerada válida por el "firmware", y por lo 
                tanto, sigue valiendo para el segundo disco. El segundo disco 
                puede ser así "desprotegido", sin más que utilizar la misma 
                clave que para el primer disco.
				
                Para ejecutar este truco, siga estas instrucciones:
				
                    Se necesita un disco ZIP-100 virgen. Llamémosle disco 
                    "Conocido". 
					
                    Introduzca el disco conocido en la unidad ZIP.
					
                    Proteja el disco conocido con una contraseña contra 
                    lectura/escritura, usando las herramientas Iomega. 
					
                    Usando las preferencias de arranque de estas herramientas, 
                    fije el parámetro "Sleep Time" de la unidad ZIP a 1 minuto. 
                    Deje que la unidad se apague, con el disco conocido todavía 
                    dentro. (la diferencia en el ruido de salida es bastante 
                    obvia). 
					
                    Tome un "clip" sujetapapeles y desdóblelo. 
					
                    Pinche con el clip en el pequeño orificio de la parte 
                    trasera de la unidad ZIP y extraiga de forma manual el disco 
                    conocido. (Este orificio está situado en la parte trasera de 
                    la unidad, por encima de la toma para la impresora o del 
                    segundo conector SCSI). 
					
                    Inserte el disco desconocido. 
					
                    La unidad podría empezar a girar y tomar velocidad, o bien 
                    permanecer quieta. 
					
                    Usando las herramientas de Iomega, QUITE la protección del 
                    disco, usando la CLAVE CONOCIDA, según la instrucción 3 
                    anterior.

					Utilizando el botón normal de expulsión, que está en la 
                    parte delantera del aparato, extraiga el disco 
                    "DESCONOCIDO". 
					
                    Vuelva a insertar el disco "DESCONOCIDO" otra vez (para 
                    permitir el acceso a ficheros y directorios). 
                    Haga doble click en el icono de la unidad de disco en la 
                    ventana del Explorador de ficheros. 
					

				¡Listo! 
                
                
                
                
                Noticias desde Counterpane Systems
                
                Por Bruce Schneier
				
                Existe otro informe técnico (el número 3) sobre Twofish en 
                nuestro web. Este se denomina "Implementaciones mejoradas de 
                Twofish" y proporciona mejores cifras de rendimiento sobre 
                ordenadores de 32 bits, tarjetas inteligentes y hardware:
                http://www.counterpane.com/twofish-speed.html 
                
                
                También hay una implementación de Twofish en Delphi:
                http://www.hertreg.ac.uk/ss/d_crypto.html 
                
                
                Y por último, hemos publicado un documento que compara el 
                rendimiento de los 15 candidatos AES sobre procesadores de 32 
                bits, tarjetas inteligentes y hardware:
                http://www.counterpane.com/AES-performance.html 
                
                
                
                
                Informe final del Consejo Técnico Asesor del Departamento de 
                Comercio sobre Recuperación de claves
                
                Por Bruce Schneier
                Traducción: Jaime Millán de Castro, us_jaime@svalero.es
				
                El Comite Técnico Asesor para el Desarrollo de un Estándar 
                Federal del Procesado de Información para la Infraestructura 
                Federal de Administración de Claves, fue fundado en julio de 
                1996 por el Departamento de Comercio. El Comité, que estuvo 
                totalmente constituido el 24 de julio de 1996, celebró su 
                primera reunión los dias 5 y 6 de diciembre de 1996. El 
                objetivo, proximo a cumplirse, fue lograr un acuerdo con la 
                industria sobre la regulación de la recuperación de claves.
                Su reunión final se celebró entre los días 17 y 19 de noviembre 
                de 1998. La reunión tuvo más de fracaso que de éxito. Aunque el 
                comité concluyó todo su trabajo, su documento final continúa 
                siendo redactado y continuará así durante las próximas semanas. 
                El documento es mucho más coherente que el realizado en el mes 
                de junio. Sin embargo, todavía no ha sido revisado 
                minuciosamente.
				
                A continuación se presentan algunos puntos que pudieran resultar 
                de interés.
				
                Aunque pudiera ser descrito como tal, el documento final del 
                comité difícilmente puede considerarse resultado del trabajo de 
                una comisión formada por 22 miembros. La participación disminuyó 
                hasta tal punto que, a los miembros que no asistieron a la 
                reunión final, se les pidió que dimitieran para que así pudiera 
                lograrse el "quorum". Al acabar la reunión definitiva, menos de 
                media docena de participantes que todavía quedaban, continuaban 
                aún realizando cambios sustantivos en el documento. Los cambios 
                continuaron siendo realizados por el presidente y otros 
                individuos incluso tras finalizar la reunión definitiva del 
                comité.
				
                La comision no concluyó "nada". El comite nunca votó, ni 
                siquiera trató, si el depósito de claves tenía sentido, dónde 
                debería tener lugar, o siquiera si es posible, seguro o si tiene 
                alguna justificación desde el punto de vista económico.
                La comisión no hizo ningún tipo de recomendación. El trabajo del 
                comite es de dominio público y presumiblemente será continuado 
                por el NIST. Sin embargo, el comité no recomendó que su trabajo 
                siguiera adelante.
				
                El documento producido por el comité no presenta un anteproyecto 
                sobre cómo realizar el depósito de claves. Muestra más de 200 
                cosas que los productos de recuperación de claves deberían o no 
                deberían hacer, sin mencionar siquiera cómo hacerlas.
				
                No hay ninguna razón para creer que el documento del comité es 
                consistente o está completo. Como ejemplo, la mayoría de las más 
                de 200 estipulaciones incluidas en el documento, están 
                contenidas en una seccion que fue completamente reescrita por un 
                solo miembro un poco antes de la reunión definitiva. Durante el 
                último día de la reunión final y antes de que esta sección 
                hubiera sido revisada por lo que quedaba del comité, este 
                miembro se marchó, argumentando que puesto que el grupo ya no 
                contaba con el "quorum" suficiente, su presencia allí ya no era 
                necesaria. La sección fue después revisada superficialmente por 
                los pocos miembros que aún quedaban.
				
                El documento fue escrito al menos tanto por el NIST, como por la 
                NSA y el propio comitée. Aunque los úunicos miembros con derecho 
                a voto del comité provenían del sector privado, ciertamente no 
                fue un producto (o iniciativa) de dicho sector." 
                
                
                
                
                Comentarios de los lectores
                
                Traducción: Eduardo Vázquez Palacios, dronos@bigfoot.com
				
                * De Chris Smith, smith@interlog.com:
				
                Ha escrito acerca de las nuevas normas sobre criptografía de 
                Canadá. Sin embargo, las nuevas normativas no son, como usted 
                describe, acerca de las "normas de exportación", sino acerca de 
                la política doméstica. Esto trata sobre la criptografía en 
                Canadá. Mi interpretación es que Canadá va a continuar 
                cumpliendo con el "Tratado de Wassenaar", que actualmente limita 
                la exportación de criptografía fuerte. 
                
                
                * De George Foot, george@oxted.demon.co.uk:
				
                Schneier escribió:
				
                "El mundo electrónico avanza demasiado deprisa para este ciclo. 
                Un defecto importante en un sistema de comercio electrónico 
                puede llevar a la bancarrota a una compañía en pocos días. Los 
                sistemas de hoy en día tienen que anticiparse a futuros ataques. 
                Cualquier sistema de comercio electrónico con éxito podrá 
                permanecer en uso durante 10 años o más. Tiene que ser capaz de 
                resistir el paso del tiempo: ataques más inteligentes, mayor 
                poder de cálculo y mayores incentivos para trastornar un sistema 
                muy grande. No habrá tiempo para actualizarlo mientras esté 
                funcionando."
				
                He leído cada ejemplar de Criptograma con gran interés. Si se me 
                permite como simple suscriptor hacer una observación, me 
                gustaría decir que hay una gran necesidad de aprender de las 
                advertencias en el párrafo anterior.
				
                ¿Pero qué principios deben ser adoptados para protegerse del 
                peligro que se predice? Mi criterio es la simplicidad. Descartar 
                los complejos algoritmos que con cada evolución abren una grieta 
                a través de la cual puede ser examinado exhaustivamente el 
                entorno de trabajo sin límite de tiempo.
				
                Escoger, en lugar de ello, un sistema simple que sólo tenga 
                parámetros para cada dos estaciones que deseen comunicarse y 
                para cada mensaje enviado, que no publique claves y no tenga 
                ningún tipo de asociación con una tercera parte. 
                
                
                * De Illuminatus Primus, vermont@gate.net:
				
                Me he dado cuenta de que la principal razón de que la 
                automatización plantee un nuevo riesgo es porque el sistema 
                depende cada vez más de componentes tontos (comparativamente 
                hablando) antes que de los humanos. Un pequeño y aislado 
                programa normalmente no reconocerá cuando cambie repentinamente 
                la dirección del flujo monetario porque los pequeños y aislados 
                programas no aprenden de sí mismos como reconocer el fraude. Sin 
                embargo los humanos, irracionablemente, a veces esperan que lo 
                hagan. La cura es, para la mayor parte de la gente, pasar el 
                tiempo traduciendo los sistemas de alerta a los que están 
                acostumbrados los humanos en lenguaje comprensible por las 
                máquinas. Por ejemplo, Visa me avisa cada vez que un cambio 
                sospechoso es detectado en mi patrón de gastos. Es algo parecido 
                a tener un amigo en el banco vigilando mi dinero, pero en 
                realidad son sólo unas pocas comprobaciones realizadas en una 
                fracción de segundo por un ordenador en alguna parte.
				
                La automatización nos proporciona también un gran beneficio: los 
                nuevos agujeros de seguridad en el sistema pueden ser 
                solucionados en muy poco tiempo. Los sistemas centralizados se 
                benefician del momento en que el agujero es reparado y los 
                sistemas descentralizados lo hacen del momento en que la 
                solución se propaga. Creo que se puede hacer una buena 
                argumentación sobre cómo los actuales sistemas dependientes de 
                los humanos realmente pueden ser peores que los sistemas 
                digitales. Por ejemplo, sólo hay que observar los problemas que 
                trajo la introducción de un nuevo valor monetario en Estados 
                Unidos para detener el fraude. Los humanos, la mayoría de las 
                veces, pueden tardar más tiempo en adaptarse a una nueva 
                situación que el tiempo necesario para transmitir un nuevo 
                código de autentificación alrededor del mundo millones de veces.
                Quizás hay un gran dilema alrededor de esto: la necesidad de 
                nodos individuales para volverse más inteligente. Si mi tarjeta 
                de crédito fuese realmente un pequeño terminal que me permitiese 
                saldar mis recibos pendientes, quizás el fraude a través de mi 
                tarjeta sería más difícil de llevar a cabo. Quizás si los coches 
                tuviesen medidores en la tapa del depósito de gasolina, las 
                gasolineras no podrían engañar a la gente tan fácilmente. Y 
                quizás, si los mercados intercambiaran moneda digital en lugar 
                de dinero impreso, la falsificación no habría tardado décadas en 
                descubrirse. 
            
            
            
            
             
                -----------------------------------------------------------------
                                           
                        Kriptópolis dispone de la pertinente autorización de 
                        Bruce Schneier para traducir, elaborar y publicar la 
                        versión española de su boletín Crypto-GRAM.

                        CriptoGRAMA sólo puede ser redistribuida de forma 
                        completa (esta nota incluida).

                        KRIPTÓPOLIS
                        http://www.kriptopolis.com

                        Equipo de Traducción:

                          * Juan De Miguel Hernández     <jdmiguel@kriptopolis.com>
                          * Isidre Marqués Serret        <ismase@mx3.redestb.es>
                          * Juan Ruiz de Gauna Gorostiza <juancruz.ruiz@si.upna.es>
			  * José Luis Martín Mas         <jlmartin@lander.es>
                          * Antonio Muntaner             <mmg@balears.net>
                          * Eduardo Vázquez Palacios     <dronos@bigfoot.com>
                          * Jaime Millán de Castro       <us_jaime@svalero.es>
        
                ------------------------------------------------------------------


             
                



