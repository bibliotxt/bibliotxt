



            C R I P T O - G R A M A
            
             
            (c) Bruce Schneier
            (c) Kriptopolis (versión en Español).
                 
                http://www.kriptopolis.com/criptograma/cg.html


            -----------------------------------------------------
            
                      Número 4
                                 15 de Agosto de 1998

            -----------------------------------------------------

            
            SUMARIO: 
                
             1. Un "crackeador" hardware para DES
                                
             2. KEA (Key Exchange Algorithm)

             3. Investigación en Counterpane Systems
                
             4. Noticias
                
             5. Biométrica: verdades y ficciones
                
             6. Noticias de Counterpane Systems

             --------------------------------------------------------------

            
            CriptoGRAMA es la versión española de Crypto-GRAM, elaborada por el 
            equipo de traductores de Kriptópolis, con autorización expresa de 
            Bruce Schneier. Nuevos ejemplares de CriptoGRAMA estarán disponibles
            cada mes en:
        
               Cripto-GRAMA:   http://www.kriptopolis.com/criptograma/cg.html
                                
            Crypto-GRAM es un boletín mensual gratuito dedicado a resúmenes, 
            análisis, comentarios e ideas sobre criptografía y seguridad 
            informática. Crypto-GRAM es elaborado por Bruce Schneier, presidente 
            de Counterpane Systems, autor de "Applied Cryptography" y creador de 
            los algoritmos Blowfish, Twofish y Yarrow. Schneier ha pertenecido a 
            la dirección de la International Association for Cryptologic 
            Research, EPIC y VTW, y es asiduo escritor y conferenciante sobre 
            criptografía.
            
              Crypto-GRAM:    http://www.counterpane.com/crypto-gram.html
                                 
            ----------------------------------------------------------------          
            
                 



UN "CRACKEADOR" HARDWARE PARA DES
- ---------------------------------

El 17 de julio la Electronic Frontier Foundation (EFF) anunció la
construcción de un "crackeador" hardware por fuerza bruta para DES.
Este dispositivo de 220.000 dólares puede romper una llave DES en una
media de 4'5 días.

Aquí la noticia no es que DES sea inseguro, que los "crackeadores" de
algoritmos tipo hardware se puedan construir, o que una longitud de
clave de 56 bits sea demasiado corta. Todo eso ya lo sabíamos. Los
criptógrafos lo han estado diciendo durante años (mi libro lo decía en
1994). Las predicciones tecnológicas realizadas sobre la disminución
del coste de una máquina de este tipo hechas a finales de los 70, los
80 y principios de los 90, se han demostrdo como falsas.

La noticia está en el largo tiempo que el gobierno ha estado negando
que estas máquinas fuesen viables. Tan recientemente como el 8 de
junio de 1998, Robert Litt, representante [principal associate deputy
attorney general] del Departamento de Justicia, negó que el FBI
pudiera romper DES. "[Es una leyenda que] tengamos superordenadores
que puedan romper cualquier cosa que haya por ahí", dijo Litt.
"Déjenme que sitúe el problema en su contexto: se necesitarían 14.000
ordenadores Pentium trabajando durante 4 meses para desencriptar un
simple mensaje...No sólo estamos hablando de que se necesitaría toda
la potencia de cálculo del FBI y la NSA, sino de todos los
departamentos de policía". (Ver la historia completa en 
http://www.wired.com/news/news/politics/story/12830.html)

Mi comentario fue que el FBI era incompetente o estaba dormido, o
ambas cosas.

La máquina de la EFF no es ingeniería punta. No es criptografía
actualizada. No es tecnología de última generación. La máquina usa la
vieja y aburrida tecnología de chips, con un diseño de hardware
simple, software muy poco interesante y nada de criptografía. No es
una maravilla de la ingeniería. Lo único interesante es lo realmente
sencillo que es el diseño.

Lo que es más, la máquina es maravillosamente escalable. La EFF gastó
220.000 dólares en su primera máquina. Ahora que el trabajo de diseño
está hecho, pueden construir una segunda por unos 50.000 dólares. Por
cada vez que se duplique el precio, se doblará la velocidad de la
máquina (entonces una segunda máquina de 250.000 dólares podría romper
DES en menos de un día). Y la ley de Moore predice que la misma
máquina será o el doble de rápida o el doble de barata en otros 18
meses.

La máquina de EFF ha roto DES, pero igual de fácilmente podría haber
sido diseñada para romper cualquier otro algoritmo de encriptación. El
ataque ha sido contra la longitud de la clave, no contra el diseño del
algoritmo. Más aún, un diseño ligeramente más caro podría haber
utilizado FPGAs, permitiendo así que el sistema trabajase contra una
amplia variedad de algoritmos y sus variantes.

La única solución posible es utilizar un algoritmo con una llave más
larga. DES tiene una llave fija de 56 bits. Triple-DES tiene una llave
de 112 bits. No hay silicio suficiente en la galaxia ni tiempo
suficiente antes de que el sol se apague para hacer un ataque de
fuerza bruta contra Triple-DES. AES requiere llaves de 128, 192 y 256
bits.

La EFF es un grupo que trabaja por las libertades civiles, y ésto sólo
ha sido un proyecto de demostración. Las agencias del gobierno como el
FBI o la NSA podrían presumiblemente invertir mucho más tiempo para
implementar una solución más eficiente. Es razonable suponer que
cualquier país con presupuesto para inteligencia ha construido este
tipo de máquina, probablemente un par de órdenes de magnitud más
rápida.

Indudablemente hay muchas, muchas mejoras que pueden hacerse al diseño
de la EFF para conseguir un ataque de fuerza bruta más barato y más
rápido. Pero el hecho de que un grupo a favor de las libertades
civiles pueda utilizar tecnología antigua para construir algo que la
administración ha negado que pudiese ser construido... ésa es la
verdadera noticia.

Nota de prensa de la EFF:
http://www.eff.org/descracker/ 

Wired News:
http://www.wired.com/news/news/technology/story/13800.html 

Cnet
http://www.news.com/News/Item/0%2C4%2C24322%2C00.html?sas.mail 

Historia en el New York Times:

http://www.nytimes.com/library/tech/yr/mo/biztech/articles/17encrypt.htm
l




KEA (KEY EXCHANGE ALGORITHM)  [Algoritmo de intercambio de claves]
- ------------------------------------------------------------------

El mes pasado la NSA desclasificó Fortezza, incluyendo el cifrado
simétrico Skipjack y el algoritmo de confluencia de llaves KEA. El mes
pasado hablé sobre Skipjack. Este mes es el turno de KEA.

Antes de la desclasificación, oí describir a KEA como un
"Diffie-Hellman con una variación". Realmente, hay una variación y
media.

En el Difie-Hellman normal, Alice combina la llave pública de Bob con
su propia llave privada para crear una llave de sesión. Después Bob
combina su llave privada con la llave pública de Alice para crear la
msma llave de sesión.

KEA hace ésto de una forma un poco diferente. Ambos, Alice y Bob,
tienen unas llaves privada y pública de larga duración, pero también
generan llaves privadas y públicas de un solo uso para una sesión
específica. Alicia combina su llave privada de larga duración con la
llave pública de sesión de Bob, y su llave privada de sesión con la
llave pública de larga duración de Bob.

El beneficio de este enfoque está en que no se crea dos veces la misma
llave Diffie-Hellman. Cada sesión crea dos combinaciones únicas y dos
llaves únicas. (Lo malo, por supuesto, es que hay implicados el doble
de cálculos).

La media variación está en cómo se utilizan las dos llaves generadas
por Diffie-Hellman. En lugar de usarse directamente como llaves, los
dos valores de 80 bits se pasan por una función unidireccional
[one-way function] (basada en Skipjack) para crear un valor único de
80 bits que se convierte en la llave. Doy por supuesto que no se usan
nunca matemáticas directas; hay un proceso de "embrollamiento" entre
medias.

Kea es un diseño muy sencillo, así que no está consiguiendo tanta
atención como Skipjack. Es realmente una pena. Espero ver a KEA
apareciendo en los comités de normalización debido a que la gente lo
utilice en otros sistemas de intercambio de llaves.

http://csrc.nist.gov/encryption/skipjack-kea.htm 




INVESTIGACION EN COUNTERPANE SYSTEMS
- ------------------------------------

"Interacciones entre protocolos y el ataque del protocolo
seleccionado"
("Protocol Interactions and the Chosen Protocol Attack")
J. Kelsey, B. Schneier, and D. Wagner, Security Protocols, 5th
International Workshop April 1997 Proceedings, Springer-Verlag, 1998,
pp. 91--104. 

Varios sistemas utilizan las mismas llaves criptográficas para
diferentes protocolos (por ejemplo, SSL y S/MIME usan el mismo
certificado de llave pública). Este trabajo presenta un ataque a las
interacciones entre protocolos. Un atacante puede crear un nuevo
protocolo que es individualmente fuerte, pero que rompe otro protocolo
objetivo cuando ambos funcionan utilizando la misma llave. El trabajo
concluye con una discusión sobre los principios de diseño para
resistir este tipo de ataque.

http://www.counterpane.com/chosen_protocol.html 




NOTICIAS
- --------

Parece que cada pocos meses tenemos el depósito de llaves
reempaquetado con un nuevo nombre. El último nombre es "Private
Doorbell", y la novedad está en que las llaves están depositadas en
los direccionadores [routers]. Aparte del nombre, no existe realmente
ninguna diferencia entre éste y otros sistemas de depósito de claves:
1) Tiene que confiar la seguridad de sus comunicaciones a la fortaleza
de este sistema. Si falla, sus comunicaciones dejan de ser privadas.
2) Las llaves de comunicación deben estar depositadas, para lo que no
existe ningún proyecto empresarial legitimado. 3) Para que ésto
funcione tiene que estar en marcha una infraestructura enorme y cara.
Al FBI le gusta esta propuesta, por supuesto.

http://www.wired.com/news/news/technology/story/13658.html
http://www.zdnet.com/zdnn/stories/zdnn_smgraph_display/0,3441,336043,00
.html
http://www.infoworld.com/cgi-bin/displayStory.pl?980714.wnencryption.ht
m 


Los investigadores continuan analizando Skipjack. He visto ataques
contra variantes de 28 vueltas [rounds] (el cifrado completo tiene 32
vueltas) que son más eficientes que el ataque de fuerza bruta. Parece
que Skipjack ha sido cuidadosamente diseñado para no ser más seguro
que su llave de 80 bits.


El máximo responsable civil del Pentágono cree que no hay dos personas
en el mundo que tengan el "derecho divino" a comunicarse en secreto
total.

http://www.wired.com/news/news/technology/story/14098.html 


IBM está divulgando el código fuente de PKIX. Bien por ellos.

http://www.techweb.com/se/directlink.cgi?INW19980803S0013 




BIOMETRICA: VERDADES Y FICCIONES
- --------------------------------

La biométrica es seductora: tú eres tu propia llave. Tu voz abre la
puerta de casa. Tu escáner retinal te permite acceder a las oficinas
de la empresa. Con tu huella dactilar accedes a tu cuenta en el
ordenador. Desafortunadamente, la realidad de la biométrica no es tan
simple.

La biométrica es la forma de identificación más antigua. Los perros
tienen ladridos distintos. Los humanos reconocen las caras de los
demás. Al teléfono, tu voz te identifica como la persona que está en
la línea. En un contrato, tu firma te identifica como la persona que
lo rubricó. Tu fotografía te identifica como la persona poseedora de
un pasaporte concreto.

Lo que hace que la biométrica sea útil para la mayoría de estas
aplicaciones es que puede ser almacenada en una base de datos. La voz
de Alice sólo te sirve como identificador biométrico en el teléfono si
previamente ya sabes quién es; si es una extraña, no ayuda en nada.
Ocurre lo mismo con la escritura de Alice; sólo puedes reconocerla si
ya la conoces. Para resolver este problema, los bancos almacenan
tarjetas con las firmas. Alice firma en una tarjeta y se guarda en el
banco (el banco necesita mantener su perímetro de seguridad para que
ésto funcione correctamente). Cuando Alice firma un cheque, el banco
compara su firma con la que tiene almacenada, para asegurarse de que
el cheque es válido.

Hay una gran cantidad de magnitudes biométricas. He mencionado la
escritura, la voz y el reconocimiento del rostro. También están la
geometría de las manos, huellas dactilares, escáneres retinales, ADN,
patrones de escritura, geometría de la firma (no sólo el aspecto de la
firma, sino también la presión del bolígrafo, la velocidad de
escritura, etc) y otras. Las tecnologías que hay detrás de unas son
mejores que otras, y todas ellas mejorarán.

"Mejorar" significa dos cosas diferentes. Primero, significa que el
sistema no identificará incorrectamente a un impostor como Alice. El
objetivo principal de la biométrica es demostrar que Alice es Alice,
por tanto, si un impostor puede burlar con éxito el sistema, es que
éste no está funcionando muy bien. A ésto se le llama un falso
positivo. Segundo, "mejorar" significa que el sistema no identificará
incorrectamente a Alice como un impostor. De nuevo, el objetivo de la
biométrica es demostrar que Alice es Alice, y si Alice no puede
convencer al sistema de que es ella misma, entonces tampoco está
funcionando bien. A ésto se le llama un falso negativo. En general, se
puede calibrar un sistema biométrico para fallar en el lado del falso
positivo o del falso negativo.

Las magnitudes biométricas son excelentes porque son difíciles de
forzar: es difícil poner una huella digital falsa en tu dedo, o hacer
que tu retina parezca ser la de otra persona. Algunas personas pueden
imitar las voces de otras, y Hollywood puede hacer que las caras de
unas personas se parezcan a las de otras, pero estas son posibilidades
muy concretas o muy caras. Cuando ves a una persona escribiendo su
firma, generalmente se sabe si es la suya o la de cualquier otro.

Las magnitudes biométricas son horribles porque son muy fáciles de
forzar: es fácil robar una biométrica después de que se ha hecho la
medición. En todas las aplicaciones señaladas anteriormente, el
verificador necesita comprobar no sólo que la biométrica es correcta,
sino también que ha sido introducida de forma correcta. Imaginemos un
sistema remoto que utiliza el reconocimiento del rostro como
biométrica. "Para conseguir la autorización, tómese una Polaroid de
usted mismo y envíela por correo. Nosotros compararemos la fotografía
con la que tenemos almacenada". ¿Cuáles son los posibles ataques en
este caso?.

Sencillo. Para hacerse pasar por Alice, se le hace una Polaroid cuando
no esté mirando. Entonces, en algún momento posterior, se utiliza para
burlar el sistema. Este ataque funciona porque mientras que es difícil
hacer que tu cara se parezca a la de Alice, es fácil conseguir una
fotografía de su cara. Y puesto que el sistema no verifica que la
fotografía es de tu cara, sino que sólo comprueba que concuerda con la
imagen almacenada de Alice, podemos burlarlo.

De forma similar, podemos falsificar la biométrica de una firma
utilizando una fotocopiadora o un fax. Es difícil falsificar la firma
del vice-presidente en un documento en la que te dé un ascenso, pero
es fácil recortar su firma de otra carta, pegarla en la carta en la
que te da el ascenso, fotocopiarlo todo junto y mandarlo al
departamento de recursos humanos...o simplemente mandárselo por fax.
No serán capaces de darse cuenta de que la firma no fue recortada de
otro documento.

La moraleja es que la biométrica funciona bien sólo si el verificador
puede comprobar dos cosas: uno, que la biométrica vino de la persona
al mismo tiempo que la verificación, y, dos, que la biométrica
concuerda con la almacenada en un fichero. Si el sistema no puede
hacer ésto, no puede funcionar. Las magnitudes biométricas son
identificadoras únicas, pero no son secretas (Repita esta frase hasta
que se le grabe).

Consideremos otro posible sistema biométrico: la huella dactilar como
autorización remota para el acceso a una cuenta. Alice pone su huella
dactilar en un lector integrado en el teclado (no se ría, hay montones
de empresas que quieren que ésto se haga). El ordenador envía la
huella dactilar digital al servidor. El servidor verifica la huella y
permite la entrada de Alice si coincide con la que tiene almacenada.
Esto no funcionará porque es demasiado sencillo robar la huella
dactilar de Alice, y una vez que la tienes es fácil engañar al
servidor, una y otra vez. Las magnitudes biométricas son
identificadoras únicas, pero no son secretas.

Esto nos lleva al segundo gran problema de la biométrica: no gestiona
bien los fallos. Imaginemos que Alice utiliza la huella dactilar como
biomética, y alguien la roba. ¿Y ahora qué?. Esto no es un certificado
digital, donde una tercera parte de confianza puede proporcionarle
otro. Es su pulgar. Sólo tiene dos. Si alguien roba tu biométrica,
permanece robada durante toda la vida; no hay retorno posible a una
situación segura. (Pueden surgir otros problemas: hace demasiado frío
como para que el dedo de Alice pueda registrarse en el lector, su dedo
está demasiado seco, o lo pierde en un espectacular accidente con una
máquina. Las llaves no tienen una forma de fallar tan dramática).

Un tercer problema, mucho menor, es que las magnitudes biométricas
tienen que ser comunes para las diferentes funciones. Del mismo modo
que no se deben usar las mismas contraseñas en dos sistemas
diferentes, no se debe utilizar la misma llave de encriptación en dos
aplicaciones diferentes. Si se utiliza mi huella dactilar para
arrancar el coche, desproteger mis archivos médicos y leer mi correo
electrónico, entonces no es difícil imaginarse muy malas situaciones.

Las magnitudes biométricas son potentes y útiles, pero no son llaves.
Son útiles en situaciones donde existe una vía de confianza entre el
lector y el verificador; en estos casos, todo lo que se necesita es un
identificador único. No son útiles cuando se necesitan las
características de una llave: secretismo, aleatoriedad y capacidad de
modificarse o destruirse. Las magnitudes biométricas son
identificadoras únicas, pero no son secretas.




NOTICIAS DE COUNTERPANE SYSTEMS
- -------------------------------

Twofish, nuestra propuesta para el proceso de selección del Standard
de Encriptación Avanzado (AES, Advanced Encryption Standard), ha sido
aceptado como un candidato válido por el NIST. Esto significa que
hemos recibido una comunicación oficial y que van a presentar Twofish
al primer congreso de AES en Ventura, la próxima semana. Se espera un
proceso de varios años para seleccionar el AES.
http://www.counterpane.com/twofish.html 

Counterpane Systems está trabajando con varias compañías de tarjetas
inteligentes para implementar soluciones al análisis diferencial de
consumo de energía y otros ataques indirectos [side-channel attacks].
El primero de una serie de trabajos teóricos sobre este asunto se
presentará en la conferencia ESORICS en septiembre.
http://www.counterpane.com/side_channel.html

Unos 70 productos están utilizando actualmente el algoritmo de
encriptación Blowfish. Es rápido y es gratuito.
http://www.counterpane.com/products.html 



---------------------------------------------------------------------------------------------
                                           
                        Kriptópolis dispone de la pertinente autorización de 
                        Bruce Schneier para traducir, elaborar y publicar la 
                        versión española de su boletín Crypto-GRAM.

                        CriptoGRAMA sólo puede ser redistribuida de forma 
                        completa (esta nota incluida).

                        KRIPTÓPOLIS
                        http://www.kriptopolis.com

                        Traducción:

                          * Angel Galindo Sánchez     <agalindo@lacaja.es>

-----------------------------------------------------------------------------------------------











