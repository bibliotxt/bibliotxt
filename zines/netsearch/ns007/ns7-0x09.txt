=-[ 0x09 ]-==================================================================
=-[ NetSearch Ezine #7 ]-====================================================
=-[ Articulos breves  ]-=====================================================
=-[ por Varios ]-============================================================


QuasaR: Nos llego un mail con este mini de gnupg. Ahi va:


GnuPg (pretty Good Privacy)
=_=_=_=_=_=_=_=_=_=_=_=_=_=

Bueno, aqui estamos otra vez mas escribiendo otro articulo, como pasa el tiempo...
Esta vez os voy a dar la puta coña con la privacidad de datos, una cosa que, en los dias de
hoy es muy extremadamente importante, sobre todo, si tenemos datos de suma importancia y queremos
que nadie tenga acceso a ellos, o de acceder que sea teoricamente imposible descifrarlos, para esto
os voy a hablar de PGP (Pretty Good Privacy), en este caso lo voy a enfocar como GnuPG (GNU Privacy Guard), el PGP de 
Gnu, mas conocido como gpg (no liaros con las iniciales ;).
Espero no dejarme cosas, pero siempre escribo a contrareloj y a veces (o muchas veces) se me va la 
olla y me dejo cosas, esperando que esto sirva de precedente os tengo pensado hablar de GnuPg,
alguno de los bugs mas importantes de este cifrado (que los hay ;), y como no su uso y manejo, que
eso es al fin y al cabo una de las cosas mas importantes.
Simplemete destacar, antes de entrar en materia que (por lo menos que se sepa) "nadie" ha conseguido
descifrar una clave firmada con PGP (ni siquiera la NSA -Agencia de Seguridad de los EEUU-) lo que nos da una idea del gran poder de cifrado, solo rumores
de que un tal matematico habia conseguido hacer el proceso inverso..pero ya digo, hasta el momento
este cifrado esta considerado altamente seguro ;),aunque eso demuestra que la instalacion de un programa criptografico no es suficiente, sobre todo por ciertas vulnerabilidades que veremos mas adelante.
Antes de nada tenemos que bajarlo, de la web de PGP Internacional (http://www.pgpi.com), ya que no hay problemas de exportacion fuera de los EEUU ;), o el GNUPG, que es el que recomiendo (sobre todo pAra Linux) de http://www.gnupg.org,aunque hay versiones tanto para Linux como para Windows.
Ahora vamos a ver los pasos a seguir para generar nuestras claves (publica y privada) y el cifrado de informacion. Me voy a basar en el GnuPG, y os expondre los comandos del PGP de Gnu, con lo que si teneis el PGP que no es de Gnu puede diferir en varios aspectos.

Generacion de Claves
=_=_=_=_=_=_=_=_=_=_
Las claves las vamos a generar de la siguiente manera:
gpg --gen-key
donde se generaran nuestras claves, una publica y una privada.
La privada pregunta el algoritmo que se va a usar, cuanto mayor numero de bits mas seguro,siendo el tamaño minimo de 768 bits y el maximo de 2048, siendo recomendado por defecto el DSA/El Gamal de 1024 bits.
Despues introduciremos nombre, comentario y direccion de correo electronico y por supuesto una contraseña, que ni que decir tiene que sea larga (no menos de 8 caracteres), que contenga minusculas,mayusculas,numeros..., caracteres especiales no alfanumericos.., todo esto para que sea practicamente indescifrable en un ataque de fuerza bruta, ni tan siquiera en un ataque de diccionario.
Ahora es el momento en el cual se generan las claves, se generan datos aleatorios y el sistema nos pedira que trabajemos con el teclado, cambiar de consola.. para ayudar a generar los datos aleatorios.

Exportacion e Importacion de claves
=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=
_Para exportar una clave:
gpg --export [UID]
Si no especificamos UID se exportaran todas las claves del anillo de llaves, siendo enviado por defecto a sdout, pero con la opcion -o le indicamos que lo envie a un fichero determinado por nosotros.
Con la opcion -a crearemos un fichero de 7-bit ASCII (modo  texto en vez del binario que saldria por defecto).
Esta clave es la que deben tener las personas que quieran descifrar nuestros propios mensajes.
_Para importar una clave:
Es necesario que cuando recibimos la clave publica de otra persona añadirla a nuestro anillo de llaves sino seria imposible descifrar el mensaje con exito. Cuando tenemos la clave publica el procedimiento a seguir es el siguiente:
gpg --import [fichero]
En [fichero] especificamos la ruta de la clave publica que queremos incluir en nuestro anillo.

Administrando nuestras claves
=_=_=_=_=_=_=_=_=_=_=_=_=_=_=
gpg --list-keys ; se hace un listado de todas las claves existentes.
gpg --list-sigs ; vemos las firmas 
gpg --fingerprint ; son las huellas digitales para comprobar la identidad de una persona.
gpg --list-secret-keys ; listado de las huellas secretas.
gpg --delete-key [UID] ; borra una clave publica
gpg --delete-secret-key ; borra una clave secreta
gpg --edit-key ; editaremos la clave

Firmado de Claves
=_=_=_=_=_=_=_=_=
Para firmar una clave debemos tener la absoluta certeza de saber a quien pertenece.
gpg --edit-key [UID] ; y seguiremos las instrucciones.

Codificacion y Descodificacion de datos
=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=_=
Codificacion:
gpg -e [fichero] o gpg --encrypt [fichero] ; ciframos el fichero con la clave 

gpg -a -er clave_destinatario [fichero] ; cifraremos el [fichero] con la clave_destinatario (la clave publica anteriormente añadida a nuestro anillo) en modo de texto ASCII 7-bit. Es el metodo que yo utilizo y el "mas bonito" ;). Sea texto, Elf(ejecutable) o imagen se cifrara en modo texto.. con la extension *.asc.

Descodificacion:
gpg -d [fichero] o gpg --decrypt [fichero] ; descifra una determinada clave, y nos pedira el pass ;)


QuasaR: Esto todo XDDDD





