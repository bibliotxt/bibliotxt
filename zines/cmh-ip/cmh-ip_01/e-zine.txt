
                         
              $$$ $$$   $$$ $$$              $$$$   $$$$$$$
            $$$   $$$$ $$$$ $$$               $$$   $$$   $$$$
          $$$     $$$$$$$$$ $$$               $$$   $$$   $$$$$
        $$$       $$$$$$$$$ $$$ $$$$          $$$   $$$   $$$$
      $$$         $$$ $ $$$ $$$$   $$         $$$   $$$$$$$$
        $$$       $$$   $$$ $$$    $$$  $$$$  $$$   $$$
          $$$     $$$   $$$ $$$    $$$        $$$   $$$
            $$$   $$$   $$$ $$$    $$$        $$$   $$$
              $$$ $$$   $$$ $$$    $$$       $$$$$  $$$$
                                                             
                                                            
                                   4  n  0  t  h  3  r      w  4  y      t  0       b  3



  ========================================================================================                  

                                     :: <Mh-1P kl4n ::             



PROJECT: e-zine                                             
                                                            
WEBPAGE: http://cmh-ip.net

NUMBER: 1

DATE: 15/07/2004

CONTACT: klan@cmh-ip.net

SUPPORT: http://cmh-ip.net/foro

MEMBERS: z3r0_un0 - m3ll1 - darksteel - facki3 - R_15

MADE IN: Santiago de Chile


                         

/********************************************************************
 - 54lud05 4 - :: the haunted, hackiller, tabris, zerok, the_magician,
 elnuker, morpheus y a todo el staff de perroshackers.com ::
******************************************************************/




:: Indice ::

============================================================================
01 - Introducción                                                 z3r0_un0
============================================================================
02 - ¿Hackers o Defacers?                                         m3ll1
============================================================================
03 - Programación en Visual Basic para Novatos                    m3ll1
============================================================================
04 - Comenzando en Visual Basic Script                            m3ll1
============================================================================
05 - Creando nuestras primeras aplicaciones en Visual Basic   
     05.1 - Calculadora con uso de funciones                      z3r0_un0
============================================================================
06 - Instalando un foro SMF                                       darksteel
============================================================================
07 - Introducción al HTML                                         z3r0_un0
============================================================================
08 - Introducción a PHP                                           z3r0_un0
============================================================================
09 - Introducción a MySQL                                         z3r0_un0
============================================================================
10 - Tips PHP                               
     10.1 - Validación de formularios                             z3r0_un0
     10.2 - Deshabilitación de código HTML (anti-injecciones)     z3r0_un0
============================================================================
11 - Taller PHP/MySQL
     11.1 - Encuesta anti-flood                                   z3r0_un0
============================================================================
12 - Despedida                                                     m3ll1
============================================================================






.: 01 :.


                *******************************************
                              Introducción
                *******************************************

              
     Hola a todos. Bueno, pese a variados problemas que hemos tenido, como el 
     hosting..., el tiempo...,algunos lammercillos..., etc... se nos ha hecho 
     muy difícil el publicar el primer número de nuestra e-zine. 
     Pero ya después de largo tiempo y de haber tenido unas merecidas vacaciones
     escolares, nos dedicamos de lleno a escribirla y nos agrada presentar el primer
     número de la e-zine de <Mh-IP klan, el cual está orientado a desarrolladores web
     y programadores. Ojalá les sirva mucho esta e-zine, ya que dedicamos gran parte
     de nuestro tiempo y conocimiento en ella...pero de seguro te estarás preguntando
     ¿para qué gastar tiempo en escribir una e-zine?...por el llamado a la libre 
     información, a compartir el conocimiento, el deseo de una internet llena de 
     sabiduría, donde los usuarios ignorantes sean la minoría....aunque esto está 
     muy lejos de llegar a ser, es sólo cosa de explorar la red y darse cuenta de qué
     hay mucha gente sin nada más que intenciones maliciosas, pero sin verdadero 
     conocimiento. Eso es todo, no me quiero desvíar del tema. Disfruten la e-zine :)
     
     Los artículos aquí expuestos pueden ser distribuidos libremente, siempre y cuando
     se conserve todo el contexto (incluyendo al autor). CMH-IP no se hace responsable
     por la opiniones aquí emitidas, pues estas son de exclusiva responsabilidad de quién
     las expresa.


.: 02 :.


                  **********************************************
                            ¿Hackers o defacers?
                  ***********************************************
 

      Bueno, últimamente me he estado haciendo esta pregunta sobre ciertos usuarios 
      que veo por la r3d , porque su historial de "hackeos" (más bien defaces) puede 
      ser muy bueno, pero en cuanto a conocimiento y actitud, no se merecen ni el título 
      de newbies. ¿Por qué? Primero que nada, según yo veo, su prioridad no es el saber 
      más, si no que aparentar más, y su ego lo tienen por el cielo, con unas fichas 
      personales que ni ellos se la creen, en las que se atribuyen cerca de 6 lenguajes 
      de programación distintos, variados títulos profesionales y demás, cosa que no 
      demuestran ni por los talones. Si supieran todo eso que mencionan, no andarían 
      realizando las tonterías que hacen. Es fácil ver que a ellos solo les basta tener una 
      buena fuente de bugs, un buen scanner y un programa FTP para realizar sus actos 
      maliciosos, o más bien.. sus "hackeos". Incluso se dan el lujo de amenazar, cosa que 
      no muchas veces cumplen. Uno de ellos, que no mencionaré, nos amenazó con jodernos 
      el foro, cosa que nunca cumplió, y cuando se le mencionaba decía: "no, espera a que 
      se conecte mi amigo"....jajajaja... para mearse en el asiento xD. Y más todavía, su   
      "amigo" se conecta y no hace más que lammeadas o cosas propias de script-kiddies. 

      Estos no son los únicos, pero los tomo como referencia para el artículo, ya que es 
      el ejemplo más cercano que conozco. Creo que si los conocen, obviamente sabrán a 
      quien me refiero...bueno, solo digo que pueden ser muy buenos defacers, pero nada 
      más, no hackers como se jactan de ser. Creo que nunca lo han sido, lo son ni lo 
      llegarán a ser, por conocimiento, y por sobre todo, por una cuestión de acitud y ética. 
      
      Un hacker no se comporta así, un hacker es alguien con ganas de aprender y enseñar, 
      su fin no es joder a su vecino o alguna w3b que encontró por allí y que era vulnerable,
      un hacker aprovecha la mayoría de su tiempo en aprender y el sólo encontrar los 
      fallos, y si encuentra uno, no eliminará todo solo para joder al webmaster y levantar 
      su ego, la primera meta que alguien se pone, es el poder entrar, el saber que pudiste
      hacer algo que no es debido, algo que otros no han hecho y tú lo harás por primera 
      vez, el saber que tu pudiste sin la ayuda de nadie más, el saber que eres capaz. Un  
      hacker es alguien sabio en todo ámbito, no solamente alguien que lo único que hace 
      es intrusiones a sistemas, es decir, esto abarca la informática en general...  
      programadores, webmaster, electrónicos, etc., y a mi parecer el espíritu hacker 
      mueve a todos por igual con el mismo sentido común, que es demostrar ser el mejor, 
      no el "bad guy". En cambio, los defacers.....que los mueve??, yo creo que los mueve
      el hecho de ser, de alguna forma, "conocidos", pero no por los mejores medios, si no
      que les gusta ser los "intocables", los "malos", les gusta que los demás les tengan
      miedo y/o respeto. Aunque también pueden ser personas muy sabias y aprovechan sus 
      conocimientos para poder expresarse de una manera diferente, pero estos no son la
      mayoría, y se nota cuando encuentras a alguien así.

      Esta es la razón por la cuál se desprestigia tanto a los hackers y se les trata de
      criminales, bándalos, etc, se les trata como individuos que "luchan contra el 515t3m4",
      .......y por lo único que yo veo a un hacker luchar, es por una l1br3 1nt3rn3t.
      A mi parecer, rara vez verás a un hacker defaceando
      sitios, a no ser que sea por una causa justa y concreta, no por tonterías.

      Espero lector, que hayas entendido y que evites algún día llegar al lado malo de
      la underground, y ponerte como meta el superarte, siempre el saber más y ser el mejor,
      y no convertirte en un Aquiles moderno, que lo único que quería era la inmortalidad
      a través de la fama. Aunque también puedes llegar a ser famoso y conocido, pero de la
      buena forma, por tus logros y conocimientos. ;)

      Y..¿quién soy yo para escribir de esta manera? No soy un hacker, ni menos un defacer,
      pero soy alguien con ganas de expresarse y decir lo que opino, y que ojalá esto sea       
      tomado en cuenta.  

      Espero que algún día esto cambie, para que de una vez 
      por todas se termine y no se desprestigie al movimiento underground.

      Eso es todo, reflexionen...

      35cr1t0 p0r m3ll1

                                                     :: <Mh-1P kl4n - 4n0th3r w4y t0 b3 ::
                                                           


.: 03 :.

*******************************************************************
 Programación en Visual Basic para novatos
*******************************************************************

Por fin, en nuestra propia e-zine....xD . En este artículo veremos programación en Visual Basic de un modo que hasta el más novato entienda ;) .

Primero examinaremos el entorno. Ahora abre VB, como puedes ver en el centro hay un formulario. El formulario (form) es la ventana en la cuál se trabaja, donde podrás colocar botones, cajas de textos, etc. En el lado izquierdo esta la barra de herramientas o Toolbar.
En ella están los objetos con los que se trabaja, como command button, textbox, labels, etc. en el lado derecho están las propiedades de los elementos con los que trabajas, la vista previa del form en la pantalla y las propiedades del proyecto entre otras cosas. Examina los controles para que te puedas familiarizar.

   Para comenzar haremos un ejemplo clásico, mostrar un mensaje en la pantalla.
Al hacer doble click en el form te lleva automáticamente a la sección códigos. También puedes hacerlo desde VER / CODIGO.

Escribe lo siguiente.

Private Sub Form_Load()
Show
Print "Hola mundo"
Print 7
End Sub

A examinarlo.

- Private Sub Form_Load() - es una "función" (por decirlo de cierta forma), la mayoría llevan :

Private/Public Sub Objeto_Evento(Argumentos).

En este caso es que al cargar el form pase lo que está escrito después. El ejemplo indica que al cargar el form se muestre la cadena de texto "Hola mundo".

El código - Show - es para que al cargar el form pueda mostrar mensajes o cualquier otra cosa, de lo contrario no se mostrará. Solo es necesario colocarlo si quieres mostrar algo al iniciar el form, con otros objetos no es necesario.

El código - print "Hola mundo" - es para mostrar en la pantalla el texto que está entre las "". El de abajo (7) es lo mismo, pero hay una diferencia, no hay "". Si quieres escribir un texto en el código, siempre tendrá que ir entre "". En cambio si es un número no tendrás que hacerlo. 

El código - End Sub - es para terminar la "función". Si quieres salir del proceso antes de que termine por defecto solo incluye esto: Exit Sub .

Ahora haremos algo diferente. Necesitarás insertar un COMMAND BUTTON, una TEXTBOX y dos LABEL.
Que quede más o menos así.

                    _____
Ingresa Tu Nombre: |_____|  <---- TextBox
(label 1)                   _______
                           |_______| <--------Command Button
  ___________________________
  |                          |  < ----------- Label 2
  |__________________________|

Código:

Private Sub Command1_Click()
Label1.Caption = "Hola " & Text1.Text
Text1.Text = ""
End Sub

Analizamiento de Código:

Private Sub Command1_Click()

Que al hacer click en Command1 ocurran los efectos correspondientes.

Label1.Caption = "Hola " & Text1.Text

Esto ya es más complicado.
Esto significa que al hacer click la propiedad Caption de Label1 es igual a "Hola " más lo que esté escrito en la Propiedad Text de Text1, que en este caso sería, "Hola nombre".

Text1.Text = ""

Esto lo hice para que después que se imprime "Hola nombre" la propiedad Text de Text1 quede libre para ingresar otro nombre.


// OPERADORES // 

Estos son los operadores que se usan en VB.

Suma : +
Resta : -
Multiplicación : *
División : /
Resto : %
Mayor que : >
Menor que : <
Distinto : <>
Mayor o Igual que : >=
Menor o Igual que : <=
Comparar dos expresiones de caracteres : Like
Comparar dos referencias a objetos : Is
Negación: Not
And : And o & 

Bueno, estos no son todos, pero son los más escensiales


// COMENTARIOS //

Cabe mencionar cuáles son los comentarios para que no te confundas. los comentarios van siempre después de ( ' ). Si escribes cualquier cosa después de una "'" el sistema lo toma como comentario

Ej:

Dim var1 As Integer                ' Aquí se declara var1 como tipo Integer

Así no te confundirás cuando veas un código fuente de un programa, es más, son utilizados en la mayor parte para ordenar el código fuente y hacerlo más legible para las demás personas y hasta para el mismo programador.

// VARIABLES //


Como has visto, hemos estado trabajando con datos, como nombres, números, palabras, etc. Para trabajar más eficientemente se almacenan en variables. Las variables son para almacenar datos ( como mencione ), ya sea cadenas de texto, números, fechas, etc.

Ej:

variable = "hola" 

Esto facilita las cosas en programas "más avanzados". En nuestro caso podríamos utilizarlas así.

Private Sub Command1_Click()
Dim saludo
saludo = "Hola"
Print saludo
End Sub

Otro Ej:

Private Sub Form_Load()
Show
Dim numero, resultado
numero = 3 * 3 + 1
resultado = numero / 5 * 3
print resultado

Como puedes ver puse Dim saludo

La palabra Dim es para declarar la variable. Al declararla le digo al sistema que voy a usar la variable. La puedes declara como Dim o Public en la parte de declaraciones ( arriba ) para que este disponible para todo el form.
Si solo la quieres utilizar en un procedimiento tienes que declararla dentro de él como Dim o Private.

Ej:

Private Sub Command1_Click()
Dim numero
numero = 7
End sub

Así la variable que declaras dentro del procedimiento solo existe para ese procedimiento, una vez que el procedimiento termina la variable deja de exisitir. Esto facilita que puedas usar un mismo nombre para diferentes variables en diferentes procedimientos.

El nombre de una variable tiene que comenzar siempre por una letra y puede tener una longitud de hasta 255 caractéres. No se admiten espacios o caractéres en blanco, ni puntos, ni otros caractéres especiales.
Los caracatéres pueden ser letras, dígitos, el carácter subrayado (_) y los caractéres de declaración de tipo de varialbe ( %, &, #, !, @, $ ). El nombre de un variable no puede ser una palabra reservada del lenguaje. Para saber cuáles  son puedes utilizar el HELP o la AYUDA del programa. A diferencias de otros lenguajes, Visual Basic no distingue entre mayúsculas y minúsculas

Pero también existen tipos de variables.

Si no colocas que tipo de variables son, por defecto el sistema las declara como VARIANT, que aguanta todo los tipos de datos.
Si la variable va a contener cadena de texto siempre, declara como tipo STRING.

Ej:

Dim saludo As String
saludo = "hola" 

Para declarar varias variables a la vez hazlo de la siguiente forma:

Dim var1, var2, var3

y así sucesivamente, pero he visto que hartas personas comenten el mismo error, que es este:

Dim var1, var2, var3 As Integer    ' malo

Si lo que uno quiere es declarar las tres variables o las que sean de un determinado tipo, lo que está escrito arriba está MALO. En el ejemplo de arriba lo que se está haciendo es declarar var1 y var2 como VARIANT y var3 como INTEGER. Si quieres declarar hartas hazlo así.

Dim var1 As Integer, var2 as Integer, var3 As Integer, var4 As String      ' etc, etc......



Si sabes que una variable siempre va a almacenar números enteros en vez de números fraccionarios, declarala como un tipo Integer o Long. Las operaciones con enteros son más rápidas y estos tipos consumen menos memoria que otros tipos de datos.
Si la variable contiene una fracción, declarala como variable Single, Double o Currency. El tipo de dato Currency acepta hasta cuatro dígitos a la derecha del separador decimal y hasta quince dígitos a la izquierda; es un tipo de dato de signo fijo adecuado para cálculos monetarios. Los números de signo flotante (Single y Double) tienen más intervalo que Currency, pero pueden estar sujetos a pequeños errores de redondeo.
Nota : Los valores de signo flotante se pueden expresar como mmmEeee o mmmDeee, donde mmm es la mantisa y eee el exponente (potencia de 10). El valor positivo más alto de un tipo de dato Single es 3,402823E+38 ó 3,4 veces 10 a la 38a potencia; el valor positivo más alto de un tipo de dato Double es 1,79769313486232D+308 o alrededor de 1,8 veces 10 a la 308a potencia. Si utiliza D para separar la mantisa y el exponente en un literal numérico, el valor se tratará como un tipo de dato Double. Igualmente, usar E de la misma manera hace que el valor se trate como un tipo de dato Single.
Si la variable contiene datos Binarios, declarala como tipo Byte. Todos los operadores que funcionancon enteros funcionan con el tipo de dato Byte excepto el de resta unaria. Puesto que Byte es un tipo sin signo con el intervalo 0-255, no puede representar un valor negativo.
Si la variable contendrá siempre una cadena de texto y nunca un valor númerico, declarala como String.

Si una variable siempre contendrá solamente información del tipo verdadero ( TRUE ) y falso ( FALSE ), sí y no, activado o desactivado, declarala como Boolean. El valor default de Boolean es false.

.......Bueno, para colocar esto de los Tipos de Datos me ayude de otro texto, ya que no tengo muy claros los límites xD

También hay valores que se pueden asignar a variables, como NULL y EMPTY.

Dale el valor null a una variable si quieres que al hacer algo quede nula.

var1 = NULL

Lo mismo con empty.

var2 = EMPTY

EJ:

Private Sub btnanular_Click()
var1 = NULL
End Sub

Private Sub btnvaciar_Click()
var2= EMPTY
End Sub

// Constantes //

Como su nombre lo indica, son contantes, no cambian, se les asigna un valor inicial y este no puede ser modificado. Para declararlas es de la siguiente forma.

Const nombre = valor As tipo

Esto ovbiamente te servirá para almacenar datos que no quieres que cambien.

EJ:

Const saludo = "hola" As String        ' (Area de declaraciones)

Private Sub Command1_Click()
print saludo
End sub


// Matrices //

Las Matrices son básicamente conjuntos de variables y se declaran de la siguiente forma:

Dim matriz(14) As String

matriz(14) indica el nombre de la matriz y la cantidad de elementos que contiene, que en este caso son 15 ( 0 a 14 ). También tu puedes definir cuantos elemento tiene y desde cuanto.

Ej:

Dim matriz(1 to 15) As Integer

Dim matriz2( 1002 to 1004) As Integer

Para asignar un valor a cada elemento de la matriz haz lo siguiente.

Dim matriz(2) As String                 ' Aquí declaramos la matriz como tipo String
matriz(0) = " m3ll1 "
matriz(1) = " <Mh-1P kl4n  "
matriz(2) = " 2004 "                ' Si un número va dentro de " " es tomado como texto

Print matriz(0)                             ' Imprime el elemento 0 de la matriz
Print matriz(0) & matriz(1) & matriz(2)     ' Imprime los 3 elementos de la matriz en pantalla


// Matrices que contienen otras Matrices // 

Como leíste, "Matrices que contiene otras matrices ", esto es posible, y lo puedes hacer de la siguiente forma:


Dim matriz(2) As Integer, matrix(1) As String, nodriza(1)


matriz(0) = 1                              ' asignamos los valores a los elementos de matriz
matriz(1) = 2
matriz(2) = 3

matrix(0) = "v1v4"
matrix(1) = "3l m3t4l"                     ' asignamos los valores a los elementos de matrix

nodriza(0) = matriz()                      ' asignamos los valores a los elementos de nodriza
nodriza(1) = matrix()

Print nodriza(0)(2)                        ' Imprime el elemento 3 de la matriz 1
Print nodriza(1)(0)                        ' Imprime el elemento 1 de la matriz 2



Como pueden ver, nodriza, que es la matriz que contiene otras matrices, es declarada como VARIANT, y así se tiene que declarar, ya que contiene a las otras matrices que son de tipo INTEGER y STRING.
Si no te quedo muy claro te lo explicaré textualemente.
Declaramos matriz, matrix y nodriza, cada una con sus respectivos elementos y tipo de datos. Luego asignamos los valores a los elementos de matriz y matrix. Una vez echo esto, asignamos los valores a los elementos de nodriza, que en este caso son matriz y matrix. Después pusimos imprimir el elemento 3 (3) de la matriz 1 (matriz) y el elemento 1 (CMH-IP) de la matriz 2 (matrix).



 // MsgBox //

Las msgbox básicamente son ventanas que te muestran opciones, como los de salir, aceptar, cancelar, etc. y se usan de la suguiente forma:

Private Sub btnsalir_Click()
Dim salir as VbMgsBoxResult
salir = MsgBox ("¿Deseas Salir?", vbYes + vbQuestion, "¿Salir?")
If vbYes Then
End
End If
End Sub

Ahora lo explicaré.

Primero declaramos una variable de tipo VbMsgBoxResult, eso hace que podamos usar la msgbox.
Después colocamos 

Variable = MsgBox ("Texto para el usario", btn + img, "Título")

Esas no son todas las propiedades, pero son las más importantes. 

Después usamos la Sentencia If Then, esa todavía no la hemos pasado y está en el siguiente capítulo. Pero quiere decir que si vbYes (btn) = Yes (presionar si) Entonces que Termine.
Daré un ejemplo, que hace que te mande una ventana con Si, No, Cancelar cuando el form se está por cerrar.

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)
Dim salir as vbMsgBoxResult
salir = MsgBox ("¿Realmente deseas salir?", vbYesNoCancel + vbQuestion, "¿Salir?")
If salir = vbNo Then
Cancel = True
ElseIf salir = vbCancel Then
Cancel = True
End If
End Sub

También puedes hacer msgbox solas, así:

MsgBox ("Texto para el Usuario", btn + img, "Título")

ó

MsgBox ("Hola")


// INPUTBOX //

La inputbox es básicamente una ventana en donde puedes ingresar datos para luego trabajar con ellos.

Las propiedades más importantes son:

InputBox("Texto al usuario", "Título", "texto por defecto en la caja de texto")

Para que los datos ingresados se vallan por ejemplo a una Textbox, ha lo siguiente:

Private Sub Form_Load()
Dim nombre
nombre = InputBox("Introduce tu nombre", "Cuadro de Diálogo", "Aquí su nombre")
casilla.Text = nombre
End Sub

Así de simple. ;)

 // OPTION BUTTON //

Las option button son botones de opciones, que te permiten seleccionar una a la vez si están en grupo.
Hay una propiedad que cabe mencionar, ya que es la más importante de este control ( según yo )

Value = Determina si el OPTION BUTTON está seleccionado o no.

(Esa fue mi gran explicación....)

Haremos un pequeño ejemplo para que vayas entendiendo. Inserta 3 option button, un frame, un command button y una label.

Nota: Si no entiendes este ejemplo neceistarás haber leído la sentencia If Then ElseIf ( véase 2.1 Capítulo 2 del Curso de Programación en Visual Basic ).

Primero inserta el Frame y dentro de él los 3 option button. Al lado del frame inserta la label y abajo el command button.

A un option button le colocaremos como nombre colornone, a otro color1(rojo) y al último color2(verde).
Luego Coloca la Propiedad Value del colornone como True y la propiedad BackColor de la Label en Blanco.
Ahora escribe el siguiente código:

Private Sub Command1_Click()
If colornone.Value = True Then           ' IF (si es que) CONDICIONES THEN (entonces has...) 
Label1.BackColor = vbWhite
ElseIf color1.Value = True Then
Label1.BackColor = vbRed  
ElseIf color2.Value = True Then
Label1.BackColor = vbGreen
End If
End Sub

// CheckBox //

Las CheckBox son como "casillas" para seleccionar, se pueden seleccionar más de una a la vez.
También tiene propiedad Value, pero con diferentes ocpiones.

0 - Uncheked       <- Indica que la casilla no está seleccionada
1 - Checked        <- Indica que la casilla está seleccionada
2 - Grayed         <- Indica que la casilla está seleccionada y deshabilitada para el usario.

Veremos un ejemplo para que lo practiques.

Ingresa un CheckBox, una label y un command button.

Ahora escribiremos el siguiente código.

Private Sub Command1_Click()
If CheckBox.Value = Checked Then               ' Puede Ser Checked ó 0
Label1.Caption = "La Casilla está activada"
ElseIf CheckBox.Value = Uncheked Then          ' Puede Ser Uncheked ó 1
Label1.Caption = "La Casilla está desacitvada"
End If
End Sub


// Funciones //


   Como bien lo dicen, estas son FUNCIONES que se declaran fuera de cualquier Sub, pero funcionan a lo largo de todo el programa.

    Las Funciones se escriben solo una vez y luego se llaman poniendo el nombre, seguida de los argumentos necesarios para el buen funcionamiento de esta.

Ejemplo:

Nombre_funcion(argumento1 as integer, argumento2......) As Integer


Dentro del paréntesis se ponen todos los argumentos seguidos de su tipo (Integer, String, Double, etc..). Si no se pone el tipo los argumentos quedan como Variant. Como también se puede apreciar, hay que poner el tipo de función, al igual que los argumentos estas pueden ser Integer, String, etc.


Ahora veremos como hacer una función. Empezaremos con una bien simple como lo es la suma.


Primero declararemos la función:



--------------------------------
Private Function suma(a, b, c) As Integer


End Function
---------------------------------            



Teniendo la función ya declarada veremos el contenido.



-------------------------------
Private Function suma(a, b, c) As Integer

c = a + b

End Function
-------------------------------


En el código anterior podemos observar que la variable C es igual a la suma de las variables A y B. Si no te has dado cuenta, las variables no tienen valor, puesto que este se les asigna al momento de llamar la función, de la siguiente manera:




---------------------------
Private Sub Command1_Click()

Dim primero As Integer, segundo As Integer, resultado As Integer


primero = 10

segundo = 5

operacion = suma(primero, segundo, resultado)

Label1.Caption = resultado

End Sub
---------------------------


En el ejemplo anterior OPERACION es igual a la función suma y, como podemos ver ver, los parámetros que se le han asignado son PRIMERO(10) que es equivalente a A, SEGUNDO(5) que es equivalente a B y RESULTADO que es equivalente a C, osea la suma de primero y segundo.

Por último se muestra el resultado de la suma en el Label1, haciéndolo con la variable resultado.

Nota: los parámetros asignados al momento de llamar la función deben ser del mismo tipo que el que has escrito en la función.



// Sentencias //

Bueno, mencionaré algunas sentencias, a mi gusto la más importantes.


// If...Else


      La sentencia If...Else es básicamente como.. If (si es que...)Then(entonces haz...).
En una sentencia ordenas al programa que realize cierta tarea mientras la condición sea cierta o se cunmpla.

Ej:

Private sub btnmostrar_Click()
Dim num As Integer, max As Integer               'se declaran variables a usar
num = 7                                          'se les asigna valor
max = 10
If num < max Then                                  'si es que num es menor que max entonces
MsgBox ("v4r14bl3 num 35 m3n0r qu3 v4r14bl3 max")  'mostrar una msgbox con mensaje
Else                                               ' de lo contrario
End                                                'termina el programa
End If                                             'fin del if


No tengo para que explicar, con los comentarios que puse queda más que claro. Solo cabe mencionar que el código ELSE es usado si es que ninguna de las condiciones del IF se cumple, es decir, si en el ejemplo anterior, 7 no era menor que 10, el programa finaliza. También menciono que siempre tienes que finalizar el IF con un END IF, caso contrario, el programa te manda error.


//If...ElseIf


     La sentencia If...ElseIf funciona de la misma manera que If..Else, con la diferencia que si ninguna de las condiciones del If se cumplen, pasa a revisar las del ElseIf.

Ej:

Private sub btnmostrar_Click()
Dim num As Integer, max As Integer               'se declaran variables a usar
num = 10                                          'se les asigna valor
max = 10
If num < max Then                                  'si es que num es menor que max entonces
MsgBox ("variable num es menor que variable max")  'mostrar una msgbox con mensaje
ElseIf num > max                                    ' si es que num es mayor que max
MsgBox ("variable num es mayor que variable max")
Else                                               'si es que ninguna condicion se cumple                                                                                                         
End                                                ' se termina el programa
End If                                             'fin del If

------------------------

El ElseIf lo puedes hacer las veces que quiera, obviamente, si uno de los ElseIf se cumple, se saltará todo los que vengan después.



// Do While


La sentencia Do While revisa las condiciones y cumple la tarea asignada hasta que la(s) condicion(es) no se cumplan. Si es que la condición es cierta y no es alterada en todo el proceso, hará un bucle infinito.

Ej:

Private Sub btnsaturar_Click()
Dim infinito                      'se declara variables
infinito = 7                      ' se asigna valor
Do While infinito > 3              'siempre que infinito sea mayor que 3
infinito = infinito * 3            ' infinito = infinito multplicado por 3
print infinito                     'imprime en la pantalla el valor de infinito
Loop                               'finaliza el proceso y se devuelve a revisar si se cumplen              
                                   ' las condiciones
End Sub


Nuevamente está todo explicado en el código. Si realizas esto en tu computador, obviamente el programa no te responderá, ya que el bucle escrito es infinito y esto "pegaría" al programa.


// For


La sentencia FOR también funciona mientras se cumpla una condición y termina cuando ésta no se cumpla. Funciona así:

For variable = min to max step num

Donde variable es cualquier variable (...) , min es el la cantidad minima de la cual empieza a sumar a la variable hasta llegar a max, step num es la cantidad que adiciona a la variable en cada vez que se repite el proceso(si no colocas step num, por defecto es 1).


Ej:

Private Sub Form_Load()
Dim a As Integer               ' se declara variable
For a = 1 To 10 step 2         'de 1 a 10, suma de 2 en 2
print "A 35 m3n0r qu3 10"      ' si todavía no llega a 10, imprime "A es menor que 10"
Next                            'Se devuelve a revisar la condición
print "A 35 m4y0r qu3 11"      'Esto se hará una vez terminado el FOR                     
End Sub

Bueno, aunque no quede muy conforme con esta explicación, no encuentro una mejor forma de explicarlo.

// Select Case

Está sentencia trabaja con opciones, es decir, planteas una variable, cada Case presenta una opción y si uno de los Case acierta, realiza la tarea especificada.

Mejor veamos el ejemplo

Ej:
Private Sub Form_Load()
Show
Dim num
num = 7
Select Case num                         ' nombramos la variable num
Case 5                                  ' en caso de que sea 5
num = 5                                 ' le da el valor de 5 a num
Case 6                                  ' en caso de que sea 6
num = 6                                  ' le da valor 6 a num
Case Else                                 ' si no es ninguno de los Case presentados
num = "no es ninguno de los anteriores"   'le da el valor de la cadena
End Select                                 ' termina el select
Print num                                   ' imprime en la pantalla el valor de num
End Sub

ó

Select case num
Case 5                              ' en caso de que sea 5
Print "5"                          ' impime 5
Case 6                              ' en caso de que sea 6
Print "6"                           ' imprime 6
Case 7                              ' en caso de que sea 7
Print "7"                            ' imprime 7
Case Else                           ' si no es ninguna de las opciones presentadas 
Print "fuck y0u"                        'imprime nosé
End Select                           ' termina el Select


Creo que con eso queda más que claro.
Estás son para mí las sentencias más fundamentales, creo que con esas está bien.
*******************************************************************************************

Aquí termina el Curso de programación en Visual Basic, y que a mi gusto, está bien para ser básico :) . Espero preparar uno más avanzado y ver otros lenguajes para la siguiente e-zine, asi que estén preparados xD . Le doy gracias a z3r0_un0 por aportar con el punto de las Funciones.

35cr1t0 p0r m3ll1.

Si tienes duda ve al foro (http://cmh-ip.net/foro)      :: 4n0th3r w4y t0 b3 ::





.: 04 :.  

*****************************************************
          Comenzando en Visual Basic Script
*****************************************************




Bueno, con lo aprendido en el curso anterior de Visual Basic, te es suficiente como para comprender lo básico de Visual Basic Script.


// Objetos a Variables //

Bueno, hay unas ciertas rutinas que debemos declarar en nuestros programas antes de realizar cualquier tarea. Éstas rutinas reúnen un conjunto de librerías que simplican el trabajo en VBS.

Las rutinas u objetos que ocuparemos mayoritariamente son "Scripting.FileSystemObject" y "Wscript.Shell".

La forma de establecer estos objetos a variables (para así poder utilizarlos) es la siguiente:

Set varible = CreateObject("Objeto")

eJ:

Set objeto = CreateObject("Scripting.FileSystemObject")
Set object = CreateObject("Wscript.Shell")

Cabe mencionar que cada una de estas rutinas nos permite realizar distintas cosas, cosas que analizaremos ahora.

// Wscript.Shell //


* RegWrite & RegDelete
 
Creamos una entrada en el registro.

Set objeto = CreateObject("Wscript.Shell")
objeto.RegWrite "entrada del registro", "valor de la entrada"

eJ:

Set objeto = CreateObject("Wscript.Shell")
objeto.RegWrite "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run\archivo", "C:\archivo.txt"

Con esto creamos una entrada en Run, con el valor de "c:\archivo.txt", por lo que "c:\archivo.txt" se iniciará cada vez que se inicie W1nd0w$.

Eliminar una entrada (RegDelete). Sería de la siguiente forma:

Set objeto = CreateObject("Wscript.Shell")
objeto.RegDelete "entrada a eliminar"

Tan simple como eso. ;)
--------------------------------------------------------------

* Run

Con este comando podemos ejecutar archivos, de la siguiente forma.

Set objeto = CreateObject("Wscript.Shell")
objeto.Run "c:\archivo.txt"

Esto ejecutaría en pantalla el archivo ubicado en la ruta "c:\archivo.txt"
--------------------------------------------------------------


// Scripting.FileSystemObject //

Algo de lo que podemos hacer con este objeto es:

* CreateTextFile

Con esto podemos crear un archivo.

Set objeto = CreateObject("Scripting.FileSystemObject")
objeto.CreateTextFile "c:\archivo.txt"

Con esto creamos un archivo de texto en "c:\archivo.txt"

---------------------------------------------------------
Y para escribir dentro de él, sería algo así:

Set objeto = CreateObject("Scripting.FileSystemObject")
objeto.CreateTextFile "c:\archivo.txt"
objeto.Write "c"
objeto.Write "m"
objeto.Write "h"
objeto.Write "-"
objeto.Write "i"
objeto.Write "p"
objeto.WriteLine "rulz!!"
objeto.WriteLine "fuck y0u"
objeto.WriteBlankLines "3"
objeto.Close

Con objeto.Close, cerramos el archivo, deteniendo así la escritura.
Bueno, sólo hay que saber un poco de inglés para entender las propiedades de Write

Write "i": Escribe sólo en solo un espacio, es decir, no podrías colocar más de una letra
WriteLine "l1br3 expr3510n" : Escribe una líne entera (...)
WriteBlankLines "3" : Escribe líneas en blanco, donde "3" es el número de líneas.

Esto nos quedaría algo así:

-----------
cmh-ip
rulz!!
fuck y0u



----------
------------------------------------------------------------

*CreateFolder & DeleteFolder

Para crear y eliminar directorios.

Set objeto = CreateObject("Scripting.FileSystemObject")
objeto.CreateFolder "c:\cmhip"
objeto.DeleteFolder "c:\cmhip"

Esto creacría un directorio en "c:\cmhip", para luego inmediatamente eliminarlo.
------------------------------------------------------------


* CopyFile

Que se puede decir...., esto sirve para copiar archivo, y se hace de la siguiente forma:

Set objeto = CreateObject("Scripting.FilesystemObject")
objeto.CopyFile "c:\archivo.txt", "c:\copiaarchivo.txt"

Con esto, copiamos el archivo ubicado en "c:\archivo.txt" a la ruta "c:\copiaarchivo.txt"

------------------------------------------------------------
* DeleteFile

Con esto borramos archivos.

Set objeto = CreateObject("Scripting.FileSystemObject")
objeto.DeleteFile "c:\archivo.txt"

Con esto eliminamos el archivo ubicado en "c:\archivo.txt"
-------------------------------------------------------------
* FileExist & FolderExist

Para comprobar si existe un determinado archivo.


Set objeto = CreateObject("Scripting.FileSystemObject")
If (objeto.FileExist("c:\archivo.txt")) = True Then
file = "si existe"
End If

Para comprobar si existe un determinado directorio.

Set objeto = CreateObject("Scripting.FileSystemObject")
If (objeto.FolderExist("c:\cmhip")) = False Then
path = "no existe"
End If 

Como pueden ver, a través de un If comprobamos si es que existe o no lo que especificamos, si esxiste es TRUE, si es que no es FALSE.

//Algunos comandos básicos y muy útiles//

On Error Resume Next

Este código lo debes poner antes de escribir los VBS, ya que le dice al programa que en caso de encontrar un error, simplemente siga, ya que los errores son comúnes y hay algunas cosas que el software no te permite.

Month(Now()) Day(Now())

Estos comandos nos sirven para averiguar la fecha del sistema y así poder utilizarla en nuestros programas.. por ej:

If Day(Now()) = 13 Then
MsgBox "fuck1ng d14 d3 m4l4 su3rt3"
End If

Los días se especifícan por número (1, 2, 7, etc.), no por nombre (Lunes, Martes, etc.). Es lo mismo para los meses, también se especifícan por números (del 1 a 12).

ej:

If Month(Now()) = 7 Then
MsgBox "35t4m05 3n Jul10 xD"
End If

Ovbiamente estos sucesos solo pasaran en la fecha especificada.  


En esta introducción a los Visual Basic Scripts, mencioné a mi parecer lo más básico y/o fundamental para poder empezar ya a crear nuestras primeras aplicaciones.

Cualquier duda visita el foro(http://cmh-ip.net/foro)

35cr1t0 p0r m3ll1 para <Mh-1P kl4n 




.: 05 :.
            **********************************************************
              Creando nuestras primeras aplicaciones en Visual Basic                                        
            **********************************************************




Con el conocimiento ya adquirido(con el curso de m3ll1) te dejo aquí una sencilla calculadora, hecha principalmente con funciones. No es una calculadora perfecta xD

// Nota: Las operaciones funcionan clickando en ellas, no a través del teclado.




===========================================================
/ b_0  = boton 0                                          /
/ b_1  = boton 1                                          /
/ b_2  = boton 2                                          /
/ b_3  = boton 3                                          /
/ b_4  = boton 4                                          /
/ b_5  = boton 5                                          /
/ b_6  = boton 6                                          /
/ b_7  = boton 7                                          /
/ b_8  = boton 8                                          /
/ b_9  = boton 9                                          /
/ boton_sum = boton de suma                               /
/ boton_res = boton de resta                              /
/ boton_mul = boton de multiplicación                     /
/ boton_div = boton de división                           /
/ boton_igual = boton igual                               /
/ pantalla = textbox donde se introducen los números      /
===========================================================



++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Dim primero As Integer, segundo As Integer, opcion As String, operacion, revisar As String



' Operaciones Aritméticas


Private Static Function adicion(a, b, c) As Integer
c = a + b
End Function

Private Static Function sustraccion(a, b, c) As Integer
c = a - b
End Function

Private Static Function multiplicacion(a, b, c) As Integer
c = a * b
End Function

Private Static Function division(a, b, c) As Integer
c = a / b
End Function






' Números

Private Sub b_0_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "0"
revisar = "no"
End Sub



Private Sub b_1_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "1"
revisar = "no"
End Sub



Private Sub b_2_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "2"
revisar = "no"
End Sub


Private Sub b_3_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "3"
revisar = "no"
End Sub


Private Sub b_4_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "4"
revisar = "no"
End Sub


Private Sub b_5_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "5"
revisar = "no"
End Sub


Private Sub b_6_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "6"
revisar = "no"
End Sub


Private Sub b_7_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "7"
revisar = "no"
End Sub


Private Sub b_8_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "8"
revisar = "no"
End Sub


Private Sub b_9_Click()
If revisar = "si" Then
pantalla.Text = ""
End If
pantalla.Text = pantalla.Text + "9"
revisar = "no"
End Sub





' Llamar Operaciones Aritméticas





Private Sub boton_div_Click()
opcion = "div"
primero = pantalla.Text
pantalla.Text = ""
End Sub




Private Sub boton_mul_Click()
opcion = "mul"
primero = pantalla.Text
pantalla.Text = ""
End Sub



Private Sub boton_res_Click()
opcion = "res"
primero = pantalla.Text
pantalla.Text = ""
End Sub



Private Sub boton_sum_Click()
opcion = "sum"
primero = pantalla.Text
pantalla.Text = ""
End Sub



' Resultado



Private Sub boton_igual_Click()
If pantalla.Text = "" Then
pantalla.Text = 0
End If
segundo = pantalla.Text
revisar = "si"


Select Case opcion
        Case "sum"
                  operacion = adicion(primero, segundo, resultado)
                  pantalla.Text = resultado
                  
        Case "res"
                  operacion = sustraccion(primero, segundo, resultado)
                  pantalla.Text = resultado
                  
        Case "div"
                  operacion = division(primero, segundo, resultado)
                  pantalla.Text = resultado
                  
        Case "mul"
                  operacion = multiplicacion(primero, segundo, resultado)
                  pantalla.Text = resultado
                  
End Select



End Sub


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Eso es todo, el código no se explica puesto que con lo enseñado ya se debe poder entender.
Cualquier duda ve al foro (http://cmh-ip.net/foro)

                                                                 Escrito por z3r0_un0


.: 06 :.

**************************************************
Instalando un Foro SMF (Simple Machines Forum)
**************************************************

Manuescrito Manual de Instalación SMF, Recopilado y Traducido por darksteel

Contenido:

    * Descarga
    * Subiendo Archivos
    * Dando Permisos CHMOD
    * Instalación



- Descarga

     Para instalar el SMF, antes que nada obviamente nesecitas descargar el archivo SMF, que se encuentra en La sección de Downloads. Una vez ya descargado a tu computador, lo descompimes  con el Winzip , o Winrar. Ya creada la carpeta y todo descomprimido Comenzamos a Subir los Archivos


-Subiendo Archivos
 
     Para usted subir los archivos a tu servidor, nesecitas una conexion FTP, usando un cliente FTP, Yo recomiendo el CuteFTP y Smartftp. Ya que ha tenido el cliente FTP, se conecta a su servidor y crea una caroeta llamada smf o como le guste ( Ejemplos: foro, foros, comunidad, community ). En esa carpeta usted vaciara el SMF, buscando la carpeta en tu pc y dandole a Cargar.

-Dando Permisos CHMOD

     Una vez usted haya terminado se subir TODOS los archivos del SMF a su cuenta ftp, procedemos a dar permisos de escritura, lectura, CHMOD. Los archivos que usted necesita cambiar los permisos  son Settings.php y Setting_bak.php. deben ponerse Los permisos para estos dos archivos a 666. Los directorios que usted necesita cambiar los permisos  son attachments, Packages y Themes . Deben ponerse los permisos para estos tres directorios a 777.

-Instalación

     Ya terminado de dar permisos CHMOD, Procedemos a la instalación. La instalación se realiza mediante un archivo en su directorio lammado Install.php . Lo ejecutamos en nuestro Explorer Ejemplo: http://www.yourdomain.tld/smf/install.php . Una vez realizado ese paso, Procedemos a rellenar los espacios en blancos.

Forum Name: Éste será el nombre de su foro.  Empieza como "Mi Comunidad" pero usted debe cambiarlo probablemente. 

Forum URL: Éste es el url al que su foro se localizará, el instalador de SMF debe de haber funcionado esto así para sí mismo en la mayoría de los casos que usted puede dejar a esta escena a su valor predefinido.

MySQL server name:Esto es donde nosotros especificamos el servidor en el que el banco de datos de MySQL reside. 99% del tiempo éste será localhost.

MySQL username:Éste es el username para su banco de datos de MySQL, a menudo usted tendrá que poner este, si en duda, consulte a su organizador.

MySQL password:Ésta es la contraseña para su banco de datos de MySQL, a menudo usted tendrá que poner este despierto en su tablero de mando de webhosts, si en duda, consulte a su organizador.

MySQL Database name:Éste es el nombre de su banco de datos de MySQL, a menudo usted tendrá que poner este despierto en su tablero de mando de webhosts, si en duda, consulte a su organizador.

MySQL Database prefix: Esto es un prefijó a los nombres de las tablas en su banco de datos, le permite que corra más de una aplicación una sola tabla  de datos de MySQL, usted generalmente debe dejarlo como smf_, a menos que usted está instalando una segunda copia de SMF en el mismo banco de datos.

Una vez usted ha rellenado todas las escenas, pulse el botón adelante procede, usted debe ver mucha información y la palabra exitoso en cada pergamino de la línea al fondo de la página y debe pulsar el botón procede de nuevo. 
 
Usted se pedirá detalles de su admin ahora considere, esto creará su username en el foro. Como una medida de seguridad, usted se pide también su contraseña del banco de datos. Una vez usted ha rellenado la forma, pulse el botón adelante procede. 
 
Su foro se instala ahora y usted puede proceder a su foro, sin embargo, antes de hacer así, es MUY IMPORTANTE que usted anula que los install.php archivan del servidor como dejarlo hay un riesgo de seguridad mayor. Para devolver así a su programa del ftp en el directorio usted instaló SMF a, localice install.php, selecciónelo, y el golpe anula. 
 
Felicitaciones, nosotros esperamos que usted disfruta usando SMF, si usted tiene que cualquier apoyo cuestiona, siéntase libre para preguntarles en nuestro foro de apoyo. 
 
The Simple Machines Team


Traducido por:   darksteel



.: 07 :.

                     ************************************
                           Introducción a HTML
                     ************************************



                    Hola a todos :), en este curso haré una pequeña introducción al HTML, (Hyper Text Markup Language), qué en una explicación bien simple: es un lenguaje de construcción web, no de programación web, porque con HTML tu construyes la estructura de tu página (tablas, columnas, etc...) para que se vea bien y para poder poner contenido en ella, pero no puedes programarla para que haga cosas, como por ejemplo insertar datos en una BD(base de datos) ó en .txt ó cosas por el estilo. Pero no por esto es menos importante que otros lenguajes como PHP o ASP, sino que muy funcional para trabajar en conjunto con éstos.

                    Resumiendo, HTML es un lenguaje de construcción web en cuanto a estructura y apariencia.

                    Ahora veamos como empezamos a construir nuestra web page

//////
Hay que saber que en HTML se usan tags o etiquetas, que las puedes reconocer porque van dentro de <>, como <html>, <head>, <br>, etc. Estas tags se inician y se terminan igual, con la diferencia de que se lleva un '/' al interior del éste último ( '<html>' --> '</html>' )
PD: sólo las tags que lleven contenido dentro se deben cerrar, más adelante te darás cuenta ;)
/////
Ahora si empezemos...

Para iniciar un documento HTML debemos escribir la etiqueta '<html>' (sin las comillas), y para finalizar escribimos '</html>'. Dentro de estas etiquetas va a ir toda la 'programación' HTML de la web, osea toda la web.

Ahora veamos las distintas partes que forman un documento HTML.

*****************
Cabecera (head)
*****************

Las cabeceras son las etiquetas <head></head> y dentro de éstas van tags como el título <title></title> y las metatags <metatags> (que se utilizan para definir palabras claves de nuestra web y se utilizan para los buscadores). Veamos un ejemplo de como se construye una cabecera.

+++++++++++++++++
<html>                             
<head>            
<meta name="Description" content="descripción de mi web">                
<title>Hola mundo</title>        
</head>                         
</html>                       
+++++++++++++++++

Bueno, aquí vemos que en la primera línea iniciamos el documento HTML. En la segunda línea iniciamos la cabecera y dentro de ella, en la tercera línea, encontramos un metatags con la descripción de nuestra web. En la cuarta línea vemos el inicio y fin de la tag 'title', y dentro de ésta va el título que quieras que se vea en el explorador. Y por último en la quinta y sexta línea vemos el fin de 'head' y 'html' respectivamente.



****************
Cuerpo (body)
****************

En el cuerpo de la web van todas las cosas, las tablas, el texto, las imágenes, etc..
La etiqueta body se inicia <body> y se termina </body>. El tag <body> tiene algunas propiedades:

//bgcolor="#000000"
Esto define el color de fondo del documento HTML, en este caso negro.
** Algunos colores en hexadecimal: 
#000000 <-- negro
#ff0000 <-- rojo
#00ff00 <-- verde
#0000ff <-- azul
#ffffff <-- blanco

Para lograr nuevos colores solo hay que ir cambiando la cantidad de 0-9 y a-f
ej: #0077bb <-- ese es un color nuevo

//background="ruta/imagen.gif" 
Esto define si queremos usar una imagen de fondo, especificando la ruta.
** Si usa esta propiedad, no se usa 'bgcolor'

//text="#ffffff"
Esto define el color del texto de nuestro documento HTML

//link="#ffffff"
Esto define el color de los enlaces en nuestro documento HTML

//vlink="#ffffff"
Esto define el color de los enlaces vistos en nuestro documento HTML

//// 
Las propiedades se aplican de la siguiente manera:
<body bgcolor="#000000" text="#ffffff" link="#ffffff" vlink="#ffffff">

Éste es el estándar para utilizar las propiedades en todos los tags.


///////
Ahora, dentro de 'body', como ya dije antes, va el contenido de la web, como tablas, texto, etc....

:: Veamos las tablas ::

Al igual que los demás tags, se inicia '<table>' y se finaliza '</table>'. Tiene las siguientes propiedades:

//width="250" ó width="50%"
Width se utiliza para especificar el largo de la tabla, que puede ser en pixeles (se especifica en cantidad), o para hacer tablas elásticas se especifica en '%' (por ciento). Si especificamos en 50%, la tabla ocupará la mitad de la pantalla en cualquier resolución, así se adapta a cualquier usuario.

//height="250" ó height="50%"
Bueno, lo mismo que la propiedad anterior, pero esta vez se trata del alto.

PD:
         largo
   ________________
   |               | 
   |               | alto
   |_______________|

Para no provocar confusiones :)

//bgcolor="#ffffff"
Al igual que con 'body', esta propiedad especifíca el color de fondo.

//background="ruta/imagen.gif"
Especifíca si queremos que la tabla tenga una imagen de fondo en vez de color.

//cellspacing="10"
Indica el espacio que separa las columnas y filas dentro de una tabla

//cellpadding="10"
Indica el espacio que separa el borde y contenido de las columnas y filas dentro de una tabla

//align="left"
Indica como se alineará el contenido dentro de la tabla. Puede ser left (a la izquierda), right (a la derecha) y center (al centro)

//valign="top"
Indica como se alineará el contenido dentro de la tabla. Puede ser top (arriba), middle (en el medio) y bottom (abajo)

//border="1"
Indica de que tamaño será el borde de nuestra tabla, si colocamos '0' la tabla no tendrá borde

//bordercolor="#000000"
Indica el color del borde de la tabla

** Dentro de la tabla van las columnas y filas, <td> y <tr> respectivamente.

 ____________
|     |      |
|_____|______|
|     |      | __ Esto es una fila (van hacia abajo)
|_____|______|
   |
 Esto es una columna (van hacia el lado)
 

Veamos como podríamos hacer una tabla:

+++++++++++++++++++++++++++
<table width="100" height="100" border="1" cellspacing="0" cellpadding="0" bgcolor="#ffffff">
<tr>
<td>hola
<td>hola
<tr>
<td>chao
<td>chao
</table>
+++++++++++++++++++++++++++

Esto quedaría así:

 ________________
|       |        |
| hola  | hola   |
|_______|________|
|       |        |
| chao  | chao   |
|_______|________|


Espero no te haya quedado ninguna duda con las tablas. ;)

:: Veamos las imágenes ::

Cabe recalcar que el tag <img> se inicia pero no se termina, ya que la imagen no queda abierta si no la cerramos.

El tag <img> tiene las siguientes propiedades:

//src="ruta/imagen.gif"
Con esto especificamos la ruta de la imagen

//border="0"
Define si la imagen tiene borde o no. Esto es útil cuando la imagen es un enlace y por defecto tiene un borde, pues entonces ponemos border="0" y queda sin borde pero sigue siendo un enlace.

//width="100"
Indica el ancho de la imagen (se utiliza si queremos aumentar o disminuir el tamaño de la imagen). Si no se hace referencia a 'width', la imagen tiene su ancho por defecto.

//height="100"
Igual que la propiedad anterior, pero con el alto.

//alt="la imagen no se puede visualizar"
En 'alt' especificamos el texto que se mostrará en el navegador si es que la imagen no se puede visualizar.

//hspace="5"
Indica el espacio horizontal entre la imagen y el texto que le siga

//vspace="5"
Indica el espacio vertical entre la imagen y el texto que le siga

Veamos un ejemplo de como colocaríamos una imagen:

+++++++++++++++++
<img src="imagenes/archivo.gif" alt="Archivo" width="80" height="80" border="0">
+++++++++++++++++

Eso ;)

//////

Ahora veremos los tags modificadores de texto, como negrita, cursiva, etc...

//<b></b>
El texto que vaya dentro de estos tags estará en negrita.

//<i></i>
El texto que vaya dentro de estos tags estará en cursiva.

//<u></u>
El texto que vaya dentro de estos tags estará subrayado.

//<h1></h1> // <h2></h2> // etc....
Los tags <h1></h1> hacia adelante modifican el tamaño del texto, siendo <h1> lo más grande.

//<font></font>
Este tag modifica el texto. Sus propiedades son:
  
  //size="1"
  Tamaño en puntos.
  
  //face="Verdana"
  Fuente con la que se visualizará el texto, en este caso 'Verdana'.

  //color="#ffffff"
  Define el color del texto que irá dentro de <font></font>

Veamos un ejemplo de estos modificadores:

++++++++++++++++++++++++
<b>Este texto está en negrita</b>
<i>Este texto está en cursiva</i>
<u>Este texto está subrayado</u>
<h1>Este texto es grande</h1>
<font face="Verdana" color="#ffffff">Este es blanco, está ecrito con Verdana</b>
++++++++++++++++++++++++

//<br>
Este tag nos indica un salto de línea. No hay que cerrarlo.

ej:

+++++++++++++
hola<br>chao
+++++++++++++

Nos quedaría:

++++++++++++
hola
chao
+++++++++++++

//<p>
Nos indica un salto de párrafo, que es equivalente a dos <br>. Tampoco se cierra.

ej:

++++++++++++++
hola<p>chao
++++++++++++++

Nos quedaría:

++++++++++++++
hola

chao
++++++++++++++


/////
Enlaces...

El tag de enlace '<a></a>' convierte en un enlace al texto que esté dentro de él. Tiene las siguientes propiedades:

//href="documento.htm" ó href="http://www.direccion.com"
Indica a la dirección que el texto estará vinculado, que puede ser un docuento .html, .php, .zip, etc... o una dirección en internet.

//target="_blank"
Indica cuál donde se abrirá nuestro enlace. Puede ser '_blank' para abrir el enlace en una ventana nueva y '_self' para abrir el enlace en la misma ventana.

El tag enlace también tiene otra utilidad, que és la de poder construir tu web en secciones.
Por ej:

+++++++++++++++++++++++++++++++
<html>
<a name="arriba">
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<a href="#arriba">Ir arriba</a>
</html>
++++++++++++++++++++++++++++++++

En este código puedes observar que puse '<a name="arriba">', y con esto indico que la sección donde puse eso se llama arriba. Para acceder a esta sección tengo que hacer un enlace cuyo destino sea '#arriba'.
Esto sirve cuando una página es muy larga y tiene varios documentos adentro, entonces al final de cada documento puedes colocar un 'Ir Arriba'.


/////

Otro modificadores.......

//<center></center>
Se utiliza para centrar elementos dentro del documento HTML

//<hr>
'HR' es una línea horizontal que atraviesa el documento. Sus propiedades son:

   //width="200" ó width="50%"
   Nos indica el largo de la línea, puede ser en puntos o 'por ciento' (%) (50% ocupa la mitad del documento)

   //color="#ffffff"
   Nos indica el color de la línea
 
   //size="20"
   Indica el grosor de la línea en pixeles

   //align="left"
   Indica la alineación de la línea. Puede ser left (izquierda), right (derecha) o center (centrada)

   //noshade
   Indica que la línea no tendrá efecto de sombra, para que no se vea en '3D'

//<pre></pre>
Este tag nos permite modificar la escritura del texto. Todo lo que escribamos dentro de estos tags se verá tal cual en el explorador (en cuanto a posición).
Ej: si yo escribo:

++++++++++++++++++++++++
<pre>
hola

chao 
               que tal
</pre>
++++++++++++++++++++++++

Esto se verá:

+++++++++++++++++++++++

hola

chao

          que tal
+++++++++++++++++++++++


//<ul></ul>
Estos tags nos sirven para hacer listas de elementos. Sus propiedades son:

   //start="3"
   Indica en que elemento empezará la lista. Si no se indica se empezará por el pimer elemento. 

  //type="disk"
  Nos indica el tipo de lista que queremos usar. Puede ser 'disk' para usar discos, 'circle' para usar discos con puro contorno, sin relleno y 'square' para usar cuadrados

El tag <ul> inicia la lista, pero para definir cada elemento de la lista que irá dentro debemos usar el tag <li> (<li> no se cierra).

Veamos un ejemplo:

+++++++++++++++++++++++++++
Lista de elementos:<br>
<ul tpye="disk">
<li>elemento1
<li>elemento2
<li>elemento3
<li>etc
</ul>
+++++++++++++++++++++++++++

Esto nos quedaría así (los '*' simulan los discos)

++++++++++++++++++++++++++++
Lista de elementos:
   * elemento1
   * elemento2
   * elemento3
   * etc
++++++++++++++++++++++++++++


//También tenemos el tag <ol>, que también es una lista de elementos pero con diferentes tipos. Estos tipos pueden ser '1' para ordenar los elementos con números (1,2,3,4), 'a' para ordenar los elementos con letras (a,b,c,d), 'A' para ordenar los elementos con letras mayúsculas (A,B, C,D), 'i' para ordenar los elementos con números romanos en minúscula (i,ii,iii,iv), 'I' para ordenar los elementos con números romanos en mayúscula (I,II,III,IV).

Ej:

++++++++++++++++++++++++++++++
Lista de elementos:<br>
<ol tpye="1">
<li>elemento1
<li>elemento2
<li>elemento3
<li>etc
</ol>
+++++++++++++++++++++++++++++++

Esto se vería así:

+++++++++++++++++++++++++++++
Lista de elementos:
   1. elemento1
   2. elemento2
   3. elemento3
   4. etc
+++++++++++++++++++++++++++++


//////
Formularios

Ahora veremos los formularios, que nos serán de mucha utilidad junto con PHP y MySQL.

Para iniciar el formulario escribimos <form> y para finalizarlo </form>. Sus propiedades son:

//method="post"
Indica si los datos del formulario se traspasarán a través del mismo formulario (post) o a través de la URL (get)

//action="archivo.php"
Indica cuál será el archivo que procesará el formulario cuando demos click en el botón 'Enviar'


Ahora, dentro del formulario tenemos más elementos. Estos pueden ser:

//<input>
El tag input es un objeto y no se cierra. Son las típicas cajas de texto donde tienes que poner tu nombre o e-mail. Sus propiedades son:
   
    //type="text"
    Indica el tipo del que será la <input>. Puede ser 'text' para que en ella se introduzca texto común, 'password' para que se introduzcan contraseñas (el texto que escribas en ella se verá con asteriscos), 'radio' para que las <input> sean casillas (se puede marcar solo una) y 'checkbox' para que las <input> sean casillas pero se pueden marcar más de una.
     
    //size="50"
    Indica el tamaño de la <input>. Aplicable a 'text' y 'password'.

    //maxlenght="50"
    Indica el máximo de caractéres que se podrá introducir. Aplicable a 'text' y 'password'

    //name="campo"
    Indica el nombre de la input, para luego llamarla en el procesamiento del formulario.

    //value="hola"
    Es el valor por defecto que tendrá la <input> ("" para que esté vacía). Aplicable a todas.

    //checked
    Indica que la input estará seleccionada, Aplicable a checkbox

Veamos un ejemplo:

+++++++++++++++++++++++++
Introduce tu nombre:<p>
<input type="text" name="nombre" value="" size="50"><p>
Introduce tu contraseña:<p>
<input type="password" name="contrasena" value="" size="50"><p>
¿Qué te interesa?<p>
<input type="checkbox" value="informatica">Informática en general<br>
<input type="checkbox" value="programacion">Programación<br>
<input type="checkbox" value="webmaster" checked>Webmaster<p>
¿Qué edad tienes?<p>
<input type="radio" name="edad" value="20">20 años<br>
<input type="radio" name="edad" value="18">18 años<br>
<input type="radio" name="edad" value="15">15 años<p>
++++++++++++++++++++++++++

Esto mostraría algo así en nuestro navegador:

+++++++++++++++++++++++++++

Introduce tu nombre:
___________________
|__________________|            //campo de texto

Introduce tu contraseña:
____________________
|___________________|        //campo de contraseña, aquí lo que escribas se verá con *

¿Qué te interesa?
 _
[_] Informática en general     //campos de selección múltiple
[_] Programación
[o] Webmaster

¿Qué edad tienes?

O 20 años                //campos de selección única
O 18 años
O 15 años

+++++++++++++++++++++++++++

En las input 'text' lo que escribas será traspado por el formulario, con el nombre de la input.
Por ejemplo, si la input se llama 'nombre' y en ella escribo 'zero', pues nombre va a ser igual a zero.
En las input 'passowrd' es lo mismo.
En las input 'checkbox' el dato que será traspasado es el value.
Por ejemplo, si la input tiene como value 'informatica', y en el formulario está seleccionada, el dato que se traspasará será 'informatica'. En el caso de la input 'radio', hay que llamarlas todas igual, ya que sólo una será marcada y recibida. Por ejemplo, tengo 3 input radio llamadas 'edad' y al momento de procesarla pongo que me muestre el valor de 'edad', y me mostrará cuál de las input radio llamadas edad fue seleccionada.

//Otro tipo de input son las 'hidden', que no se ven en la web, sólo en el código de fuente, y sirven para traspasar datos que el usuario no pueda modificar a través del formulario. Sus propiedades son:
   
    //name="campo"
    Indica el nombre de la input
 
    //value="hola"
    Indica el valor de la input

//<textarea></textarea>
Este tag nos sirve para hacer una caja de texto, como una input, pero de múltiples líneas.
Sus propiedades son:
  
  //name="campo"
  Al igual que en las input, especifíca el nombre que tendrá la textarea.

  //cols="50"
  Aquí indicamos en número cuántas columnas tendrá (largo)

  //rows="10"
  Aquí indicamos en número cuántas filas tendrá (alto)

Como se puede observar, textarea no tiene 'value', ya que éste corresponde al texto que que va dentro. Por ejemplo, si en las input ponías en 'value' el texto que querías por defecto, en textarea debes hacerlo entre los tags <textarea></textarea>.

¿cómo se ve una textarea?

+++++++++++++++++++++++++++++
Comentario:<br>
<textarea name="comentario" cols="50" rows="10"></textarea>
+++++++++++++++++++++++++++++

Se vería asi:

+++++++++++++++++++++++++++++
Comentario:
_________________________________
|                                |
|                                |
|                                |
|                                |
|                                |
|                                |
|                                |
|________________________________|

+++++++++++++++++++++++++++++

//<select></select>
El tag select nos permite hacer una lista de elementos, del que podemos seleccionar elementos. Sus propiedades son:

   //name="campo"
   Tal como antes, esta propiedad indica el nombre, para luego llamarla.

   //size="1"
   Indica cuántos elementos se verán en el select. Si colocamos '1', se verá como una lista desplegable. Si colocamos '2' o más se verá como una caja de selección. Por defecto es 1.
  
   //multiple
   Indica que podremos selecciona más de un elemento. Si no se coloca solo podremos seleccionar 1.

Para colocar elementos dentro debemos hacerlo con el tag <option>, seguido del texto que esta opción tendrá. Este tag no se cierra y sus propiedades son:

   //selected
   Con esto indicamos que la opción será la seleccionada. Si no se coloca, aparecerá seleccionada la primera opción.

Veamos como hacemos un select:

+++++++++++++++++++++++++++++++
Seleccione area de estudios:<p>
<select name="estudios">
<option>Primaria
<option>Secundaria
<option>Superior
</select>
+++++++++++++++++++++++++++++++

Esto se vería así:

+++++++++++++++++++++++++++++++
Seleccione area de estudios:
______________
|__Primaria___|   <-- tendríamos que desplegar la lista para ver lo demás elementos.

+++++++++++++++++++++++++++++++
   
//<input type="submit"> <input type="reset">
Este tag es una input, con la diferencia que son predeterminados. Si colocamso 'type="submit"', nos va a mostrar el típico botón de enviar de los formularios, y si colocamos 'type="reset"' nos va a mostrar un botón para resetear el formulario. Sus propiedades son:
     
     //type="submit"
     Mencionado recién

     //value="Texto"
     Aquí indicamos el texto que llevará el botón.

Al presionar el botón de submit, se envían los datos al archivo indicado en <form action=""> y mediante el método indicado en <form method"">.

=====================
Bien, ahora veamos un ejemplo de un formulario completo, con todo lo que hemos visto.


+++++++++++++++++++++++++++++++++++++++++++
<form name="prueba" action="procesar.php" method="post">
<input type="hidden" name="autor" value="zero">
<center><b>Formulario de Prueba</b></center><p>
Nombre:<br><input type="text" value="" name="nombre" size="50"><p>
Apellido:<br><input type="text" value="" name="apellido" size="50"><p>
Nick:<br><input type="text" value="" name="nick" size="50"><p>
Selecciona tu área de interés:<br>
<input type="checkbox" value="programacion">Programación<br>
<input type="checkbox" value="webmaster" checked>Desarrollo Web<br>
<input type="checkbox" value="hack">Hacking<p>
Selecciona tu edad:<br>
<input type="radio" value="mas" name="edad">Más...<br>
<input type="radio" value="20" name="edad">20 años<br>
<input type="radio" value="18" name="edad">18 años<br>
<input type="radio" value="15" name="edad">15 años<p>
País:<br>
<select name="pais">
<option>Chile
<option>Argentina
<option>Perú
<option>Brasil
<option>Otro...
</select><p>
Comentarios varios:<br>
<textarea name="comentarios" cols="50" rows="10"></textarea><p>
<input type="submit" value=" Enviar "> <input type="reset" value=" Resetear ">
</form>
+++++++++++++++++++++++++++++++++++++++++++

No explicaré el formulario, para que te pruebes a ver si lo entendiste ;)


=======================
Bueno, y ya terminando el curso de HTML, haré un ejemplo de una simple página en HTML, con todo lo que hemos visto.(excepto el formulario porque ya puse un ejemplo)




+++++++++++++++++++++++++++++++++++++++++++++++++
<html>
<head>
<meta name="Author" content="veterinario">
<meta name="Subject" content="Clínica Veterinaria">
<meta name="Description" content="Clínica Veterinaria">
<meta name="Keywords" content="Clínica - Veterinaria - Veterinario - Animales">
<meta name="Language" content="Español">
<title>Clínica veterinaria</title>
</head>
<body bgcolor="#ffffff" text="#000000" link"#000000" vlink"#000000">
<br><br>
<center><img src="imagenes/logo.gif" alt="Veterinaria" border="0"></center>
<br><br>
<center><h1>Perros</h1></center><p>
<table width="500" valign="top" border="1" bordercolor="#000000">
<tr>
<td><font size="2" face="Verdana" color="#0000ff">Perro San Bernardo</font><td>US $100
<tr>
<td><font size="2" face="Verdana" color="#0000ff">Perro Pastor Alemán</font><td>US $80
<tr>
<td><font size="2" face="Verdana" color="#0000ff">Perro Gran Danés</font><td>US $120
<tr>
<td><font size="2" face="Verdana" color="#0000ff">Perro Quiltro</font><td>US $10
</table>
<br><br>
<hr width="80%" color="#ff0000" align="left">
<br><br>
<center><h1>Otros</h1></center><p>
<table width="500" valign="top" border="1" bordercolor="#000000">
<tr>
<td><font size="2" face="Verdana" color="#00ff00">Ratón blanco</font><td>US $15
<tr>
<td><font size="2" face="Verdana" color="#00ff00">Ratón negro</font><td>US $10
<tr>
<td><font size="2" face="Verdana" color="#00ff00">Ratón de alcantarilla</font><td>US $3
</table>
<br><br>
Enlaces relacionados<br>
<ul type="disk">
<li><a href="juana.htm" target="_blank">Veterinaria 'juana'</a><p>
<li><a href="elperro.htm" target="_blank">Veterinaria 'el perro'</a><p>
<li><a href="animal.htm" target="_blank">Veterinaria 'animal_xD'</a><p>
<li><a href="hola.htm" target="_blank">Veterinaria 'hola'</a><p>
</body>
</html>
+++++++++++++++++++++++++++++++++++++++++++++++++


========================================================
Bueno, eso fue todo el curso de HTML, espero hayas entendido a la perfección y te haya sido de utilidad :)

Cualquier duda ve a http://cmh-ip.net/foro y responderemos tus dudas :=)


                                                                Escrito por z3r0_un0


.: 08 :.


                    *************************************
                           Introducción a PHP
                    *************************************



Aquí hablaré sobre PHP, un lenguaje de programación web muy potente que se caracteriza por ser un lenguaje que interáctua con el servidor en donde está. Su principal característica es que se puede usar en conjunto con HTML, para insertarlo dentro de documentos, y con base de datos.


Bueno, ahora...¿cómo comienzo un documento PHP?. El documento PHP tiene varias tags para iniciar y terminar, entre las principales están:

- <? ?>            // inicio y fin respectivamente
- <?php ?>         // inicio y fin respectivamente

Ahora veamos, la uno de los principales elementos de todo lenguaje de programación, las 'variables'.

¿Qué es una variable?
No es más que una cadena de texto, que se usa para identificar cierta información. Como su nombre lo dice, su valor es variable y es indicado al momento de estar programando. Ejemplo:

//$nombre="zero";
Aquí le asigno a la variable '$nombre' el valor de 'zero'. Así para cuando llame a la variable  o la quiera mostrar por pantalla, me va a mostrar su contenido....que es 'zero'.
En el ejemplo anterior se puede apreciar que el nombre de la variable lleva antepuesto un '$'. Esto nos sirve para identificar las variable dentro del documento, puesto que toda palabra que lleve un '$' antepuesto, será tomada como variable.
También se ve el signo '=' que es para asignarle valor a la variable. No creo que necesite mayor explicación.
Luego podemos ver que el valor va entre comillas. Esto se usa para indicar que la variable es una cadena de texto. Pero en el caso de que queramos que su valor sea un entero, no es necesario colocar las comillas.
Y por último, vemos que luego del valor que le asignamos, lleva un ';', delimitador que usamos para indicar que ahí termina el valor de la variable.
Cabe recalcar otros puntos también.

//El valor de la variable no puede tener más de una línea, si lo necesitáramos, habría que ocupar un array. (más adelante se verá)

//Las variables son sensibles a mayúsculas. Por ejemplo:

$nombre="zero";
$Nombre="zero";
$NOMBRE="zero";

Aquí tenemos tres variables distintas.

//PHP identifica automáticamente qué tipo de valor contiene nuestra variable. Ejemplo:
++++++++
$a="3";
$b=2;
$c=$a+$b;
+++++++++
Aquí podemos ver que a la variable $a se le ha dado el valor de 3, pero como cadena de texto. Y a la variable $b se le ha dado el valor de 2, como entero. Entonces el PHP es capaz de identificar automáticamente que $a tiene valor tipo entero, y es capaz de ralizar la suma sin mayores problemas.

//Dependiendo de su valor, las variables pueden ser identificadas como:

    //entero
    Si es que su valor es un número entero.

    //real
    Si es que su valor es un número decimal.

    //alfanumérica
    Si es que su valor es una cadena de texto

    //tablas
    Almacenan informaciones de todo tipo, en gran cantidad. Estas pueden ser array.

Veamos un ejemplo de todo esto:

++++++++++++++++++++++
$num=1250;          // variable tipo entero
$num2=12.50;        // variable tipo real
$num3="4";          // variable tipo entero (se detecta automáticamente)
$nombre="zero_uno";  // variable tipo alfanumérica
++++++++++++++++++++++

Ok, ahora veremos las variables del sistema. Estas variables vienen ya definidas y podemos usarlas para mostrar información sobre el usuario o el servidor.

Veamos algunos ejemplos (los más principales):

//$PHP_SELF
Nos devuelve la URL actual donde está siendo ejecutado el script. 

//$HTTP_REFERER
Nos indica la URL desde donde proviene el usuario.

//$REMOTE_ADDR
Nos devuelve la IP del usuario.

///
¿Cómo uso éstas variables del sistema?
Muy fácil, es sólo cosa de indicarlas como valor de una varible. Ejemplo:

+++++++++++++
$ip=$REMOTE_ADDR;         //aquí tenemos almacenada la IP del usuario
$origen=$HTTP_REFERER;    //Aquí tenemos almacenada la URL desde donde proviene el usuario
$urlactual=$PHP_SELF;     //Aquí tenemos almacenada la URL actual
+++++++++++++

/////
Ok, ahora veremos las variables tipo array. Éstas se caracterizan por su capacidad de almacenamiento, que puede ser de varias líneas y líneas.

¿Cómo defino un array?
Tenemos varias formas. La primera y más simple, es así:

++++++++++++++++++++
$pais[1]="Chile";
$pais[2]="Argentina";
$pais[3]="Perú";
++++++++++++++++++++

Esto nos indicara que el array '$pais' contendrá en la línea '1' el valor 'Chile'
 y así sucesívamente.
Cabe decir que donde va '1' también puede ser texto. Ejemplo:

++++++++++++++++++++
$pais["primero"]="Chile";
$pais["segundo"]="Argentina";
$pais["tercero"]="Perú";
++++++++++++++++++++

////
La otra forma de hacer array, es la siguiente:

+++++++++++++++++
$pais=array("primero"=>"Chile","segundo"=>"Argentina","tercero"=>"Perú");
+++++++++++++++++

Usando estos mismo array podemos construir matrices, que son un conjunto de varios array.
Ejemplo de una matriz:


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
$Tierra=array
(
"continente"=>array     
             (
              "Europa"=>array
                     (
                      "paises"=>array
                                (
                                 "1"=>"Inglaterra",
                                 "2"=>"España"
                                 ),
                       "equipos"=>array
                                 (
                                  "1"=>"Arsenal",
                                  "2"=>"Real Madrid"
                                  )
                       ),
               "América"=>array
                     (
                      "paises"=>array
                                (
                                 "1"=>"Chile",
                                 "2"=>"Argentina"
                                 ),
                       "equipos"=>array
                                 (
                                  "1"=>"Universidad de Chile",
                                  "2"=>"River Plate"
                                  )
                       )
                )
   );   
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Bueno, si entendiste bien lo que era un array podrás apreciar que aquí se creó un array para "continente", luego para cada continente que está dentro de éste se creó otro array para almacenar los paises y equipos, y dentro de estos se puso un array con los nombres de países y equipos, ordenados de 1 a 2. (puse un ejemplo de fútbol, porque creo que así muchos entenderán xD)

////
Los array, aparte de ser buenos almacenadores de datos, tienen muchas funciones con las que se pueden utilizar. Las puedes encontrar en: http://www.php.net/manual/es/ref.array.php


////////
Función ECHO

Ahora veremos esta función, qué es imprescindible para trabajar, puesto que con ésta interactuamos con el usuario de manera muy fácil.

¿Cómo uso echo?
Pues así:

+++++++++
echo 'Hola mundo';
+++++++++

Esto imprimiría en pantalla el texto Hola mundo.
Al igual que con las variables, 'echo' debe ser finalizado con ';' para delimitar qué queremos mostrar.
Para imprimir variables debemos hacer así:

+++++++
$pais="Chile";
echo "Yo vivo en $pais";
+++++++ 

Esto mostraría:

++++++++++++++++++
Yo vivo en Chile
++++++++++++++++++

//Notas al margen de ECHO

    //Para mostrar en pantalla el signo $, debes anteponer un \
    Esto también es aplicable para cuando quieras escribir signos de operación aritmética como +, -, *, /.
     También para escribir comillas, y por si quieres escribir \ también debes anteponerla (así: \\)



//////
Operadores

Ahora veamos los operadores. Estos pueden ser:

//+ - * /
Suma, resta, multiplicación y división respectivamente.
¿Cómo usarlos?
Para sumar entre variables hay que tener en cuenta ciertos detalles:

   //Si yo hago esto:
   +++++++++++
   $a=1;
   $b=2;
   $c="$a+$b";   
   echo "$c";
   +++++++++++
   Está malo, porque eso daría como resultado 1+2, pues el signo + no está tomado como una operación aritmética al estar entre "". La forma correcta sería:
   +++++++++++
   $a=1;
   $b=2;
   $c=$a+$b;
   echo "$c";
   +++++++++++
   Esto efectivamente mostraría 3.

**** Lo mismo con las operaciones de resta, multiplicación y división. 


//++ --
Incremento y decremento respectivamente
¿Cómo usarlos?
Al igual que los operadores anteriores, no deben ir entre "" pues son tomados como texto.
El operador de incremento suma 1 a la variable asignada, el operador decremento hace lo contrario.
Ejemplo:

++++++++++++
$a=1;
$b=$a++;
echo "$b";
++++++++++++

Esto mostraría por pantalla el valor 2. (Para decremento se hace exactamente lo mismo).


//==, !=, <=, >=, <, >, And, Or
Igualdad, desigualdad, menos o igual que, mayo o igual que, menor que, mayor que, y, o respectivamente.
Estos operadores se ocupan principalmente en las sentencias, que veremos más adelante.


//////////
Sentencias

Ahora veremos las sentencias.
Empezaremos con el condicional IF ELSE.

El condicional IF ELSE funciona de la siguiente manera:

+++++++++++
$a=5;
if($a == 5){
echo "a es igual a 5";
}else{
echo "a no es igual a 5";
}
+++++++++++

Examinemos. El condicional IF ELSE funciona a base de una condición que lleva entre (). Si esta condición se cumple procede a ejecutar la instrucción dada dentro de los {} siguientes a IF. Si la condición no se cumple procede a ejecutar la instrucción dada dentro de los {} siguientes a ELSE. En el ejemplo anterior la condicón es "si $a es igual a 5" (se usa el operador de igualdad). En este caso se ejecutará la primera instrucción

Así también podemos escribir:

+++++++++++++
$b=3;
if($b != 3){
echo "b no es igual a 3";
}
+++++++++++++

Aquí la condición es con el operador de desigualdad, por lo tanto es: "si b NO es igual a 3".
Por supuesto que no se ejecutará la condición, ya que b SI es igual a 3.

También encontramos el ELSEIF, que nos sirve para ejecutar otra instrucción con otra condición. Ejemplo:

+++++++++++++++
$a=3;
if($a == 2){
echo "a es igual a 2";
}elseif($a == 3){
echo "a es igual a 3";
}elseif($a == 4){
echo "a es igual a 4";
}else{
echo "a no es igual ni a 2, ni 3, ni 4";
}
+++++++++++++++

Como puedes ver, utilizand este condicional se pueden establecer más de 1 condición e instrucción. Cabe recalcar que el sistema revisará las condiciones hasta que una sea cierta. En este caso el sistema dejará de revisar las condiciones en elseif($a == 3), porque esta condición es cierta.

//Notas al margen sobre estos condicionales.
   
   //El condicional ELSEIF no puede ir sólo. Por lo menos tiene que ir con un IF
   //El condicional IF si puede ir solo, no hay necesidad de un ELSE
   //ELSE no puede ir sólo, necesita un IF


///////////
Bucle FOR

Ahora trataremos el bucle FOR.
¿Qué es un bucle?
Es una instrucción que se realiza una cantidad determinada de veces, definida por condiciones.

Veamos como usar el bucle FOR:

+++++++++++++
for($a=0;$a<5;$a++)
{
echo "a es igual a $a<br>";
}
+++++++++++++

Esto mostraría por pantalla:

+++++++++++++
a es igual a 0
a es igual a 1
a es igual a 2
a es igual a 3
a es igual a 4
+++++++++++++

Veamos como funciona:

Primero que nada, el bucle FOR tiene un patrón para su condición que es:

//Definición de valores, condición evaluada y acción a realizar si la condición es cierta.
Después que pase todo esto se realiza la instrucción dentro de las llaves {} (siempre y cuando la condición sea cierta)

En el ejemplo anterior se puede leer como: "$a es igual a 0;si $a es menor que 5;suma 1 a $a"
Entonces como $a es igual a 0(por lo tanto es menor que 5) incrementa 1 a la variable $a y realiza la instrucción dentro de las llaves, que es mostrar el valor de $a.


//////
Bucle FOR EACH

Ahora veremos el bucle FOR EACH, muy útil para recorrer array.

Veamos como funciona:

++++++++++++++
$pais=array
           (
            "Chile"=>"Universidad de Chile",
            "Argentina"=>"River Plate",
            "Inglaterra"=>"Arsenal"
            );

foreach($pais as $clave=>$valor){
echo "País: $clave<br>Equipo: $valor<p>";
}
++++++++++++++

Esto nos mostrará por pantalla:

+++++++++++++++
País: Chile
Equipo: Universidad de Chile

País: Argentina
Equipo: River Plate

País: Inglaterra
Equipo: Arsenal
+++++++++++++++

Lo que hace esto exactamente es revisar línea por línea el array hasta llegar al final (hasta que sea nulo), y en cada línea del array es una condición cumplida, por se ejecuta una instrucción, que en este caso era la de mostrar en pantalla los datos de la línea del array donde estábamos. (se entiende por esto que si el array tuviera 100 líneas, mostraría 100 resultados).


//////////
Bucle WHILE

Este bucle es el más sencillo, este consta de una instrucción que se ejecutará mientras la condición sea verdadera.
Ejemplo:

+++++++++++++++++
$num=0;
while($num=<10){
echo "$num<br>";
$num++;
}
+++++++++++++++++

Esto mostraría por pantalla:

+++++++++
0
1
2
3
4
5
6
7
8
9
+++++++++

Examinemos:
El bucle WHILE tiene una condición, si es cierta ejecuta la instrucción dentro de las llaves {} y luego se devuelve a ver si la condición sigue siendo cierta. Entonces $num es igual a 0, por mientras que $num sea menor que 10 ejecuta la instrucción que es mostrar $num e incrementar 1 a $num, por lo que el bucle al devolerse a revisar la condición, $num será 1, luego será 3, luego 4, 5....y así sucesivamente hasta ser 9.
Es más o menos como el bucle FOR.


/////
Bucle DO WHILE

Este bucle es casi igual al anterior, con la diferencia de que éste ejecuta la instrucción y luego revisa la condición. Así, si la condición es falsa, por lo menos se ejecutará 1 vez la instrucción. 
Ejemplo:

+++++++++++++++++++++
$a=10;
do{
echo "$a";
}while($a<10);
+++++++++++++++++++++

Esto mostraría:

+++++++++++++++++++++
10
+++++++++++++++++++++

Como vez, en este caso la condición es falsa y solo realiza una vez la instrucción.


//////////////////////
Funciones

Ahora dejamos las sentencias y bucles para ver las funciones, muy útiles para el ahorro de código.

Una función es un conjunto de instrucciones predefinidas utilizadas para realizar tareas con variables asignadas posteriormente.

Veamos como hacer una función: (para los que se leyeron VB, esto les parecera familiar)

+++++++++++++++++++++++++++
function suma($a,$b){
$c=$a+$b;
echo "$c";
}
+++++++++++++++++++++++++++

Bueno, primero que nada debemos declarar el nombre de la función, que en este caso es suma. Luego entre los () se definen los parámetros de la función (está función consta de $a, $b y $c)
Y finalmente la instrucción se escribe entre las llaves {}. Lo que escribamos dentro de las llaves {} será lo que se ejecutará al momento de llamar la función.

Ahora, ¿cómo podemos llamar la función anterior?

Así:

++++++++++++++++++++
$num_1=10;
$num_2=15;
echo "La suma de $num_1 y $num_2 da como resultado";
suma($num_1,$num_2);
++++++++++++++++++++

Aquí indicamos a la función suma que $num_1 vendría siendo equivalente al parámetro $a, y $num_2 al parámetro $b. Así suma los dos parámetros y muestra el resultado.

Con esta simple base puedes crear tus propias funciones, claro eso sí, más complejas.


///////
Recoger variables de la URL


Primero que nada, ¿cómo se declaran variables por la URL?
Asi:

+++++++++++++++++++++++++++++++++++++++++++
archivo.php?nombre=zero&pais=chile
+++++++++++++++++++++++++++++++++++++++++++

Con esto indicamos que el valor de nombre es: zero, y el valor de pais es: chile.

Para empezar a declarar variables debemos escribir el signo ?, y luego el nombre de la variable con su respectivo valor (ej: nombre=zero). Para seguir declarando variables debemos sustituir el signo ? por &. Este último se ocupa después de otra declaración, osea de la segunda declaración para adelante.

Para recoger el valor de estas variables debemos escribir $_GET["nombre"] y $_GET["pais"].
Ejemplo:

+++++++++++++++++++++++++++
$nombre=$GET["nombre"];
$pais=$_GET["pais"];
echo "Me llamo $nombre y vivo en $pais :)";
+++++++++++++++++++++++++++

Esto mostraría:

+++++++++++++++++++++++++++
Me llamo zero y vivo en chile :)
+++++++++++++++++++++++++++

Esto funciona debido a que $_GET es una variable del sistema, mejor dicho un array, que guarda todas las variables pasadas por la URL. Esto se puede ver debido a la forma de llamar cada uno de sus elementos, que es: $_GET["elemento1"], $_GET["elemento2"], etc..al igual que los array.
Este mismo concepto es el que hace funcionar el método $_POST, que veremos ahora.


/////////
Recoger variables de un formulario

A diferencia de las variables por la URL, en los formularios las variables son definidas mediante los campos. Ejemplo:

++++++++++++++++++++++
<input type="text" name="nombre">
++++++++++++++++++++++

Esta es una input (si no sabes lo que es, consulta Introducción HTML) y el valor de esta input es el que pasa a través del formulario como variable. En otras palabras: la input es la variable, y lo que escribamos en ella será su valor. Luego esta variable se llama a través del nombre de la input.

Veamos un ejemplo concreto de como podemos hacer un formulario que pida los datos nombre y país.

+++++++++++++++++++++++++++++++
<form action="procesar.php" method="post">
Nombre:<br>
<input type="text" name="nombre" size="text"><p>
País:<br>
<input type="text" name="pais" size="text"><p>
<input type="submit" value="Enviar Datos">
</form>
++++++++++++++++++++++++++++++++


(procesar.php)
+++++++++++++++++++++++++++++++++
$nombre=$_POST["nombre"];
$pais=$_POST["pais"];
echo "Tu nombre es $nombre y vives en $pais";
+++++++++++++++++++++++++++++++++

Si te das cuenta $_POST es un array, como $_GET, pero con la diferencia de que almacena el valor de los campos del formularios, que luego son llamados como variables.



****************************************************
 Eso fue todo el curso de Introducción a PHP. Espero que hayas aprendido y te sirva mucho.

Cualquier duda, hazla saber en el foro de cmh-ip (http://cmh-ip.net/foro)

Me despido, byte...

                                                          Escrito por z3r0_un0



.: 09 :.


                     ************************************
                            Introducción a MySQL
                     ************************************



En este curso hablaré sobre las funciones básicas para trabajar con Base de Datos MySQL en conjunto con PHP.

********************

Primero que nada debes saber que MySQL es un lenguaje estructurado que almacena y organiza datos, permitiendo insertar, eliminar, modificar, ordenar, seleccionar, etc... entre otras funciones.
Aquí veremos como insertar, medoficar y eliminar datos de una base de datos.


Para crear tablas desde un archivo php se puede usar este código:

+++++++++++++++++++++++++
CREATE TABLE `prueba` (
  `nombre` VARCHAR( 20 ) NOT NULL ,
  `apellido` VARCHAR( 20 ) NOT NULL 
  );
++++++++++++++++++++++++++++

Con este código creamos la tabla 'prueba',dentro de ella el campo 'nombre' de tipo VARCHAR con un límite de 20 caractéres, y el campo 'apellido' de tipo VARCHAR también, con un límite de 20 caractéres.

Nota: las tablas también se pueden crear del phpmyadmin, de una manera mucho más fácil :P

Ahora, las instrucciones debemos ejecutarlas de la siguiente manera:

//mysql_db_query("nombre_db","instrucción");
Donde dice nombre_db obviamente va el nombre de la base de datos a la que no estamos conectando, y donde dice instrucción va la instrucción que puede ser:

//"insert into tabla (campo1,campo2) values ($variable1,$variable2)" 
Aquí claramente inserta en los campos 1 y 2, las variables 1 y 2 respectivamente.

//"update tabla set campo1='$variable1',campo2='$variable2'"
Aquí da la orden de actualizar el campo 1 y 2 con las variables 1 y 2 respectivamente.

//"delete campo1,campo2 from trabla"
Aquí elimina el campo 1 y 2 de la tabla 'tabla'

//"select campo1,campo2 from table"
Aquí toma el campo 1 y 2 de la tabla 'tabla'

Estas son las funciones más básicas para trabajar con una base de datos. Ahora veamos
 algunos ejemplos.

///////

Supongamos que la base de datos es 'prueba' y ya tenemos creada la tabla 'datos', con los campos 'nombre' y 'apellido'.

Ahora, para introducir datos en la base de datos lo hacemos así:

********************************
Formulario de inserción de datos
     (form1.php)
********************************


+++++++++++++++++++++++++++++++++
<html>
<form method="POST" action="insertar.php">
<b>Nombre:</b><br><input type=text name=nombre size=50><p>
<b>Apellido:</b><br><input type=text name=apellido size=50><p>
<input type=submit value=Enviar><input type=reset value=Limpiar>
</form>
</html>
+++++++++++++++++++++++++++++++++++

Este formulario va a insertar.php que tiene el siguiente código:



********************************
Introducción de datos a la BD
     (insertar.php)
********************************


+++++++++++++++++++++++++++++++++++
<html>
<?
mysql_connect("localhost","usuario","contraseña");
mysql_db_query("prueba","insert into datos (nombre,apellido) values ('$nombre','$apellido')");
echo '<br>Datos ingresados con éxito!<p>';
?>
</html>
+++++++++++++++++++++++++++++++++++++

Wow, aquí aparecierona algunas cosas que no habíamos visto, pero no te preocupes...

//mysql_connect("localhost","usuario","contraseña");
Con esto nos conectamos a la base de datos ya que si no lo hacemos no podremos ejecutar ninguna de las intrucciones. Donde dice 'localhost' es el nombre del host, que casi siempre es localhost a no ser que sea un server tuyo que lo hayas configurado a tu manera. Luego en 'usuario' claramente va el nombre de usuario mysql y en contraseña la contraseña mysql.


//////

Una vez insertado los datos, vamos a ver los datos. Se puede hacer de la siguiente manera:


*******************************
Visualizar los datos de la DB
    (ver.php)    
*******************************


++++++++++++++++++++++++++++++
<html>
<?
mysql_connect("localhost","usuario","contraseña");
$resultado=mysql_db_query("prueba","select * from datos");
?>
<table width='500' border='1' cellpadding='0' cellspacing='0' bordercolor='#000000'>
<tr>
<td width='250'>Nombre
<td width='250'>Apellido
<?
while($row=mysql_fetch_array($resultado))
{
echo '<tr><td width=250>'.$row["nombre"].'</td>';
echo '<td width=250>'.$row["apellido"].'</td>';
}
mysql_free_result($resultado);
?>
<br><br>
</table>
</html>
++++++++++++++++++++++++++++++++

Más cosas nuevas.....jejeje

//$resultado=mysql_db_query(.......
Con esto hacemos que la variable '$resultado' almacene el contenido de la instrucción realizada. Ej: si hacemos un 'select campo1 from tabla', la variable '$resultado' es igual a 'campo1'

//'select * from datos'
Esto quiere decir que tomamos todo el contenido de la tabla 'datos'

//while($row=mysql_fetch_array($resultado)){......
Aquí, mysql_fetch_array es un array de la instrucción ejecutada, osea de todo lo que sacamos de la base de datos. Y el while(....) funciona similar al bucle foreach (dudas, consultar Introducción a PHP).

 

/////


Ahora veremos como actualizar un registro ya existente, e igual como antes empezamos por un formulario, eso si esta vez es un poco diferente.


*************************************
Formulario de actualización de datos
           (form2.php)
************************************


++++++++++++++++++++++++++++
<html>
<form method="POST" action="actualizar.php">
<b>Nombre : </b><br>
<?
mysql_connect("localhost","usuario","contraseña");
$resultado=mysql_db_query("prueba","select nombre from datos order by nombre");
echo '<select name=nombre>';
while ($row=mysql_fetch_array($resultado)){
echo '<option>'.$row["nombre"];}
echo '</select>';
?>
<p>
<b>Apellido : </b><br>
<input type='text' name='apellido' size=50><p>
<input type=submit value='Enviar'><input type=reset value='Limpiar'>
</form>
</html>
++++++++++++++++++++++++

Nuevo:

//order by nombre
ordena lo que hemos tomado por abecedario (porque el campo contiene nombres, ya que si tuviera números, los ordenaría de 1 a 10)
pd: si ponemos 'order by nombre desc', lo ordena al revés


Aquí tomamos el nombre y lo mostramos en un <select>, cada <option> es un nombre.
Así seleccionamos un nombre y le cambiamos el apellido.

Ahora vamos con el archivo que actualiza los datos.


***********************
Actualizacion de datos
   (actualizar.php)   
***********************


++++++++++++++++++++++++++++++
<html>
<?
mysql_connect("localhost","usuario","contraseña");
mysql_db_query("prueba","update datos set apellido='$apellido' where nombre='$nombre'");
echo 'Acualización realizada con éxito!';
?>
</html>
++++++++++++++++++++++++++++++++

Cosas nuevas:

//where nombre='$nombre'
Es tan simple como 'donde campo1 sea igual a variable1'.


///////

Ahora veremos como borrar registros con un formulario igual al anterior.


***********************************
Formulario de borrado de datos
          (form3.php)           
***********************************



+++++++++++++++++++++++++++++++++++++++
<html>
<form method="POST" action="borrar.php">
<b>Nombre : </b><br>
<?
mysql_connect("localhost","usuario","contraseña");
$resultado=mysql_db_query("prueba","select nombre from datos order by nombre");
echo '<select name=nombre>';
while ($row=mysql_fetch_array($resultado)){
echo '<option>'.$row["nombre"];}
echo '</select>';
mysql_free_result($resultado);
?>
<p>
<input type=submit value='Enviar'><input type=reset value='Limpiar'>
</form>
</html>
++++++++++++++++++++++++++++++++++


Aquí no hay nada nuevo, asi que seguimos con 'borrar.php'

********************
Borrado de datos
    (borrar.php)
********************


+++++++++++++++++++++++++++++
<html>
<?
mysql_connect("localhost","usuario","contraseña");
mysql_db_query("prueba","delete from datos where nombre='$nombre'");
echo 'Datos borrados con éxito!';
?>
</html>
++++++++++++++++++++++++++++++++

Nada que destacar tampoco......xD


////////

Bueno, eso fue todo, espero que me hayan entendido......si no es así pueden consultar en http://cmh-ip.net/foro, donde yo el staff de cmh-ip nos encontramos para ayudar :)

                                                               Escrito por z3r0_un0




.: 10 :.


                  *************************************************
                                      Tips PHP                    
                  *************************************************



Bueno, aquí traigo algunos consejos de programación en php muy útiles para los webmasters (son scripts anti script-kiddies.....xD)



+++++++++ 10.1 ++++++++++

*******************************************
.: Validación de formularios :.
*******************************************



Este script es para que los usuarios no posteen cosas en blanco en los formularios, ya sea formularios de contacto, comentarios, etc... Epsero que les sea útil.

/////

Primero que nada veamos nuestro formulario: (en nuestro caso un formulario para comentar)

++++++++++++++++++++++++++++++++++++++
<html>
<?
if(isset($GET_["comentar"])){   
$ok=0;
if($_POST["nombre"] == ""){ echo 'Debes introducir tu nombre<p>';}else{ $ok++}
if($_POST["comentario"] == ""){ echo 'Debes introducir tu mensaje':}else{ $ok++}
if($ok == 2){ echo 'Gracias por comentar';}else{}
}else{
echo '<form name=form method=post action=?comentar>
<b>Nombre:</b><br><input type=text name=nombre size=50><p>
<b>Comentario:</b><br><textarea name=comentario cols=50 rows=10></textarea><p>
<input type=submit value=Comentar><input type=reset value=Resetear></form>';}
?>
</html>
+++++++++++++++++++++++++++++++++++++++

Examinemos este código línea por línea.....


//if(isset($GET_["comentar"])){
La condición que se puede apreciar en este IF, es que la variable comentar esté declarada y que tiene que ser mediante método GET (mediante la url. ej: 'form.php?comentar' <-- url)

//$ok=0;
Aquí le damos valor 0 a la variable $ok, que más adelante comprenderás para que se usa.

//if($_POST["nombre"] == ""){ echo 'Debes introducir tu nombre<p>';}else{ $ok++}
Bien, aquí la condición para el IF es que la variable nombre (mediante método POST, osea a través del formulario) sea igual a "". Si la condición se cumple manda un mensaje de error. Si es que la condición no se cumple (eso significa que la variable si tiene contenido) suma uno a la variable $ok, que hasta ahora vendría siendo '1'.

//if($_POST["comentario"] == ""){ echo 'Debes introducir tu mensaje':}else{ $ok++}
Aquí es lo mismo que en la línea anterior, con la diferencia de que es con la variable comentario. 
Si es que la condición se cumple manda un error y si la condición no se cumple suma uno a la variable $ok mediante el operador de incremento. (hasta ahora la variable tiene valor '2')

//if($ok == 2){ echo 'Gracias por comentar';}else{}
Ahora, si es que las dos variables anteriores no eran igual a "", la variable $ok vendría teniendo el valor '2', que es la condición de esta línea. Entonces si se cumple la condición muestra un mensaje de agradecimiento. Claro está que donde aparece el mensaje de agradecimiento se debe poner además el código para agregar el comentario, que aquí no lo agregé porque cada webmaster ocupa su método (ya sea con base de datos, con .txt, con .dat, etc...)

//else{..............}
Este ELSE es del primer IF, que era el de la variable $_GET["comentar"]. Entonces si la variable $_GET["comentar"] no está declarada (mediante la url), muestra el formulario para comentar, y que no hay que explicar....ya que es HTML.

Espero te haya quedado claro y, bueno....ahora revisa el código que viene a continuación, ya que es muy útil también, y más si se usa en combinación con el de validación de formularios.





+++++++++ 10.2 ++++++++++

*******************************************
.: Deshabilitación de código HTML :.
*******************************************



Este script es anti-injecciones, para que los lammercillos que se dedican a hacer esas cosas no te fastidien tu preciado sistema de comentarios xD

/////

Este código es bien simple y lo escribo suponiendo que se va a usar con el formulario anterior, por lo que usaré las mismas variables.
Nota: os enseñare también para permitir cierto código HTML, como <br>, <center>, etc.. que no son 'dañinos'....

++++++++++++++++++++++++++++++++++++++

$nombre=str_replace("<","&lt;",$autor);
$nombre=str_replace(">","&gt;",$autor);
$comentario=str_replace("<","&lt;",$comentario);
$comentario=str_replace(">","&gt;",$comentario);
$comentario=str_replace("&lt;br>","<br>",$comentario);
$comentario=str_replace("&lt;p>","<p>",$comentario);
$comentario=str_replace("&lt;center>","<center>",$comentario);
$comentario=str_replace("&lt;/center>","</center>",$comentario);
$comentario=str_replace("&lt;b>","<b>",$comentario);
$comentario=str_replace("&lt;/b>","</b>",$comentario);
$comentario=str_replace("&lt;i>","<i>",$comentario);
$comentario=str_replace("&lt;/i>","</i>",$comentario);
$comentario=str_replace("&lt;u>","<u>",$comentario);
$comentario=str_replace("&lt;/u>","</u>",$comentario);

++++++++++++++++++++++++++++++++++++++++

Examinemos el código línea por línea.......de nuevo xD

//$nombre=str_replace("<","&lt;",$autor);
Aquí, y al igual que a lo largo de todo el ejemplo, se usa la función 'str_replace' que reemplaza lo que está en las primeras "" por lo que está en las segundas "".....en una manera fácil de decirlo ya que no me se la definición técnica exacta....
Bueno, volviendo al código.......lo que hacemos es que el carácter '<', que es utilizado en tags html, php, javascripts, etc..., sea reemplazado por su equivalente en HTML, que és '&lt;' y es inofensivo en cuanto a ejecución de script ya que con éste no se puede hacer un tag.

//$comentario=str_replace("&lt;br>","<br>",$comentario);
Me salté a la línea 5 ya que con la explicación anterior se puede comprende la línea 2, 3 y 4.
En esta línea la variable '$comentario' ya ha reemplazado todos los '<' y los '>', pero ¿qué pasa si queremos que cierto código html SI esté habilitado...pues entonces usamos la función de nuevo, pero esta vez para reemplazar '&lt;br>' por '<br>', y así se conservarán todos los <br> de la variable '$comentario'.
Con esta explicación creo que se debe entender el código las líneas restantes.

Y eso es todo, ahora ya no podrán inyectarte alert(), ni <iframe>, ni <div>, ni nada....juaz xD
Espero te sea útil ;)


++++++++++++++++++++++++++++++++++++++++++
Esos fueron los Tips PHP, ya sabes que cualquier duda puedes ir al foro
http://cmh-ip.net/foro

                                                            Escrito por z3r0_un0



.: 11 :.


      *************************************************************
                               Taller PHP
      *************************************************************


      
       Bueno, he aquí de nuevo....y les traigo otras utilidades más. Esta vez un script manual para que lo puedan utilizar en su web o para que analizen el código y vean como se hace, y así puedan construir sus propios scripts.



++++++++11.1+++++++++++++


****************************************************
           .: Encuesta anti-flood :.
****************************************************



Aquí les dejaré el código para una encuesta (hecho por mi :P). Tiene la gracia de que sea un voto por IP, siendo así, que no permita flood.


Para este script tendremos que crear dos tablas. Una se llamará 'e_datos' donde almacenaremos la opción elegida y la IP del votante. Para esto debe tener los campos 'ip' y 'voto'.
La otra será 'e_cfg' donde estarán las preguntas a mostrar, junto con el título. Para esto debe tener los campos 'titulo', '1', '2', '3', y '4' (Para el título y las preguntas del 1 al 4 respectivamente).


(encuesta.php)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
<?
mysql_connect("localhost","usuario","contraseña");  //conectamos a la bd

$ins=mysql_db_query("nombre_basedatos","select titulo from e_cfg"); //seleccionamos el título
$contndo=mysql_fetch_array($ins);   
echo "<b>$contndo[titulo]</b><p>";  //mostramos el titulo

$ins=mysql_db_query("nombre_basedatos","select voto from e_datos"); //seleccionamos los votos
$total=mysql_num_rows($ins); //contamos los votos (para mostrar el total de votos)


echo "<br><br>";

$ins=mysql_db_query("nombre_basedatos","select * from e_cfg"); //tomamos la primera opción
$contndo=mysql_fetch_array($ins);
$opcion=$contndo[1];  //asignamos la primera opción a una variable
$ins=mysql_db_query("nombre_basedatos","select voto from e_datos where voto='1'");
//tomamos todos los votos con esa opción
$conteo=mysql_num_rows($ins); //los contamos
$porc=$conteo * 400 / $total; 
//sacamos el porcentaje (el 100% es 400, por el ancho de la tabla)
$porc2=round($porc / 4); //redondeamos el procentaje
echo "$opcion: ($conteo votos, $porc2%) //mostramos la opción, los votos y el porcentaje
<table width=400 height=20 bgcolor=#666666 style=border-collapse:collapse bordercolor=#000000 border=1>
<tr><td>
<table width=$porc bgcolor=#000000 height=20><tr><td><td></table>
//hacemos un gráfico de barra
</table><br>";


//ahora es lo mismo pero con las otras opciones


$ins=mysql_db_query("nombre_basedatos","select * from e_cfg");
$contndo=mysql_fetch_array($ins);
$opcion=$contndo[2];
$ins=mysql_db_query("nombre_basedatos","select voto from e_datos where voto='2'");
$conteo=mysql_num_rows($ins);
$porc=$conteo * 400 / $total;
$porc2=round($porc / 4);
echo "$opcion: ($conteo votos, $porc2%)
<table width=400 height=20 bgcolor=#666666 style=border-collapse:collapse bordercolor=#000000 border=1>
<tr><td>
<table width=$porc bgcolor=#000000 height=20><tr><td><td></table>
</table><br>";


$ins=mysql_db_query("nombre_basedatos","select * from e_cfg");
$contndo=mysql_fetch_array($ins);
$opcion=$contndo[3];
$ins=mysql_db_query("nombre_basedatos","select voto from e_datos where voto='3'");
$conteo=mysql_num_rows($ins);
$porc=$conteo * 400 / $total;
$porc2=round($porc / 4);
echo "$opcion: ($conteo votos, $porc2%)
<table width=400 height=20 bgcolor=#666666 style=border-collapse:collapse bordercolor=#000000 border=1>
<tr><td>
<table width=$porc bgcolor=#000000 height=20><tr><td><td></table>
</table><br>";


$ins=mysql_db_query("nombre_basedatos","select * from e_cfg");
$contndo=mysql_fetch_array($ins);
$opcion=$contndo[4];
$ins=mysql_db_query("nombre_basedatos","select voto from e_datos where voto='4'");
$conteo=mysql_num_rows($ins);
$porc=$conteo * 400 / $total;
$porc2=round($porc / 4);
echo "$opcion: ($conteo votos, $porc2%)
<table width=400 height=20 bgcolor=#666666 style=border-collapse:collapse bordercolor=#000000 border=1>
<tr><td>
<table width=$porc bgcolor=#000000 height=20><tr><td><td></table>
</table><br>";



echo "<p>Total votos: <b>$total</b>"; //Aquí mostramos el total de los votos

echo "<br><br>";

//ahora la configuración de un voto por IP

if(isset($_GET["voto"])){ //si está la variable declarada por la URL
$IP=$REMOTE_ADDR;  //recogemos la IP del votante
$ins=mysql_db_query("nombre_basedatos","select ip from e_datos where ip='$IP'");
//seleccionamos desde las IP anteriores una igual a esta
while($contndo=mysql_fetch_array($ins)){
$IPx=$contndo[ip];} //pasamos la selección que hicimos a una variable

if($IP != $IPx){ //si la variable es nula (osea que no había una IP igual)
$opelegida=$_POST["opelegida"];
$ins=mysql_db_query("nombre_basedatos","insert into e_datos (voto,ip) values ('$opelegida','$IP')");
//agregamos el voto
echo "<font color=#ff0000>Gracias por votar</font><p>";
echo "<meta HTTP-EQUIV='Refresh' CONTENT='0 URL=?'>";
//actualizamos la página actual
}else{
echo "<font color=#ff0000>Lo sentimos, solo se permite un voto por IP</font><p>";
}}else{echo "";}

?>
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


(index.php)
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
<?
mysql_connect("localhost","usuario","contraseña"); //conectamos a la bd
$ins=mysql_db_query("nombre_basedatos","select * from e_cfg"); //seleccionamos la cfg
$contndo=mysql_fetch_array($ins);
echo $contndo["titulo"]; //mostramos el título
?>
<br><br>
<form action="encuesta.php?voto" method="post">
<? 
echo "<input type=radio name=opelegida value=1 class=radio>$contndo[1]<br>";
echo "<input type=radio name=opelegida value=2 class=radio>$contndo[2]<br>";
echo "<input type=radio name=opelegida value=3 class=radio>$contndo[3]<br>";
echo "<input type=radio name=opelegida value=4 class=radio>$contndo[4]<br>";
//mostramos las opciones
?>
<br>
<?
$ins=mysql_db_query("nombre_basedatos","select voto from e_datos");
$total=mysql_num_rows($ins);
//contamos los votos totales
?>
<center><input type="submit" value=" Votar "></center>
<br><br>
- <a href="encuesta.php">Resultados</a><br>
- Votos: <? echo $total; //mostramos los votos totales
?>
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




*********************************************************************************

Eso fue, espero hayas entendido los scripts.
Cualquier duda a http://cmh-ip.net/foro

                                                Escrito por z3r0_un0



.: 12 :.

*************************************************************************************
                         Despedida
*************************************************************************************

            Bueno, no queda más que decirles adiós y hasta el próximo número, ojalá
   hayan disfrutado de esta e-zine y hayan aprendido cosas nuevas. Esperamos poder 
   traer cosas más anvanzadas para la próxima, y disculpen si este número les
   puede parecer básico pero es el primero :P Y no olvides enviar tus comentarios y
   sugerencias a klan@cmh-ip.net

                             
          Atentamente: <Mh-1P kl4n

                    
                    :: 4n0th3r w4y t0 b3 ::
