Fulcrum Magazine #2                      11 de Febrero de 1996

                           Editorial

     Hoy por hoy, en estos d¡as que corren, con todo este bolu-
deo del Windows 95 y de los sistemas totalmente armados, vemos
que en este mundo que se viene, ya no va mas eso de vender ne-
gros en la plaza del pueblo. Ahora, en el mundo del electr¢n y
del chip la esclavitud no se mide por la libertad sino por la
imposici¢n tecnol¢gica. 
     Todo, hoy en d¡a, tiende a que cualquier boludo se ponga
al frente de una PC y se pierda por un laberinto de ventanas.
Nadie sabe nada, ni los vendedores de hard, no los profesiona-
les , ni los t‚cnicos especializados. El otro d¡a acompa¤‚ a un
amigo a cambiar un soft que le vino fallado en una impresora
que compr¢. Nos dirigimos al Service oficial del famoso fabri-
cante y cuando nos atendi¢ el INGENIERO de E***N, especialmente
preparado sobre el funcionamiento de impresoras a chorro de
tinta, sobre las cuales realiza el service, le explicamos el
problema y mientras nos copiaba nuevamente el soft, se me ocu-
rri¢ preguntarle como era que a partir de gotas de tinta forma-
ban por ejemplo un caracter. El tipo me miro como si fuera un
marciano y ante el publico que se encontraba en la sala espe-
rando su turno me respondi¢: 'Mira ac , ves, el tambor expulsa
gotas de tinta... y  mediante un control de servos se modifica
la posici¢n y listo'. Cuando me vio la cara que le puse se dio
cuenta de que se mand¢  cualquier verdura. Cuando nos retir ra-
mos, y ante una clara disconformidad por su respuesta t‚cnica
remato: ' sabes lo que pasa pibe, vos viste como es ac , si
algo no anda cambiamos la plaqueta y listo, esto es as¡'. Cual-
quiera, las chorros de tinta no funcionan hac¡ ni a palos, si-
milar que en un TV las gotas se cargan electricamente y se ex-
pulsan hacia el papel y mediante un campo magn‚tico que se a-
plica cuanto estas est n en el aire se las hace deflectar cam-
biando hac¡ su trayectoria y de esta forma se hace que formen
la impresi¢n. 
     El caso de todo esto es que se tiende a un conocimiento
nulo en la materia, ustedes pueden usar WINDOWS, y esta bien
pero no saben una nada de la PC. Pueden programar virus y eso
est  yoja, pero no pueden usar la PC como una herramienta. Para
que les sea realmente £til se tiene que tener una placa que te
permita interactuar con el medio exterior. Esta publicaci¢n
tiene ese sentido, el de poder sembrar conocimientos para el
desarrollo de estas aplicaciones. Hoy, en este n£mero de FUL-
CRUM MAGAZINE les dejo un ejemplo de una placa b sica para que
puedan ir viendo como es la cosa. Les aclaro que hice varias
placas que funcionaron al toque, pero esta en particular no la
implement‚ nunca haci que si la quieren hacer verifiquen bien
todo, igual no creo que ande mal, es muy b sica. A, para poder
ver el circuito se tienen que bajar el ORCAD que es el soft con
el que hice el plano y haci poder ver el FULC002.SCH (pueden
configurar el orcad con draft /c)
     No se dejen enga¤ar, la PC es una herramienta que puede
hacer cosas que ni siquiera so¤aron, una simple placa de I/O
puede sorprenderlos, lean FULCRUM MAGAZINE y conozcan, descu-
bran, y especialmente comprueben que la vieja XT, con el viejo
DOS y un par de placas puede mas que un Pentium con Windows...
 
and...will by happy!!!
                                                       [Biggs]








                     Fundamentos te¢ricos
                   "El bus, decodificaci¢n"


     Puede decirse que el bus est  conformado por tres seccio-
nes que son: bus de datos, bus de direcciones y bus de control.
Mediante el primero fluyen los datos de lectura y escritura.
Pero si todos los dispositivos usaran el bus de datos simult -
neamente existir¡a contenci¢n de datos, es decir que se mezcla-
r¡an no solo dando un resultado err¢neo sino que tambi‚n entra-
r¡an en cortocircuito todas las tarjetas que est‚n conectadas
al bus. Para subsanar este problema se ide¢ el bus de direccio-
nes en el cual se pone la direcci¢n de la tarjeta con la cual
se quiere hacer una operaci¢n de I/O y por un ciclo de bus, el
bus de datos ser  usado solamente para esa tarjeta. A su vez en
el bus de control se activan las se¤ales correspondientes que
me indican si la operaci¢n se est  realizando sobre un puerto
de I/O o sobre la memoria ( el bus de control tiene varios usos
que luego se describir n ).
     En resumen lo que ocurre es que el controlador de bus co-
loca la direcci¢n de la placa con la que desea trabajar, acti-
vandose tambi‚n las se¤ales del bus de ctrol. correspondientes,
y entonces el bus de datos solo puede ser usado por ese puerto.
     Cuando se dise¤a una placa, debe existir en esta un cir-
cuito capaz de censar el bus de direcciones y control para de-
terminar cuando est  presente en estos la direcci¢n con la que
fue seteada previamente dicho dispositivo. Este es llamado de-
codificador de direcciones y su forma mas general es implemen-
tarlo con dos 74LS138.
     Otro dato a tener en cuenta es que el bus de datos debe
estar aislado de la interfaz por medio de un buffer y este solo
ser  activado cuando el decodificador de direcciones env¡e a
este una se¤al indicando que la placa est  siendo direccionada.
     En la decodificaci¢n se incluyen las se¤ales A0-A9, para
poder determinar la direcci¢n, IOR-IOW para saber si se desea
realizar una operaci¢n de lectura o escritura y la l¡nea AEN
para saber si se est  haciendo una operaci¢n de DMA, en caso de
no estar activada se concluye que se trata de una operaci¢n con
un puerto.
     Pero la placa que vamos a direccionar no puede estar posi-
cionada en cualquier direcci¢n, as¡ que ac  les mando para que
se direcciones se la puede  programar; El micro (XT) puede di-
reccionar dentro de su mapa de memoria 2^20 posiciones de memo-
ria (1Mbyte) y dentro del mapa de puertos 2^16 (64Kbyte), sin
embargo la PC utiliza solamente 2^10 direcciones, es decir que
se pueden direccionar 1024 puertos distintos. En la figura ve-
mos el espacio de los puerto de I/O


          0000h Ä ÚÄÄÄÄÄÄÄÄÄÄÄÄ¿
                  ³    512     ³ usada en el sistema base
          01ffh Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄ´
          0200h Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄ´
                  ³    512     ³ en el slot de la PC
          03ffh Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄ´
          0400h Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄ´
                  ³            ³
                  ³            ³
                  ³   64512    ³ no usada en la PC
                  ³            ³
                  ³            ³
                  ³            ³
                  ³            ³
          ffffh Ä ÀÄÄÄÄÄÄÄÄÄÄÄÄÙ


     Pero del sector reservada a los puertos (0200h-03ffh) no
todo est  disponible ya que, por ejemplo el puerto de la impre-
sora LPTx tiene una direcci¢n fija que nunca var¡a y entonces
hay ciertas direcciones dentro de ese rango que no podemos
usar, ac  va una descripci¢n de lo que hay entre 0200h y 03ffh:


                Ä ÚÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
          0200h   ³°°°°°°1°°°°°°³ NO USADA
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          0201h   ³     1       ³ ADAPTADOR DE JUEGOS
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          0202h   ³°°°°118°°°°°°³ NO USADA
          0277h   ³°°°°°°°°°°°°°³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          0278h   ³      8      ³ SEGUNDO ADAPTADOR DE IMPRES.
          027fh   ³             ³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          0280h   ³°°°°120°°°°°°³ NO USADA
          02f7h   ³°°°°°°°°°°°°°³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´ 
          02f8h   ³     8       ³ SEGUNDO ADAPTADOR SERIE
          02ffh   ³             ³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          0300h   ³°°°°120°°°°°°³ NO USADA
          0377h   ³°°°°°°°°°°°°°³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          0378h   ³     8       ³ ADAPTADOR DE IMPRESORA
          037fh   ³             ³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          0380h   ³°°°°°°°°°°°°°³
                  ³°°°°°48°°°°°°³ NO USADA
          03afh   ³°°°°°°°°°°°°°³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          03b0h   ³             ³
                  ³     16      ³ ADAPTAD. MONOCR Y DE IMPRES.
          03bfh   ³             ³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          03c0h   ³°°°°°°°°°°°°°³
                  ³°°°°°16°°°°°°³ NO USADA
          03cfh   ³°°°°°°°°°°°°°³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          03d0h   ³             ³
                  ³     16      ³ AREA DE TARJETA CGA
          03dfh   ³             ³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          03e0h   ³°°°°°°°°°°°°°³
                  ³°°°°°16°°°°°°³ NO USADA
          03efh   ³°°°°°°°°°°°°°³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          03f0h   ³             ³
                  ³      8      ³ ADAPTADOR DEL DISCO DE 5¬
          03f7h   ³             ³
                Ä ÃÄÄÄÄÄÄÄÄÄÄÄÄÄ´
          03f8h   ³             ³
                  ³      8      ³ ADAPTADOR SERIAL 
          03ffh   ³             ³
                Ä ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
                                        
                              
     Como vemos la tarjeta de video, controladora y multi-ide
tiene direcciones fijas, por lo tanto la placa que nosotros
dise¤emos debe quedar configurada en alguna o en varias de las
 reas resaltadas, lo cual no quita que estas est‚n usadas por
otras tarjetas como ser modem, scanner,etc. Por esto se colocan
unos jumpers en la placa, actuando estos sobre el decodificador
de direcciones para cambiar la posici¢n de la placa.
     Tambi‚n se puede implementar el decodificador de direccio-
nes con una GAL 22v10. Si conocen a alguien que las programe la
pueden implementar. Ustedes le alcanzan la programaci¢n y lis-
to, les queda todo en un solo integrado y con m s potenciales
direcciones y todo!!!
     Para los que no saben que es una GAL les cuento que son un
mont¢n de compuertas que mediante un array que se programa 
podes formar la funci¢n que quieras y adentro de una GAL podes
poner funciones que involucren decenas y hasta cientos de com-
puertas y todo eso en un integrado.

     Una forma m s cheta y profesional de hacer una placa con
puertos es usando un 8255 PPI (interfaz de puertos progra-
mables) que es un integrado que me permite tener 3 puertos de 8
bits cada uno y programarlos como se me cante, es decir como
entrada o salida y en medio de una operaci¢n puedo cambiarle la
programaci¢n y el puerto que funcionaba como entrada pasa a ser
de salida. Pero si vamos a usar puertos fijos es al pedo, si lo
quieren p¡danmelo y en la pr¢xima edici¢n se los mando.
     La decodificaci¢n de memoria es muy similar a la de los
puertos, la diferencia principal es que la se¤al AEN no se in-
cluye en este proceso por razones obias. Todo es igual asi que
no lo voy a decir de nuevo, la IOR y la IOW son ahora reempla-
zadas por MEMR y MEMW respectivamente pero cumplen la misma    
funci¢n. 


EL EJEMPLO

     Dicho esto y, dado que ya explicamos la base de una placa
de I/O vamos a ver el ejemplito, para lo cual ser¡a joya si
imprimen el plano y lo miran mientras leen estas l¡neas.
Empezando por el decodificador vemos que colocando UN jumper en
alguna de las 7 posibles posiciones obtendremos una direcci¢n
distinta de la placa. Esto se hace por si justo la direcci¢n
entra en conflicto con otro perif‚rico y bueno, entonces nos
movemos a una direcci¢n libre donde no jodamos a nadie. Si mi-
ran en la tabla les indico en que direcci¢n quedan posicionados
los tres puertos seg£n la posici¢n del jumper. De estos puertos
podemos decir que tenemos 1 puerto de salida (controlado por la
salida Y2 del decoder) con salida a relay, es decir que cada
bit puede manejar algo asi como 700W, pero por seguridad yo les
aconsejo que se fijen bien cuanto se aguanta el relay. Esto les
permite manejar luces, motores y cualquier artefacto de poten-
cia. Si se les ocurre poner censores o si bueno, quieren ingre-
sar datos a la PC tienen un puerto de entrada (Y0 del decoder)
y un oscilador trucho-programable (Y1). Echo la presentaci¢n de
los tres puertos sigamos viendo el decoder, este es activo en
bajo, es decir cuando se activa aparece un cero en la salida
correspondiente. Est  implementado con dos 74ls138 que son los
IC1 y 2. 
     Vamos a ver primero el puerto de entrada. Se encuentra con
un buffer independiente (IC13) al de los puertos de salida por-
que sino existir¡a contenci¢n de datos. Vemos que solo cuando
el decodificador detecta la direcci¢n correspondiente y cuando
adem s se detecta que se quiere leer el puerto, solo en esa
circunstancia se pone a cero la patita G sacando al buffer de
alta impedancia. Por tratarse de un puerto de entrada, cuando
se detecta que se est  accediendo al puerto, en ese lapso de
tiempo se detiene el clock del registro de dicho puerto (IC6)
para que este no modifique el valor de sus salidas, es tan solo
una     cuesti¢n de prolijidad. En todo el tiempo restante, es
decir, cuando no se accede al puerto este recibe los pulsos de
clock censando asi las entradas. Los operacionales que se en-
cuentran a la entrada del registro (IC15-16) est n en configu-
raci¢n buffer y los mand‚ para poder ingresar tensiones mas
altas y para independizar la salida del registro por si alguno
se manda alguna cagada. Los tres registros tienen una pata de
reset la cual se conect¢ a un circuito  RC. Dicho circuito lo-
gra una exponencial creciente que resetea los puertos al pren-
derse el equipo.
     El puerto de salida es en esencia similar. El buffer 
(IC3) se activa cuando se direcciona cualquiera de los dos   
puertos de salida, pero dependiendo de cual se selecciona se le
dar  clock a uno u a otro registro (IC7). En este sentido el
funcionamiento es opuesto al del puerto de entrada, cuando se
detecta que se est  direccionando el puerto, ah¡ se le da clock
al registro para que pueda cargar el dato que le est  mandando
el micro y cuando no se lo direcciona no se aplican dichos pul-
sos ya que esto significar¡a que cargase datos no v lidos. Como
queremos controlar potencia con los dichosos 8 bits de salida,
los pasamos por operacionales (IC11-12) en configuraci¢n buffer
para que ganen un poco de corriente ya que con lo que nos en-
trega el registro no llegamos a exitar los relay.
     El oscilador programable es una truchada, digo es un ejem-
plo nada mas, si lo tengo que hacer bien lo hago con un 8253
TIMER, pero como es un flor de IC me pareci¢ un poco zarpado
ponerlo en el segundo n£mero de la revista, asi que implement‚ 
uno para algunas frecuencias. Las idea es que tengo un contador
(IC18) que cuenta y cuando llega a un valor determinado, que en
este caso es Eh se resetea cargando el valor que se encuentra
en las entradas preseteables. Si dicho valor es, por ejemplo Ah
cuenta una cantidad de veces hasta que llega a Eh y se resetea
a Ah nuevamente, pero se modifico este valor (Ah) modifico el
tiempo que se tarda en llegar a dicho pulso de reset modifican-
do de esta forma la frecuencia. Se aclara que el contador deja
de contar cuando se direcciona el puerto af¡n con este mediante
la pata de control G. Para que la salida sea con un ciclo de
actividad de un 50%, el pulso de reset ataca a un flip-flop JK
(IC 17)haciendo que para cualquier frecuencia seleccionada se
obtenga dicho ciclo de actividad. Entonces vemos que todo de-
pende del valor que coloque en las entradas preseteables  y
dicho valor es el que cargo en el registro del timer. Dicho
registro (IC8) controla con sus 4 bits mas significativos las
entradas preseteables del contador mientras que los otros 4
bits no se usan para nada. 
     Este contador recibe un clock de 1.79Mhz a la cual llama-
remos frecuencia F0 y el valor de carga del contador en decimal
lo llamamos Count. La frecuencia que se obtiene a la salida es 

           Fsal=F0/((14-Count)*2)

     Count no puede adoptar los valores 14 y 15 porque caer¡a
en un estado de indeterminaci¢n.
     Solo nos resta analizar el divisor de frecuencia (IC9).
Como la frecuencia que obtenemos a partir del bus es muy alta
para ser aplicada a los integrados, la pasamos por un divisor
que en este caso, tomamos la salida que divide por 8 y asi ob-
tenemos un clock mas bajo que puede ser aplicado sin problemas
a los IC.
     Bueno creo que eso fue todo respecto a la placa solo me
resta darle la lista de componentes:

     IC1................74ls138
     IC2................74ls138
     IC3................74ls245
     IC4................74ls03
     IC5................74ls08
     IC6................74ls273
     IC7................74ls273
     IC8................74ls273
     IC9................74ls93
     IC10...............74ls32
     IC11...............lf444
     IC12...............lf444
     IC13...............74ls245
     IC14...............74ls32
     IC15...............lf444
     IC16...............lf444
     IC17...............74ls111
     IC18...............74ls190
     R..................10Kê*¬W
     C..................2,2æf*16v


     Esto es todo por ahora, espero poder haberles aclarado los
dudas y si no, cualquier cosa nos vemos en el  rea de mensajes
de, RAW POWER - 238/2144 -.
     A, una £ltima l¡nea, si no saben de electr¢nica digital,
compren un libro, es f cil, muy f cil, no se dejen impresionar,
no pueden dejar de tener conocimientos en esta  rea. 

Nos vemos en la pr¢xima edici¢n de FULCRUM MAGAZINE!!!

                                                         by   
                                                       [Biggs]


