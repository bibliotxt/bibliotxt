<-[ 1x14 ]------------------------------------------------------------------>
<-[ Denial Of Service (DoS) ]----------------------------------------------->
<-[ by CyBeRdEe ]------------------------------------Mendoza Underground-01->
<---------------------------[mzaunder@yahoo.com]---------------------------->

Aca viene el cartelito de SIEMPRE

 ###########################################################################
 #                                                                         #
 #   Toda  la informacion contenida en este texto, ha sido realizada con   #
 #   fines  educativos y/o de enseñanza. O sea que el Autor, ni el grupo,  #
 #   ni  la revista, ni nadie se responsabiliza por las acciones tomadas   #
 #   por  los lectores.                                                    #
 #                                                                         #
 ###########################################################################

 Eso  de ahi arriba significa que si hacen algo que atraiga a los hombrecitos
 de negro, nosotros no nos hacemos responsables.

 Ahora empiezo con la explicacion.

 Los  ataques  conocidos  como  Denial of Service (DoS) son algo asi como los
 ataques  terroristas  del  momento. Ademas son muy faciles de realizar, pero
 hay  que  elegir  bien  el servidor al que atacaremos, ya que nuestro ataque
 pasara  por muchos otros servers antes de llegar a destino. Asi que se deben
 analizar  cada uno de los servers por donde pasara el ataque. Para poder ver
 por  donde  pasara nuestro ataque, solo deben ejecutar el comando route. Que
 es  un programa (tambien incluido en Guindouz) que nos permite ver por donde
 pasa  la  info  enviada  antes  de  llegar  a  destino,  la sintaxis es asi:
 route  NombreDeLaVictima.com.af          Luego  de esto apareceran todos los
 host  por  los  que  pasa  la  info  hasta llegar a NombreDeLaVictima.com.af

 Este tipo de ataque consiste en descomponer servicios de un host sin permiso
 (obvio, sino no seria un ataque y menos uno terrorista). Protegerse de estos
 ataques  es  muy  dificil ya que los sistemas UNIX asumen que todo esta bien
 mientras se desarrolla el ataque.

 Las  razones por las que alguien puede estrellar un sistema son muchas y las
 mas comunes deben de ser:

 1)- Ganar Acceso ROOT
 2)- Venganza
 3)- Intereses Politicos
 4)- Intereses Economicos
 5)- Para impresionar a sus amigos (tipico de los LaMerZ)
 6)- Por que se le dio las re-mil y una gana de hacerlo
 7)- Por que sintio un extra¤o deseo de realizarlo

  Estas dos ultimas son las mas comunes entre los hackers.

 Es facil ganar acceso root a un sistema usando el DoS ya que este abre otros
 agujeros. Como pasaba con versiones antiguas de X-Lock.
 Bajo  un ataque se puede restringir el acceso a ciertas personas al servidor
 por lo tanto evitar que realizen su trabajo.

 OBJETIVOS BASICOS DE UN ATAQUE
 ==============================

  Espacio swap
 ~~~~~~~~~~~~~~
 Los  sistemas  tienen  varios (cientos) megabytes reservados de espacio swap
 para  guardar  informacion  por un corto plazo, es algo asi como una memoria
 mas,  pero  con la diferencia que esta esta en el disco rigido. Este espacio
 no  puede  ser  usado  por  ninguna causa rigurosamente. Por lo tanto un DoS
 podria basarce en llenar el swap.

  Tablas del Kernel
 ~~~~~~~~~~~~~~~~~~~
 Es trivial sobrecargar las tablas del kernel para ocasionar serios problemas
 al  sistema. Los sistemas que escriben a traves de caches y buffers pequeños
 son especialmente sensitivos.
 
 Otro  objetivo  susceptible  es  el  kernel memory allocation. Todo Kernel o
 cerebro tiene un limite para la memoria en su mapa de memoria, si el sistema
 alcanza este limite el cerebro no puede colocar mas memoria y el sistema debe
 ser  reboteado.  La  memorial  del kernel no solo es usada para procesos del
 CPU, monitores y asi, pero tambien para procesos ordinarios lo que significa
 que cualquier sistema puede ser estrellado con un buen algoritmo lo bastante
 rapido.

  RAM
 ~~~~~
 Un  DoS  que  ocupe  mucha  memoria RAM puede ocasionar muchos problemas. Se
 puede  atacar  a  un servicio NFS, ya que este utiliza mucha memoria y cache
 por  lo  que  cualquier  cliente  de  NFS puede ocasionar grandes problemas,
 ademas un cliente de NFS puede ser escrito por tu mismo.

  Discos
 ~~~~~~~~
 Otro ataque clasico es llenar el disco duro


  DoS Internos
  ,.·^·.,.·^·.,
  
  Para  realizar estos DoS debes tener acceso al sistema, puede ser por medio
  de telnet, osea que posees una cuenta shell.


  Uso malicioso de fork()
 ~~~~~~~~~~~~~~~~~~~~~~~~~
 Si  ejecutas  este  codigo el resultado sera trabar la maquina en casi todos
 los host en lo que lo ejecutes.

 Lo  unico  que  debes hacer es copiar el codigo y luego pegalo en un archivo
 ej: DoS.c
 Luego ejecuta g++ -o DoS DoS.c  Esto es para compilarlo
 y luego escribe DoS para ejecutarlo.

<-- Copia desde la linea que sigue -->
#include <sys/types.h>
#include <unistd.h>
#include <iostream.h>

main()
{
int x;
while(x=0;x<1000000;x++)
{
system("uptime");
fork();
}
}
<-copia hasta la linea anterior -->

 Para  generar  un ataque mas sangriento puedes cambiar el comando uptime por
 sync.

  Llenar el Disco
 ~~~~~~~~~~~~~~~~~
 Si  puedes usar el directorio temporal solo usa un script como el siguiente:
 while : ;
 mkdir .xxx
 cd .xxx
 done

  Crear archivos dificiles de remover
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Todos  los  archivos  pueden  ser  borrados pero aqui hay algunos dificiles:
 ( $ simboliza el prompt, ^C es igual a CTRL + C. )

1.-
$ cat > -xxx
^C
$ ls
-xxx
$ rm -xxx
rm: illegal option -- x
rm: illegal option -- x
rm: illegal option -- x
usage: rm [-fiRr] file ...
$

2.-
$ touch xxx!
$ rm xxx!
rm: remove xxx! (yes/no)? y
$ touch xxxxxxxxx!
$ rm xxxxxxxxx!
bash: !": event not found
$

  ATAQUES REMOTOS
 ,.·^·.,.·^·.,.·^·

  Finger
 ~~~~~~~~
 La  mayoria  de  los  servicios  fingerd  dejan redireccionar a otro server.
 Ejemplo:

 $finger @sistema.dos.com@sistema.uno.com

 Aqui  finger  tendra  que  ir  a  traves  del  sistema.un.com  y  despues al
 sistema.dos.com.  Este  metodo  puede ser usado para ocultarte, pero tambien
 puedes realizar un truco muy sucio. Ejemplo:

 $ finger  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Victima.com

  Aqui  lo  que  hace  el  finger es llamar a Victima.com tantas veces como @
  hallamos  puesto,  esto  ocasiona  falta  de memoria, uso de mucho ancho de
  banda  y  disco duro con menos espacio por todos los procesos que tiene que
  crear por que a un pobre e inocente joven que estaba buscando inocentemente
  informacion  sobre un amiguo, se le quedo trabada la tecla alt y 2 al mismo
  tiempo  y  paso  lo  que  paso  (no  creo  que  sea  una  muy buena escusa)

  Para  solucionar  esto  desactiva  el  servicio  finger o bien instala otro
  programa que no soporte redireccionamiento.


  Broadcast Storms
 ~~~~~~~~~~~~~~~~~~
 El DoS consiste en enviar muchos paquetes a todos los host con una direccion
 de  destino inexistente, cada uno de los host tratara de mandar los paquetes
 pero estos rebotaran por toda la red por un largo rato.

 Para  realizar  este  ataque  se  puede  utilizar  Ping,  Finger  y SendMail


  Usando telnet
 ~~~~~~~~~~~~~~~
 Examina este script:

 while : ; do
 telnet sistema.que.atacamos.com &
 done

 En  este  script,  se  abren  muchas  sesiones de telnet en el puerto 23. El
 problema  es  que  algunos  firewalls se creen que es loop y se apagan hasta
 que  el  admin  mate  al  proceso. Este ataque es mucho menor que el finger.


  Email Bombing
 ~~~~~~~~~~~~~~~
 Este  ataque  consiste en enviar muchos mails identicos a un host. El efecto
 es  un  consumo  de  un  alto ancho de banda y ademas se la persona a la que
 atacaste tiene que bajar los mail (y ademas no leyo mi articulo de como leer
 los  mails  sin  bajarlos)  estara  un  buen  rato  bajando  los mails.

 Otro  tipo  de  ataque  es  mandar un mail desde una direccion inexistente a
 otra  que  tampoco  exista. Ej: Envia un mail de 1 mb a noexiste@victima.com
 desde  estasique@noexiste.com.  Entonces cuando el mail llegue a victima.com
 y vea  que  no  hay  ningun  usuario  con  el nombre noexiste, este servidor
 reenviara  el  mail  a noexiste.com y el tama¤o se duplicara a 2 mb y cuando
 noexiste.com  vea  que  no hay ningun usuario llamado estasique re-reenviara
 el  mail  a  victima.com  y  ya seran 3 mb. Ni les cuento el desastre que se
 ocasionaria con un mail de unos 5 mb.

 Otra  opcion  seria  el  de  usar  los  remailers. ej: Creamos una cuenta en
 geocities,  y  le  decimos  que  queremos  que todos los mails que lleguen a
 esa  direccion  los  mande  a  segunda@bigfoot.com.  Y a esta le decimos que
 los  envie  a  Tercera@iname.com.  Pero  a  tercera@iname.com le decimos que
 los  mande  a  la cuenta de Geocities. Luego mandamos uno mbs a la cuenta de
 geocities.  Cuando  llegue,  esta los mandara a segunda@bigfoot.com y esta a
 tercera@iname.com  y  esta  de  nuevo a geocities. Esto es muy desastrozo si
 enviamos  unos  5  mbs.  Ahora espera a que caigan a tu casa los hombrecitos
 de negro y preparate a que te quiten todo tu equipo.


  SYN FLOODING
 ~~~~~~~~~~~~~~
 Este  es el mas famoso de los ataques. Phrack y 2600 han publicado articulos
 sobre este tema y codigos para realizarlo.

 El  DoS  se  basa  en  un  saludo  incompleto entre dos host. Le enviamos un
 paquete  SYN  pero  nop respondemos al paquete ACK, ocasionando que el stack
 TCP/IP  quede  a la espera de la respuesta antes de cerrar la conexion, pero
 si  creamos  muchas  peticiones  y  no respondemos a ninguna, el host estara
 inactivo  por  mucho  tiempo  ocasionando la lentitud de los demas servicios

  Ping Flooding
 ~~~~~~~~~~~~~~
 Este metodo tiene gran eficacia para colapsar sistemas.

 Con  UNIX podriamos intentar: ping -s host para mandar paquetes de 64 bytes.

 Si  posees  Win95,  has  click  en  el  menu  inicio, elige ejecutar y luego
 escribe:  PING  -T  -L  256  victima.com  y  realiza  esto  unas  15 veces.

  Uso del FTP Anonimo
 ~~~~~~~~~~~~~~~~~~~~~
 Si  un  servidor  FTP  anonimo  tiene  un area que puede ser escrita, puedes
 llenarle el disco rigido.

  Crashing usando Ping
 ~~~~~~~~~~~~~~~~~~~~~~
 Para clavar a una maquina con Windows 95 ejecuta:
 Ping -L 65450 victima.com

 Y la maquina se detendra o se re-iniciara.

  DUMPING CORE
 ==============

  Uso malicioso de Netscape
  ~~~~~~~~~~~~~~~~~~~~~~~~~
 Bajo  Netscape  1.1N  este  link  resultara en un fault de segmentacion y el
 sistema arrojara el core.

<a name="http://xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.
xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxxxxx.xxx.xxx.
xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxxxxx.xxx.xxx.xxx.xxx.xxx.
xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxxxxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.xxx.
xxx.xxx.xxx.xxx.xxxxxx.xxx.xxx.xxx.xxx.xxx...>


 Gracias  a  la  Revista  RareGazz  un  E-zine muy bueno. Ellos publicaron un
 articulo que me ense¤o todo esto.

 Espero que este articulo les sirva de algo.
 Y RECUERDEN, el gran hermano esta mirando asi que cuidado.

 Si  realizas  alguno  de  estos  DoS,  no  te  asombres  cuando  caigan los
 hombrecitos de negro a tu casa y te quieran llevar con ellos.
 Solo  recuerda  que  varios  de  estos  DoS  son ilegales (varios, NO todos)

 De  nuevo  digo  que  no  me  responsabilizo  por  lo  que realizen con esta
 informacion.  Solo  fue  escrito  con  fines  educativos  y  o de ense¤anza.
 Y a  parte  hay  LIBERTAD  de  EXPRESION,  asi  que  hablo,  escribo, leo, y
 enseño  lo  que  se  me  antoje,  Y  QUE!.  Que venga alguien a decirme algo

 Ademas a que le voy a temer. JEJE.

 

                            -----------------------
                                       by
                                    CyBeRdEe
                              Mendoza Underground
                             MENDOZA SECURITY TEAM
                            -----------------------



 Y QUE!




