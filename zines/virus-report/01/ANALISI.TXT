Analisis de virus

     por Fernando Bonsembiante


Michel ngelo, uno de los virus m s famosos de los £ltimos
tiempos.

     En 1992 los virus tuvieron una gran publicidad
gracias a que se activaba el Michelangelo el d¡a 6 de
marzo. Probablemente la causa de tanto interes repentino
de la prensa fue que era muy destructivo y estaba
diseminado en gran cantidad de m quinas. El d¡a fat¡dico
se reportaron muchos casos de informaci¢n perdida, pero
mucha m s gente ni siquiera prendi¢ su m quina por miedo
a lo que pudiera pasar. Las p‚rdidas que origin¢ este
virus, por lo tanto, no solo deben contarse por la
informaci¢n destruida, sino por el lucro cesante causado
por tantas m quinas apagadas. Quien sabe que hubiera sido
peor, si nadie hubiese estado advertido del virus quiz 
hubiesen habido muchas m s p‚rdidas de informaci¢n, pero
de esta forma se perdi¢ un d¡a de trabajo para mucha
gente. Seguramente si la gente supiera m s sobre virus no
habr¡a estos problemas. Se dijeron muchas cosas absurdas
de este virus, por ejemplo que se contagiaba por modem,
cosa rid¡cula, ya que la £nica forma de contagiar un
virus es en el momento de ejecuci¢n de un programa (o en
el booteo de un disco, que tambien es la ejecuci¢n de un
programa). Para transmitir un virus por modem hay que
transmitir un programa infectado y el que lo recibe debe
ejecutarlo. En el caso de un virus de boot esto es mucho
m s complicado ya que se deber¡a enviar una imagen de
disco y reconstruirla del otro lado, y bootear con ese
disco.
     Michel ngelo es un virus de boot sector, que lleva
ese nombre porque se activa en la fecha de cumplea¤os del
genial artista italiano. Se cree que se origin¢ en Suecia
o en Holanda, o por lo menos fue aislado all¡. Est 
basado en el virus Stoned, pero a diferencia de este
£ltimo, que es inofensivo, Michel ngelo es altamente
destructivo cuando se activa. El virus queda residente en
memoria cuando se intenta bootear con un diskette
infectado, y aunque el disco no contenga el sistema
operativo puede copiarse a un disco r¡gido. Se instala
residente dentro de los 640k de memoria del DOS, y ocupa
2k. El DOS va a reportar 2k menos de memoria disponible
si el virus est  activo. El virus se instala en el boot
de los diskettes, y copia el boot original en uno de los
sectores finales del directorio. En los discos r¡gidos se
instala en la tabla de particiones y copia la tabla
original en una parte del disco que normalmente no se
usa. Cuando el virus est  activo en memoria infecta cada
disco al que se acceda para lectura o escritura. El d¡a 6
de marzo (de cualquier a¤o) se activa su rutina de
destrucci¢n. Esta rutina toma un  rea de memoria y copia
su contenido secuencialmente en el disco r¡gido, con lo
cual se pierde toda la informaci¢n, e incluso el DOS no
reconoce m s el disco ya que sobreescribe la tabla de
particiones. La mejor forma de detectarlo es usando el
Scan, con la precauci¢n de que sea la versi¢n m s nueva
que se pueda encontrar. Al momento de escribir esto, la
£ltima versi¢n es la 100. Para limpiarlo podemos usar el
Clean o el Mdisk.

     Ping Pong, un virus tradicional

     El virus Ping Pong es el primero en hacer explosi¢n
en Argentina. Fue descubierto en marzo de 1988, y en poco
tiempo estuvo en nuestro pa¡s, donde se convirti¢
r pidamente en epidemia. La falta de conocimiento sobre
los virus lo ayud¢ a que se diseminara por todos lados, y
fuera incontrolable en un principio. En centros
universitarios como la Facultad de Ciencias Exactas de la
UBA o la Facultad de Inform tica de la Universidad de
Mor¢n era dif¡cil encontrar un disco sin infectar. El
desconocimiento del tema llev¢ a que pasara bastante
tiempo hasta que se empezaran a tomar medidas. Solo
despues de algunos meses medios como Compu Magazine
empezaron a publicar formas de desinfectar los discos, y
se aplicaron pol¡ticas de seguridad en las universidades.
Lo que siempre se ve como positivo de esto fue que la
gente empez¢ a conocer el DOS m s profundamente, por
ejemplo, a conocer el boot sector, para que serv¡a y que
era, ya que se usaban las m quinas pero nadie sab¡a como
funcionaban realmente. Demostr¢ que la ignorancia es el
peor enemigo. Por eso mismo, pensamos que la mejor forma
de combatirlos y evitar que se repita una epidemia de
esas proporciones es conocerlos lo m s posible. Otro
efecto que caus¢ en la gente es la confusi¢n entre el
s¡ntoma y el virus en si. Como ten¡a un s¡ntoma muy
evidente, la famosa pelotita que rebota, pensaron que
todos los virus deb¡an ser tan visibles. Los siguientes
fueron m s ocultos, y se limitaban a reproducirse o
destruir sin avisar al usuario.
     El Ping Pong original no pod¡a infectar discos
r¡gidos, pero la versi¢n que se populariz¢ aqu¡ fue la B,
que pod¡a hacerlo. Se cre¢ una variante en Argentina,
probablemente fue la primera variante de virus originada
en el pa¡s, el Ping Pong C, que no mostraba la pelotita
que rebota en la pantalla. Este virus est  extinto en
este momento ya que s¢lo pod¡a funcionar en m quinas con
procesador 8088 o 8086, porque ejecutaba una instrucci¢n
que es indocumentada en estos e ilegal en los siguientes.

     Virus Piazzolla


     Caracter¡sticas

     Piazzolla es un virus que infecta todos los archivos
.COM, ejecutados despues de que est‚ activo en memoria,
excepto el command.com. Su s¡ntoma m s notable es que el
archivo infectado crece en 874 bytes, y que se instala
como un residente de 1,136 bytes. Tambien toma la
interrupci¢n 21h. Una vez que est  residente, infecta
todos los archivos .com que se ejecuten. No cambia la
fecha y hora del archivo. En el programa infectado se
pueden ver los siguientes textos:

        "Piazzolla"
        "COMMANDCOM"
        "Piazzoll.$$$"

     No hace nada, excepto reproducirse.

     Funcionamiento

     En el programa infectado por Piazzolla, primero est 
el c¢digo del virus, y a continuaci¢n el programa
original. Cuando el DOS carga el programa en la memoria,
deja el virus primero y el programa original a
continuaci¢n. Lo que empieza a ejecutarse es el c¢digo
del virus, ya que la ejecuci¢n de un .com empieza en el
principio del archivo, cargado por el DOS en la posici¢n
de memoria CS:0100h
     Es interesante que veamos como funciona en detalle,
ya que es un virus sencillo de archivos .COM, y no hace
uso de ningun truco extra¤o del sistema operativo,
funciona como si fuese un residente com£n y corriente.
     Instala una rutina en la interrupci¢n 21h (en la
funci¢n DDh) que restaura el programa cargado a
continuaci¢n del virus y le da control a este. Cuando se
carga un programa infectado, lo primero que hace es
llamar a esa funci¢n, (poniendo en ah 0DDh y llamando a
la interrupci¢n 21h). Si el virus ya est  activo en
memoria, esta rutina copia el programa original desde la
zona de memoria en que lo carg¢ el DOS, (a continuaci¢n
del virus) a donde deber¡a estar normalmente, en
CS:0100h. Obviamente, el CS es el CS del programa cargado
y no el de la rutina residente del virus, que es
distinto. Despues de restaurar el programa, salta a la
direcci¢n de origen del mismo (CS:0100h) con lo que lo
ejecuta. De esta forma no se nota nada raro al ejecutar
un programa infectado.
     En el caso de que el virus no est‚ ya presente en la
memoria, instala una rutina propia para la interrupci¢n
21h, y reserva memoria para dejar su c¢digo completo
residente. Es importante este detalle, ya que para
infectar un programa copia el c¢digo del virus que est 
en memoria antes del programa original. Si no hiciera
esto deber¡a sacar el c¢digo del virus del disco, es
f cil ver que esta estrategia es mejor. Por esta causa
los virus suelen ocupar m s lugar en memoria que en
disco, o por lo menos el mismo lugar, ya que deben
guardar todo su c¢digo en memoria y no solo la parte que
van a usar. Cuando instal¢ esa rutina, llama a la
interrupci¢n 21h servicio 4B00h para ejecutar el programa
original desde disco. La forma en que lo hace es
interesante, ya que busca el nombre con el que fue
llamado el programa en el environment del mismo. En esa
 rea de memoria, apuntada por el byte que est  en el
offset 2Ch del Program Segment Prefix (PSP), est n todas
las variables del environment del programa (path,
comspec, etc.) A continuaci¢n de esas variables est  el
nombre completo con el que fue llamado el programa. Est 
despu‚s del primer par de bytes con valor 0 (o sea, un
byte 0 del final de la cadena ASCIIZ (ASCII terminado en
cero) de la £ltima variable de environment, y un byte 0
que se¤ala el final del environment) El c¢digo que hace
eso es as¡:

  mov  cx,0FFFFh
  xor  ax,ax
  xor  di,di
  mov  es,ds:env_seg   ; previamente se hizo env_seg equ
2Ch

busca:
  repne  scasb         ; Repetir mientras zf=0 y cx>0
                       ; Scan es:[di] hasta que sea = ax
(0)
  cmp  byte ptr es:[di],0
  je   encontro        ; si lo encontr¢
  scasb                ; Scan es:[di] hasta que sea = ax
(0)
  jnz  busca           ; repetir hasta que lo encuentre

encontro:
  mov  dx,di
  add  dx,3           ; dx = di + 3 (el primer word es el
nro
                      ; de strings despues del
environment)
  push  es
  pop  ds             ; ds = es
  mov  bx,13Ah
  mov  ax,4B00h
  push  cs          ; llama a la int 21h
  pop  es           ; 4B00h load and execute
  pushf             ; ejecuta el programa huesped desde
disco
                             ; En int21h est  la
direcci¢n de
  call  dword ptr cs:int21h  ; la interrupci¢n 21h
original

  mov  ah,4Dh     ; obtiene el codigo de retorno del
programa
  int  21h        ; para devolverlo despues de terminar

  mov  dx,cs:tamres    ; en tamres tiene el tama¤o del
c¢digo
  mov  ah,31h
  int  21h             ; termina y queda residente

        N¢tese que no hace una llamada a la interrupci¢n
21h, sino que usa la instrucci¢n call, como si fuese una
subrutina m s, pasando por encima de la interrupci¢n
instalada por el programa. Esto es una t‚cnica muy usada
por los virus cuando quieren ejecutar una interrupci¢n
modificada por ellos mismos pero como si no estuviese
modificada.
     La interrupci¢n 21h instalada por el virus
b sicamente tiene dos funciones. Cuando es llamada
verifica si ah es 0DDh o ax es 4B00h. Si es la primera,
realiza la rutina descrita anteriormente para restaurar
el programa original. Si es la segunda, (servicio de
cargar y ejecutar un programa) infecta al archivo. Veamos
como lo hace: Crea un stack temporario, porque va a usar
servicios de la interrupci¢n 21h, y como es un programa
residente esto causa problemas en el stack. Luego
convierte el nombre del programa que se quiso ejecutar a
may£sculas (el nombre est  en DS:DX) y verifica si la
extensi¢n es .COM. Como el programa puede ser un .EXE
renombrado a .COM, el virus verifica si tiene el
identificador interno de los .EXE, en los cuales los dos
primeros bytes del archivo son los caracteres ASCII 'MZ'.
Si el archivo es el command.com, tampoco lo infecta. Para
saber si est  previamente infectado verifica que el
cuarto y quinto byte sean 'ia'. A partir del tercer byte
de todos los programas infectados est  el string
'Piazzolla', aunque el virus utiliza solamente los bytes
'ia' como identificador, no el nombre completo. Si no es
un .COM real, es el command.com o ya est  infectado,
sigue con la interrupci¢n normal, con un jmp dword ptr
cs:int21h, ya que no debe infectar esos archivos.

     Infecci¢n

     La rutina de infecci¢n crea un archivo temporario
llamado PIAZZOLL.$$$ donde el copia c¢digo del virus
residente en la memoria, y a continuaci¢n el programa a
infectar, ley‚ndolo del disco. De esta forma genera lo
que luego ser  el programa infectado. Para hacerlo
eficientemente crea un buffer de 20k reservando memoria
con el servicio 48h de la interrupci¢n 21h. Cuando ya
gener¢ el programa infectado, utiliza una estrategia algo
extra¤a, en vez de borrar el programa original y
renombrar el temporario, borra el original, copia
nuevamente el temporario con el nombre del original, y
borra el temporario. Esto parece una p‚rdida de tiempo,
pero quiz  es un truco para enga¤ar a alg£n antivirus.
Cuando termina la infecci¢n, cambia la hora y fecha del
archivo recien infectado para que sea igual al original.
Mientras est  haciendo la copia redirecciona
temporariamente la interrupci¢n 24h (manejo de errores
cr¡ticos del DOS) para que siempre devuelva 0, o sea,
para que el DOS no note posibles errores mientras se est 
infectando, como ser que no hay lugar en el disco, etc.
Si el virus detecta alg£n error en algun momento de la
infecci¢n, o sea, si la interrupci¢n 21h vuelve con el
flag de carry encendido, aborta toda la operaci¢n.
