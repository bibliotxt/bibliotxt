HMZ_002.2_3
                                         .-.-----------------------.-.
  PGP Tutorial                           | | Kind...........Misc   | |
  ''''''''''''                           | | Autor..........Hiween | |
                                         | |-                     -| |
                                         | | Release               | |
                                         | | Where??.......HMZ 002 | |
                                         |_| When??.......10/12/99 |_|
                                         '-'-----------------------'-'

¿Qué es PGP?
------------
 PGP (Pretty Good Privacy) es un programa de encriptación de datos
primariamente. Actualmente es el mejor disponible para el público en
general, de hecho, es tan fuerte, que en algunos paises está prohibido.
(Ja, prohibido, ¿que es eso?). 

 Hoy en día es necesario asegurar que nadie más lea lo que está desti-
nado a una persona. Leer un mail enviado a alguien, para el administra-
dor del sistema de mail, es tan fácil como para nosotros leer un archi-
vo en nuestra PC. Y es hecho sabido que lo hacen. Mandar un mail sin
encriptar, es como mandar una carta sin sobre. Cuando la información
que enviamos tiene cierta importancia, es necesario encriptarla.
 El PGP soporta tres algoritmos de encriptación: El CAST (recomendado),
el TripleDES, y el IDEA. Las llaves pueden ser Diffie-Hellman o RSA
(aunque las RSA no están en todas las versiones, porque a partir de la
5 se usan las Diffie-Hellman) 
 El PGP es freeware, o sea que está disponible gratis para todo el que
quiera bajarlo (tal como debería ser todo el soft). El creador de PGP
es Phil Zimmermann.
 
¿Cómo Funciona?
---------------
El PGP esta basado en la tecnología de encriptación por llave pública.
Básicamente, lo que esto quiere decir es lo siguiente. Cada individuo
tiene un par de llaves (una llave pública y una privada). Las llaves
públicas y privadas están guardadas en dos archivos separados. La llave
privada debe ser conservada para uno mismo, y se debe evitar que al-
guien que no sea el propietario la tenga. Por el contrario, la llave
pública puede (y debería) ser distribuida a todo el que nos quiera en-
viar información encriptada a nosotros. Supongamos que el señor A le
quiere enviar un archivo encriptado al señor B. El señor A encripta el
archivo con la llave publica del señor B. La única forma de desencrip-
tar ese archivo, es con la llave privada del señor B. Entonces, lo en-
via al señor B. Cuando el señor B lo recibe, usa su llave privada para
desencriptarlo. Para desencriptar un archivo usando la llave privada,
se debe suplir un password seleccionado durante la creación del par de
llaves, ademas de tener la llave privada correspondiente en nuestro po-
der. 
 De esta forma, cuando encriptamos algo con la llave pública de al-
guien, sabemos que el único capaz de desencriptarlo será el que tenga
la llave privada y la passphrase correspondiente (La passphrase es una
versión más larga de lo que es una password, y es lo que se usa en PGP.
 Una passphrase puede ser una palabra, pero se aconseja usar una frase
completa, con espacios, caracteres no alfanuméricos, etc.). OK, en teo-
ría, siguiendo este razonamiento, el único capaz de desencriptarlo es
la persona que nosotros queríamos que lo reciba. Claro que si el señor
B es un estúpido, que le da el archivo con su llave privada a todo el
mundo, y usa de passphrase su nombre...
 El PGP también soporta encriptación convencional, lo que quiere decir
que para encriptar un archivo le damos una passphrase, y luego para
desencriptarlo habrá que ingresar la misma passphrase, pero este méto-
do no es aconsejable, ya que el método de llave pública es mucho más
seguro.

¿Cómo Usarlo?
-------------
 Bueno, simple, luego de instalar el programa, se debe crear un par de
llaves. Para esto, se debe abrir el módulo PGPKeys, y presionar en el
menú keys, la opcion new keypar, o el botón correspondiente en la barra
de herramientas, o presionar Ctrl+N, o como se te ocurra. 
Luego de esto, aparecerá el asistente para la creacion de pares de lla-
ves. Se debe ingresar un nombre, y opcionalmente una dirección de
email. En la pantalla siguiente se debe elegir el tamaño de la llave.
 Y esto es importante. Cuanto más grande sea la llave, más dificil de
romper será, pero más lenta sera la encriptación usando esta llave.
 El tamaño va de 768 a 4096 bits. Ahora, cada llave, en realidad está
compuesta por dos partes. La parte Diffie-Hellman, es la que se usa pa-
ra encriptar, y cuando seleccionamos la longitud estamos seleccionando
la longitud de esta parte de la llave. La otra parte de la llave, es la
DSS, que es la parte que se usa para firmar (explicado luego). La parte
DSS es siempre menor o igual que la Diffie-Hellman, teniendo como máxi-
mo 1024. Una longitud apropiada, es 3072 (la parte DSS será de 1024 por
defecto).
 Luego habrá que seleccionar si el par de llaves expirará en alguna fe-
cha específica, o si no tiene expiración. Esto se usa por si queremos
usar un par de llaves por un tiempo determinado. Una vez pasada la fe-
cha de expiración, no se podra usar ese par de llaves. A menos que ten-
gas alguna necesidad especial, ponele que no expire nunca.
 A continuación, viene la parte que se podría considerar la más impor-
tante, la elección de la passphrase. Cada uno sabe lo que se debe y no
se debe poner. Lo único que voy a decir al respecto es: Que sea larga,
que no sea algo que todos saben que está asociado con nosotros, y una
de las más importantes, QUE NO TE LA OLVIDES (si te la olvidás la jo-
diste, no hay forma de recuperarla, a menos que tengas millones de do-
lares para invertir en equipamiento, y mucho tiempo, que es lo que se
necesitaría para romperla).
 Luego viene un poco de proceso del programa, generar los números pri-
mos, quizás recolectar datos aleatorios, etc. Una vez terminado esto,
estará finalizado. Si checkeamos la casilla send my key to root server
now..., se enviará nuestra llave pública al servidor de llaves (luego
explicaré que es esto).

¿Cómo distribuir la llave pública?
----------------------------------
 Bueno, ahora que tenemos el par de llaves, hay que entregarle nuestra
llave pública a todo el que quiera encriptar cosas para nosotros.
 Primero habrá que exportar la llave a un archivo, esto se hace se-
leccionando export (del menu contextual que se abre presionando el bo-
tón derecho sobre la llave correspondiente). Se exporta en formato text
output, que permite pegarlo en un documento (como en este por ejemplo).
 Luego se puede seleccionar import para importarla, o hacer doble click
en el archivo (la extensión de estos archivos es por defecto .asc). 
 La forma más segura de darle nuestra llave a alguien, es entregársela
en un disco en la mano. Pero muchas veces esto no es posible, ya que la
persona con la que hay que intercambiar llaves puede estar en otro con-
tinente. Otra posibilidad es mandarla por mail. Pero al mandarla por
mail, tenemos que asegurarnos de que la llave que llegó a destino, es
la nuestra, y no una llave falsa que alguien pudo haber reemplazado por
el camino. Para esto está la fingerprint. La fingerprint es una código
único que tiene cada llave. Se le asigna en el momento de la creación y
no hay dos iguales. Si clickeamos con el botón derecho del mouse sobre
una llave, y seleccionamos propiedades, nos mostrará entre otras cosas,
la fingerprint. Podemos pedirle a la otra persona que nos dicte por te-
léfono la fingerprint de su llave y cotejarla con la que tenemos noso-
tros.
 Otra forma es mediante el servidor de llaves. Hay una serie de servi-
dores que se encargan de recolectar las llaves públicas. Nosotros pode-
mos subir nuestra llave pública a un servidor seleccionando la llave
que queramos enviar, y en el menú server, submenú send, seleccionar el
servidor al cual enviarla. De esta forma podemos buscar en los servido-
res la llave de una persona determinada.

 Una vez que conseguimos la llave pública de alguien, esta debe ser
firmada por nosotros para poder usarla. Cuando tenemos la llave de al-
guien, pero no está firmada, esta llave es inválida. Firmarla sería po-
nerle la firma de que estamos seguros de que la llave pública corres-
ponde a la persona que nosotros pensamos. Una vez que nos aseguramos
que la llave que tenemos corresponde a la persona en cuestión (ya sea
porque nos la dio en mano o porque verificamos fingerprint), debemos
firmarla con nuestra llave privada, lo que le da validez a la llave.
 Para esto, hacemos click con el botón derecho del mouse sobre la lla-
ve, y seleccionamos sign...
 Se nos mostrará la llave a firmar, y una checkbox. Si la checkeamos,
permitiremos que la firma sea exportada. O sea, que si nosotros damos
esta llave a otro, y esta firmada por nosotros, si la otra persona con-
fía en nuestra llave, entonces no necesitará firmar la que nosotros le
damos, ya que al haberla firmado nosotros, ya se asegura que es la
correcta. Normalmente es mejor dejar esta casilla descheckeada.
 Una vez que ponemos OK, Se nos dará a seleccionar con cual de nues-
tras llaves privadas queremos firmarla (por si tenemos más de una).
 También nos pedirá la passphrase de la llave privada que usemos para
firmar. Una vez firmada ya es válida. En las propiedades de la llave,
se puede ajustar la confianza que tenemos en la llave. Hay tres nive-
les de trust, y se pueden asignar deslizando la barra de abajo a la de-
recha. Si nosotros estamos seguros de que la llave corresponde a la
persona, podemos asignarle total trust. Queda en cada uno la forma en
la que maneja esto.
 Ahora que la llave ya es válida, podemos usar esa llave pública para
encriptar cosas para el propietario de esa llave.

¿Como encriptar y enviar datos?
-------------------------------
 Para encriptar un archivo, podemos presionar el botón derecho del
mouse sobre el mismo, y del menú contextual, seleccionar PGP>Encrypt.
 Aparecerá una pantalla, en la que seleccionaremos las llaves públicas
que queremos usar para encriptarlo. Un archivo encriptado puede tener
varios receptores, o sea, que podemos encriptarlo usando varias llaves
públicas, y cualquiera de los propietarios de las llaves podrá desen-
criptarlo.
 Las opciones de abajo son las siguientes:
  -Text Output: Hace que el archivo encriptado use un conjunto de
   caracteres de texto. De esta forma, podemos copiar y pegar directa-
   mente el archivo encriptado en el cuerpo de un mensaje de email
   (aunque no es aconsejable, ya que en realidad, esto fue ideado para
   poder incluir archivos como attachments en aplicaciones de correo
   antiguas, que no permitian archivos binarios).
  -Conventional Encryption: Si seleccionamos esta casilla, no usaremos
   llaves para encriptar el archivo, sino que proporcionaremos una
   passphrase que se usará para encriptarlo, y luego habrá que propor-
   cionar la misma para desencriptarlo.
  -Wipe Original: Si seleccionamos esta opción, luego de encriptar el
   archivo, el original será eliminado de nuestro disco (y cuando digo
   eliminado quiere decir eliminado, con wipe se refiere a eliminarlo
   sobreescribiendolo y evitando su recuperación, por eso cuidado con
   esto).
  Las últimas versiones de PGP, incluyen otra opción que es el Secure
Viewer (esta opción solo está disponible cuando encriptamos archivos de
texto). Si seleccionamos esto, el receptor solo podrá abrir el archivo,
una vez desencriptado, con el secure viewer (viene con el PGP). Este
Viewer, ademas de evitar que el archivo pueda ser grabado en otro ar-
chivo de texto (evita el copy y paste, efectivamente transformando el
texto en "for your eyes only"), usa una fuente que protege el texto
contra ataques de tipo TEMPEST (El ataque tempest se basa en que la
radiación electromagnética del monitor puede ser capturada y re-
construida, incluso estando en otro edificio, para recrear la imagen
que se está viendo en la pantalla). Obviamente para un ataque TEMPEST
se requieren equipos especiales (costosos y no se consiguen en elec-
trónica Tito), o sea que para que un ataque de este tipo sea montado
contra una persona tiene que estar muy buscada (muy buscada= buscada
por gobiernos o grandes corporaciones, o individuos de amplios recursos
por así decirlo,pero por eso está incluido en el soft, ante la necesi-
dad puede y debe ser usado).
 Una vez presionado OK, el archivo será encriptado. Es diferenciable,
ya que el nombre del mismo es igual al original, pero se le agrego la
extensión .pgp, y además cambió el ícono.
 Una vez encriptado el archivo, podemos mandarlo como archivo adjunto
en un mail, enviarlo por DCC, ICQ, o como corno sea.
 
¿Como desencriptarlo?
---------------------
 Para desencriptarlo basta con hacer doble click sobre el archivo (como
en todos los casos, hay por lo menos 3 formas de hacerlo, pero casi
siempre menciono la más rápida y práctica).
 Aparecerá una ventana, en la que nos dirá los destinatarios (las lla-
ves públicas usadas para encriptar), y si nosotros tenemos la llave
privada para alguna/s de las llaves públicas, nos permitirá ingresar
la passphrase correspondiente. Si la ingresamos bien, nos pedirá la
ubicación donde guardar el archivo desencriptado, y una vez presionado
OK, el archivo estará desencriptado y disponible. Nuevamente, si fue
encriptado para secure viewer, el archivo quedará encriptado, o sea no
se extraerá el archivo original, pero se abrirá el secure viewer, y nos
mostrará el texto del archivo original.

Firmas
------
 Mucho más arriba, cuando hablé de las dos partes de la llave, dije que
la parte DSS serviá para firmar, y que mas adelante hablaría de esto,
bueno, llegó el momento. Hay veces que no es necesario encriptar un ar-
chivo, sino solamente asegurarle al destinatario que somos nosotros
quien lo envia, o hay veces que además de encriptarlo hay que asegurar-
le que lo enviamos nosotros. Para esto son las firmas. Una dirección de
email puede ser falseada, así como un nick. Y la mayoría de las veces
nuestra llave pública está en manos de varias personas, por lo tanto
el hecho de que venga encriptado con la misma no nos asegura la auten-
ticidad del emisor.
 Para firmar un archivo, seleccionamos sign del menú contextual. Se
abrirá la ventana donde seleccionamos la llave privada usada para fir-
mar. Como sólo nosotros tenemos nuestra llave privada, le aseguramos al
receptor que nosotros emitimos ese archivo. También deberemos ingresar
la passphrase correspondiente (como en todas las operaciones que en-
vuelvan a nuestra llave privada). Las opciones disponibles son:
 - Detached Signature: Está seleccionado por defecto, y si así se deja,
 la firma irá en un archivo separado, que debemos enviar junto con el
 original.
 - Text Output: Lo mismo de siempre, crea el archivo usando caracteres
 de texto.
 Si seleccionamos Detached Signature (cosa que a mi en particular no me
gusta), se creara otro archivo. Si hacemos doble click sobre este, nos
dirá la llave privada usada para firmarlo (siempre y cuando tengamos
la pública de esa persona, de lo contrario nos dirá firmado por llave
desconocida). El PGP comprueba que el archivo original no haya cambia-
do, comparandolo con informacion en el archivo separado donde esta la
firma. Si el archivo original cambió nos informará que la firma es in-
válida.
 En caso de no seleccionar detached signature, se creará un nuevo ar-
chivo que se verá como un archivo encriptado. Si hacemos doble click
en el mismo para desencriptarlo, no nos pedirá passphrase ni nada, ya
que fue "encriptado" con la llave privada de otro (a esto se le llama
firmarlo, cualquiera puede desencriptarlo), pero cuando lo desencrip-
te, se nos abrirá otra ventana en la que nos informará de quien es la
firma (o sea con que llave privada fue firmado). Si no tenemos la lla-
ve pública del firmante, podremos extraer el original, pero nos avi-
sará que fue firmado por una llave desconocida.
 Otra opción es Encrypt & Sign (encriptar y firmar). Si seleccionamos
esta opción, primero nos aparecerá el cuadro de encriptación, que nos
permitirá seleccionar las llaves públicas con las que encriptaremos.
 Una vez que terminemos con la encriptación, y pulsemos OK, se nos
abrirá otra ventana, en la que seleccionaremos la llave privada con la
que firmaremos el archivo encriptado. Aquí no podemos usar la detached
signature, y sólo nos limitamos a ingresar la passphrase de la llave
privada seleccionada para firmar. Una vez firmado y encriptado el ar-
chivo esta listo, y se ve como un archivo encriptado común.
 Cuando este archivo se desencripta, y se extrae el original satisfac-
toriamente (previo ingreso de passphrase,etc.), se abrirá la ventana
del PGPlog, donde siempre se informa cual es la llave firmante del ar-
chivo. Como siempre, si no tenemos la llave pública del firmante,
igual podremos extraer el archivo, y nos avisará que la llave con la
que se firmó es desconocida.
 Quiero que quede claro que firmar un archivo no le otorga seguridad
sobre quien será el receptor, sino sobre quien fue el emisor. O sea que
un archivo firmado por nosotros puede ser abierto por cualquier perso-
na. Por eso, si se encripta y se firma un archivo, nos aseguramos de
saber quien será el receptor, y a su vez, el receptor se asegura de
quien fue el emisor. A su vez, cuando recibimos un archivo encriptado
con nuestra llave pública, y lo desencriptamos usando nuestra llave
privada, no podemos asegurarnos de quien fue el emisor, ya que cual-
quiera con nuestra llave pública pudo haberlo encriptado.

Final
-----
 Bueno, estas son las funciones principales y más importantes del PGP.
También tiene otras herramientas o módulos, pero algunas de ellas de-
penden de la versión. Algunas pueden ser el Wipe (limpia el espacio
libre de nuestro disco, para remover los rastros de archivos borrados,
eliminando cualquier posibilidad de recuperarlos), el PGPdisk (Permite
crear un archivo, que puede ser montado como otro disco rígido si se
ingresa la passphrase correcta), o el PGPnet (Hace que las comunica-
ciones TCP/IP entre dos computadoras con PGPnet instalado sean
seguras).

Los manuales que acompañan al PGP son excelentes, por lo tanto si te
interesa saber más sobre este programa y los métodos y algoritmos de
encriptación que usa, como asi también otras funciones incorporadas,
recomiendo que los leas.

Si tenés alguna pregunta o comentario, podés mandarme un email a

 Hiween@Mixmail.com

Hiween, 1999.

