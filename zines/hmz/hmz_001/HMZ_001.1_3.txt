HMZ_001.1_3
                                         .-.-----------------------.-.
 Introducción al Hacking                 | | Kind.........Hack     | |
 =======================                 | | Autor........Hiween   | |
        \ Por Hiween  /                  | |-                     -| |
         \   1999    /                   | | Release               | |
          \_________/                    | | Where??.......HMZ_001 | |
                                         |_| When??.......25/11/99 |_|
                                         '-'-----------------------'-'

Este texto fue escrito para fines educativos. No me hago responsable
por el uso o mal uso que pueda dársele a esta información.
Eres libre de distribuir este documento, siempre y cuando permanezca
sin cambiar.

Introducción
------------
  Este es un texto orientado a principiantes. Tiene algunas partes que
pueden serle de interés a personas con conocimiento intermedio, pero
esta orientado a los que están recién introduciendoce en esta
actividad.
  Se centra en el hacking por Internet, ya que hoy en día, los numeros
de acceso por telefono a una red de alguna empresa ya no son tan
vulnerables como lo eran antes.

Herramientas
------------
  Las herramientas necesarias pueden ser muy variadas, ya que dependen
de nuestros fines. Pero las más importantes son:

- Un Cliente de Telnet: Para conectarse a un host remoto, lo haremos
por Telnet, que es un protocolo de comunicaciones, y para conectarnos,
necesitamos un cliente. Con este cliente podemos conectarnos a
cualquier puerto de un host cualquiera. Más adelante daré la lista de
puertos y sus servicios asignados, pero como ejemplo, si nos conectamos
al puerto 23, podremos loguearnos remotamente a ese sistema, como si
fueramos una terminal más en la red. El puerto 21 corre el FTP daemon
(un daemon es un programa que corre en segundo plano esperando
conexiones y actuando como intermediario), lo que quiere decir, que si
nos conectamos al puerto 21, podremos usar el servicio FTP de ese host
(Luego entraré en una explicación más detallada de todo esto).
  El Windows asi como el Linux traen un cliente incorporado, pero
podemos conseguir otro, hay muchos para bajar de Internet.

-Un Port Scanner: No todos los host tienen todos los puertos abiertos y
servicios disponibles. Algunos puertos pueden estar abiertos y no tener
un servicio asignado a el. Para ver que puertos tiene abiertos un host,
y ver que se puede hacer con él, podemos utilizar un port scanner, que
escaneara todos los puertos, o un rango especificado y nos dirá cuales
están abiertos. Este programa es opcional, ya que se pueden escanear a
mano con el mismo cliente de telnet, intentando conectarnos a cada
puerto, los que estén cerrados nos dira que no se puede establecer
conexión. Pero hacerlo a mano puede llevar mucho tiempo y esfuerzo, y
cuando se quiere saber que puertos tiene abiertos, escanear 65535
puertos a mano puede llevar unos cuantos dias. En cambio con el
scanner, será bastante más rapido (nunca escaneé los 65535, pero no
creo que demore mas de 1 hora). 

-Un Prefix Scanner o War Dialer: Esto es opcional, para lo que veremos
aqui no lo necesitaremos, ya que se usa para localizar numeros de
telefono de acceso a redes. Lo que hace este programa hace, es pedirnos
una característica o prefijo, e intentar llamar a todos los números en
esa característica, para después devolvernos los números en los que
encontró una computadora. Por ejemplo, si nosotros le pedimos que
escaneé el 340, probara 340-0000, 340-0001, 340-0002, hasta 340-9999.
Esto puede llegar a ser extremadamente lento, y caro, ya que suponiendo
que la mitad atienda, es equivalente a 5000 llamadas, por lo tanto
debería hacerce desde una línea que no sea nuestra.

¿Qué son los puertos?
---------------------
  Me han hecho esta pregunta muchas veces en el IRC, y recuerdo que
cuando empecé a leer textos sobre hacking me costó entender que eran,
ya que hablaban de ellos sin explicar que eran en concreto. Obviamente
después de un tiempo me di cuenta a lo que se referían.
  Un puerto es básicamente un canal por el cual entra y/o sale
información, como puede ser el puerto de de la impresora. Estos son
puertos de hardware, pero en una red, estamos hablando de puertos
virtuales, puertos de software, pero son lo mismo, canales a través de
los que entran y/o salen datos. Cuando nos conectamos a una máquina,
necesitamos especificar una dirección IP (una dirección única asignada
a cada host, esta se usa para referenciarnos al mismo,
por ej 200.45.23.4). Especificando la IP address, estamos diciendo que
nos queremos conectar a la máquina X, pero necesitamos decir a que
puerto de esa máquina hay que conectarse. Para establecer la conexión,
se abre un puerto en nuestra máquina (el puerto local), y por medio de
este entra y sale la información que intercambiaremos con el host
remoto, através del puerto remoto, o sea el puerto al que nos
conectamos (el del host). Por ejemplo, cuando nos conectamos al IRC,
debemos decir cual es el servidor de IRC al que nos queremos conectar,
pero también el puerto en el que corre el server de IRC, o sea el
puerto que usa el server para recibir y enviar los datos del servicio
de IRC. El puerto IRC es normalmente el 6667, pero también puede ser
otro (como en DALNet, que es el 7000). En este ejemplo, en nuestra
máquina se abrirá un puerto, como por ejemplo el 1367, que estará
conectado al 6667 de el host remoto. Una vez establecida la conexión,
todos los datos que mandemos por ese puerto se dirigirán al server de
IRC. Todo se maneja de esta forma en Internet. Por ejemplo, cuando
navegamos por la web con un browser, por ejemplo Netscape Navigator,
nosotros ponemos la dirección del host en el cuadrito (por ejemplo
www.altavista.com). El DNS (Domain Name Server - Servidor que se
encarga de traducir los nombres de host a direcciones IP), traduce el
nombre de host a una dirección IP, por ejemplo 207.34.65.200.
  El navegador hace uso del servicio web, que corre por convención en
el puerto 80, por lo tanto no es necesario especificárselo al browser,
ya que este se conecta automaticamente a este puerto. El browser,
luego, usa los comandos del daemon que corre en el server para pedir
que se envie la pagina solicitada, y la muestra al usuario. Todo esto
es transparente a nosotros, pero como ejercicio pueden conectarse al
puerto 80 por telnet e intentar los comandos.
  Un servidor tiene ciertos puertos abiertos en escucha, lo que quiere
decir que están esperando conexiones a ese puerto. Incluso nuestra
máquina tiene algunos puertos en escucha, a espera de conexiones.
  Por ejemplo, ciertas redes de IRC requieren que tengamos un IdentD
(o ident daemon), este viene integrado en la mayoria de los clientes
IRC. Lo que hace es abrir el puerto 113, y esperar pedidos de conexión,
por lo general por parte del server de IRC al que nos intentamos
conectar, que pide a ese daemon nuestra identificación.

Listado de Puertos
------------------
  Este listado de puertos y los servicios asignados a cada uno fue
sacado del RFC-1060: Assigned Numbers. Para más información intenta
conseguir el RFC completo (los RFC o Request for Comments son
documentos que especifican datos técnicos sobre todos los aspectos de
Internet).
  Debes recordar que no necesariamente un server corre todos los
servicios, y que no es obligación correr un servicio en el puerto
especificado, aunque normalmente es asi, ya que de otra forma seria un
caos, hay servers que corren un servicio en otro puerto que no es el
por defecto.

Service Name   Port/Protocol   Description
------------   -------------   -----------

   echo            7/tcp
   discard         9/tcp          sink null
   systat          11/tcp         users
   daytime         13/tcp
   netstat         15/tcp
   qotd            17/tcp         quote
   chargen         19/tcp         ttytst source
   ftp-data        20/tcp
   ftp             21/tcp
   telnet          23/tcp
   smtp            25/tcp         mail
   time            37/tcp         timserver
   name            42/tcp         nameserver
   whois           43/tcp         nicname
   nameserver      53/tcp         domain
   apts            57/tcp         any private terminal service
   apfs            59/tcp         any private file service
   rje             77/tcp         netrjs
   finger          79/tcp
   link            87/tcp         ttylink
   supdup          95/tcp
   newacct         100/tcp        [unauthorized use]
   hostnames       101/tcp        hostname
   iso-tsap        102/tcp        tsap
   x400            103/tcp
   x400-snd        104/tcp
   csnet-ns        105/tcp        CSNET Name Service
   pop-2           109/tcp        pop postoffice
   sunrpc          111/tcp
   auth            113/tcp        authentication
   sftp            115/tcp
   uucp-path       117/tcp
   nntp            119/tcp        usenet readnews untp
   ntp             123/tcp        network time protocol
   statsrv         133/tcp
   profile         136/tcp
   NeWS            144/tcp        news
   print-srv       170/tcp
   exec            512/tcp        remote process execution;

                                  authentication performed using
                                  passwords and UNIX loppgin names
   login           513/tcp        remote login a la telnet;
                                  automatic authentication performed
                                  based on priviledged port numbers
                                  and distributed data bases which
                                  identify "authentication domains"
   cmd             514/tcp        like exec, but automatic
                                  authentication is performed as for
                                  login server
   printer         515/tcp        spooler
   efs             520/tcp        extended file name server
   tempo           526/tcp        newdate
   courier         530/tcp        rpc
   conference      531/tcp        chat
   netnews         532/tcp        readnews
   uucp            540/tcp        uucpd
   klogin          543/tcp
   kshell          544/tcp        krcmd
   dsf             555/tcp
   remotefs        556/tcp        rfs server
   chshell         562/tcp        chcmd
   meter           570/tcp        demon
   pcserver        600/tcp        Sun IPC server
   nqs             607/tcp        nqs
   mdqs            666/tcp
   rfile           750/tcp
   pump            751/tcp
   qrh             752/tcp
   rrh             753/tcp
   tell            754/tcp        send
   nlogin          758/tcp
   con             759/tcp
   ns              760/tcp
   rxe             761/tcp
   quotad          762/tcp
   cycleserv       763/tcp
   omserv          764/tcp
   webster         765/tcp
   phonebook       767/tcp        phone
   vid             769/tcp
   rtip            771/tcp
   cycleserv2      772/tcp
   submit          773/tcp
   rpasswd         774/tcp
   entomb          775/tcp
   wpages          776/tcp
   wpgs            780/tcp

   mdbs_daemon     800/tcp
   device          801/tcp
   maitrd          997/tcp
   busboy          998/tcp
   garcon          999/tcp
   blackjack       1025/tcp       network blackjack
   bbn-mmc         1347/tcp       multi media conferencing
   bbn-mmx         1348/tcp       multi media conferencing
   orasrv          1525/tcp       oracle
   ingreslock      1524/tcp
   issd            1600/tcp
   nkd             1650/tcp
   dc              2001/tcp
   mailbox         2004/tcp
   berknet         2005/tcp
   invokator       2006/tcp
   dectalk         2007/tcp
   conf            2008/tcp
   news            2009/tcp
   search          2010/tcp
   raid-cc         2011/tcp       raid
   ttyinfo         2012/tcp
   raid-am         2013/tcp
   troff           2014/tcp
   cypress         2015/tcp
   cypress-stat    2017/tcp
   terminaldb      2018/tcp
   whosockami      2019/tcp
   servexec        2021/tcp
   down            2022/tcp
   ellpack         2025/tcp
   shadowserver    2027/tcp
   submitserver    2028/tcp
   device2         2030/tcp
   blackboard      2032/tcp
   glogger         2033/tcp
   scoremgr        2034/tcp
   imsldoc         2035/tcp
   objectmanager   2038/tcp
   lam             2040/tcp
   interbase       2041/tcp
   isis            2042/tcp
   rimsl           2044/tcp
   dls             2047/tcp
   dls-monitor     2048/tcp
   shilp           2049/tcp
   NSWS            3049/tcp
   rfa             4672/tcp       remote file access server

   commplex-main   5000/tcp
   commplex-link   5001/tcp
   padl2sim        5236/tcp
   man             9535/tcp

  No puedo listar todos los puertos aqui, por lo que pueden leer el
RFC 1060 como ya dije. Estos son algunos de los puertos asignados, pero
hay servicios que no están asignados en este RFC, como el IRC, para el
cual se usa el normalmente el 6667.

¿Qué se puede hacer con ellos?
------------------------------
  Como un ejemplo, podemos abrir el cliente de telnet, especificar un
host, y el puerto 7 (echo).
Si el server especificado esta corriendo este servicio, todo lo que
tipees te será devuelto. Este es un servicio que para nosotros no
tiene utilidad, pero puedes usarlo para probar. En el puerto 9
(discard), todo lo que envies será descartado o eliminado.
En el puerto 13 (daytime), si nos conectamos, el server nos devolvera
el día y la hora que tiene en su sistema. El puerto 15 (netstat),
tiene más utilidad, aqui, si nos conectamos, tendremos disponible
gran cantidad de información sobre el host, como usuarios logueados,
etc. Pero desgraciadamente muy pocos servers lo tienen abierto.
El puerto 21 (FTP - File Transfer Protocol), es un servicio sumamente
útil, para bajar o subir archivos al server. El 23 (Telnet), nos
permite loguearnos en el sistema, el 25 (SMTP - Simple mail transfer
protocol), sirve para enviar mails. No puedo explicar aqui que hace
cada puerto y los comandos del daemon. Simpre que nos conectemos a un
servicio desconocido, conviene probar los comandos Help, ?, H, y todo
lo que se nos ocurra para conseguir ayuda.

Listaré algunos comandos de algunos servicios.

FTP
---
 HELP --> Muestra la lista de comandos disponibles. Los que tienen un
          * al lado estan deshabilitados.
 HELP comando --> Muestra ayuda de uso de ese comando.
 USER --> Especificar un nombre de usuario.
 PWD --> Especificar un password para el nombre de usuario introducido
         anteriormente.
 ACCOUNT --> Cuenta de usuario.
 STORE --> Este comando hace que el servidor acepte los datos
           transferidos y que los almacene en un fichero.
 SUNIQUE --> Similar a STORE excepto que el fichero creado debe tener
             un nombre único para ese directorio.
 APPEND --> Similar a STORE, pero si el fichero ya existe los datos se
            almacenaran al final del archivo, sin sobreescribir el
            fichero original.
 CD --> Cambiar de directorio  
 CDUP --> Ir al directorio raiz ( = CD / ).
 MKDIR --> Crear un directorio.
 RMDIR --> Borrar un directorio vacio.
 DELE / DELETE --> Borra un fichero del servidor.
 LS --> Ver el contenido del directorio (igual que en Unix).
 CHMOD --> Cambiar permisos de fiheros (igual que en Unix).
 PWD --> Indica el directorio actual (igual que en Unix).
 LCD --> Cambia el directorio local de trabajo.
 QUIT / BYE --> Terminar la conexion.
 TYPE modo --> Especifica el tipo de representacion de los datos.
               El paremetro puede ser:
                		- ascii
                		- binary
                		- image
                		- ebcdic
                		- tenex
                	      (Los parametros dependen del sistema).
 PROMPT --> Activar /desactivar el modo interactivo. Nos sirve para
            poder subir / bajar muchos ficheros sin que nos pida
            conformacion cada vez.
 GET --> Bajar un fichero.
 PUT --> Subir un fichero.
 MGET --> Similar a GET pero baja multiples ficheros (por ejemplo:
         'MGET /etc/passwd').
 MPUT --> Similar a PUT pero sube multiples ficheros.
 VERBOSE --> Activa / desactiva el modo verbose. Nos da mas informacion
             sobre los comandos que ejecutamos.
 MODE --> Especificar el modo de transferencia de datos. Los modos
          posibles son:
				S - Stream
				B - Block
				C - Compressed
 RESTART --> Le indica al servidor el indicador de lugar en el cual la
             transferencia de un fichero debe ser continuada. Debe ir
             seguido de un comando apropiado para que la transferencia
             continue.
 RENAME --> Indica el nombre del fichero a renombrar.
 
 SYSTEM --> Nos da información sobre el sistema operativo al que
            estamos conectados.
 STATUS --> Nos da información sobre el status del sistema.

SMTP
----
 HELP --> Mensaje de ayuda (no esta disponible en todos los sistemas).
 HELO hostname --> En algunas versiones esto es necesario para poder
                   ejecutar el resto de comandos. En 'hostname' podés
                   poner cualquier cosa.
 MAIL FROM: usuario --> 'usuario' es el remitente
 RCPT TO usuario --> 'usuario' es el destinatario. A donde vas a
                     enviar el mail.
 VRFY direccion --> Verifica el reparto de mail de una direccion.
 EXPN direccion --> Expone la direccion de una lista de correo.
 DATA --> Nos permite escribir el texto a enviar. Acaba con un punto.
 RSET --> Interrumpe la transmision.
 NOOP --> No hace nada. Sirve para ver si seguimos conectados o no.
 QUIT --> Terminar. Cerrar la conexion.

WWW
---
 GET consigue informacion del cliente al servidor.
 PUT pregunta al servidor si acepta la informacion como reemplazo del
     objetivo.
 POST pregunta al servidor si acepta la informacion pasada del cliente
      como una especificacion del objetivo.

Si te equivocas al escribir el comando, te desconecta. Esto es porque
está pensado para ser usado solamente por un cliente, como lo es un
browser.

POP3
----

 STAT --> Nos dice el numero de mensajes que hay en el buzon y el
          tamaño en bytes que ocupan.
 LIST --> Similar al anterior pero nos muestra el tamaño de cada
          mensaje (no en conjunto).
 RETR num --> 'num' es el numero de mensaje que queremos leer.
              Nos lo mostrará por pantalla.
 TOP num nLin --> 'num' es, al igual que antes, el numero de mensaje
                  que queremos visualizar, y 'nLin' es el numero de
                  líneas que queremos que nos imprima (por si no
                  queremos verlo entero. Tambien es útil porque a veces
                  el mensaje no podemos verlo todo debido a que no cabe
                  en pantalla y con el scroll lo perdemos).
 DELE num --> 'num' vuelve a ser el numero de mensaje. Con este
              comando, lo borraremos.
 RSET --> Chequea el buzon en busca de mensajes nuevos.
 HOST dir --> 'dir' es la direccion del host al que quieres acceder
              (creo).
 NOOP --> Igual al SMTP
 QUIT --> Salir

Entrar en un sistema
--------------------
  Ganar control de un sistema seria loguearnos en el mismo como root
(el usuario root es el administrador del sistema, tiene poder para
cambiar todo y acceder a todo). Hay muchas formas de conseguir esto,
pero eso no quiere decir que sea fácil. Podemos entrar mediante un bug
en el sistema operativo que nos lo permita, también probando passwords
hasta dar con el acertado (brute force hacking), conseguir la password
file y crackearla, etc.
  Si nos podemos conectar al servicio FTP, por ejemplo, y el sistema es
un Unix (cualquier versión del mismo), podemos buscar el archivo passwd
en el directorio etc. Entonces, si podemos bajar el archivo etc/passwd
tenemos una gran probabilidad de entrar en el sistema.
  Este archivo guarda la información de todos los usuarios en ese
sistema. La estructura interna de este archivo es:

Nombre_usuario:password:UserID:GroupID:descripción o

 nombre real:directorio de inicio:shell

Un ejemplo de este archivo seria:

jperez:26fRc#^7&b:100:100:Juan Perez:/usr/jperez:/bin/bsh
libre::101:100:Cuenta de Libre Acceso:/usr/free:/usr/csh

El primer campo es el nombre de usuario, el que usamos para loguearnos
cuando nos lo pide. La password esta encriptada con el algoritmo DES.
Esta encriptación es one way, lo que quiere decir que no se puede
desencriptar. Lo que el sistema hace cuando le damos la contraseña es
encriptarla y compararla con la guardada en el archivo, por lo tanto
para conseguir la password de un usuario debemos usar un programa que
pruebe todas las password posibles, encriptandolas con este algoritmo y
comparándolas con las del archivo. La identificación de usuario y grupo
se usa para especificar los permisos que tiene el usuario, puede haber
varios usuarios en un grupo. La descripción puede ser el nombre real o
una descripción de la cuenta. El directorio inicial es el directorio
por defecto de este usuario, y el shell es el shell que usa este
usuario por defecto, pero puede cambiarlo si tiene acceso a otro.
Las passwords pueden estar shadowed, lo que quiere decir que no se
muestran, en su lugar hay un * u otro caracter especial, dependiendo
de la versión de Unix. En este caso las passwords están en otro archivo
que puede cambiar, y al que sólo el usuario root tiene acceso.
Si conseguimos sacar la password de algún usuario, o hay un usuario sin
password, como libre en el ejemplo, podemos telnetear al puerto 23 de
esa máquina, nos deberia aparecer (si es un sistema unix), una mensage
de identificación de sistema, y luego un prompt que dice login:, aqui
ponemos el nombre de usuario. Si este usuario tiene password nos pondra
password:, y aqui tendremos que poner la password de ese usuario.
Algunos sistemas nos permiten un número limitado de intentos antes de
desconectarnos, y algunos loguean los intentos fallidos, por lo tanto
hay que tener cuidado. Si logramos entrar en el sistema debemos borrar
todos los logs que indican nuestra presencia. Todo en unix es case
sensitive, lo que quiere decir que jperez no es lo mismo que Jperez, y
ls no es lo mismo que lS. Por eso debemos usar siempre minúsculas,
excepto en ciertos casos (por ejemplo un directorio que sea FileS,
debemos poner para referirnos a él FileS, ya que si ponemos files,
nos estariamos refiriendo a otra cosa). No listaré aqui los comandos
del sistema, ya que este no pretende ser un tutorial de unix, pero se
pueden bajar muy buenos documentos de Internet sobre este sistema
operativo.
Primero, conviene probar con las cuentas por defecto, que muchas veces
no tienen password o tienen seteado el password por defecto. Algunas
cuentas por defecto son:

Nombre de usuario               Password
-----------------               --------
root                            root (No creo que la encuentres con el
                                  password por defecto, but who knows?)
sys                             sys / system / bin
bin                             sys / bin
mountfsys                       mountfsys
adm                             adm
uucp                            uucp
nuucp                           anon
anon                            anon
user                            user
games                           games
install                         install
demo                            demo
umountfsys                      umountfsys
sync                            sync
admin                           admin
guest                           guest
daemon                          daemon

Hay montones de exploits, que es codigo fuente en C, que compilado en
la máquina nos permitirá tomar ventaja de algún bug en el sitema
operativo. En la página de Bugtraq podés encontrar los bugs que se van
descubriendo en los sistemas operativos. No voy a poner aca líneas y
líneas de código C, porque no es esa la idea de este documento.

Bueno, doy por terminado este pequeño documento introductorio, espero
que te haya servido para aprender un poco más sobre como funcionan las
cosas, y la forma de loguearte remotamente. Más adelante quizás escriba
otro más completo y avanzado.
Si tenés alguna pregunta o comentario, podés mandarme un email a

 hiween@mixmail.com

Hiween, 1999.
