         -----   ----- ------------ ---------- ----  ----
         |   |   |   | |   ---    | |        | |   |/  /
         |   |   |   | |   |  |   | |   ------ |      /
         |   |---|   | |   ---    | |  |       |     |
         |           | |   |  |   | |  |       |  |\  \
         |   |---|   | |   |  |   | |   -----  |  | \  \  
         |   |   |   | |   |  |   | |        | |  |  \  \ 
         -----   ----- -----  ----- ---------- ----   ----


         -----         ------------ ---------- -----------
         |    |        |   ---    | |  ---   / |         |
         |    |        |   |  |   | |  |  | /  ------  /    
         |    |        |   ---    | |  --- /      /   /
         |    |        |   |  |   | |  --- \     /   /
         |    |------  |   |  |   | |  |  | \   /   /-----  
         |          |  |   |  |   | |  ---   \ |         |
         ------------  -----  ----- ---------- -----------


                  " You May praY For Your ComPuter "



                      Enero, 2004    1er. Numero   


===========================================================================

                         -=[  Disclaimer  ]=-

 Todos los articulos y la informacion expuesta en esta revista fueron elaborados
   solo con fines educativos y de aprendizaje, el fin o uso que le des a estos            
     es bajo tu propia responsabilidad, el Staff y colaboradores se deslindan
            de responsabilidades por hechos que sean de tu autoria
        
        Se han eliminado los caracteres especiales y en el caso de la
                     "EÑE" se ha suplantado por ~ .


                 Se Recomienda usar el Edit del DOS para
                      la lectura de esta Revista.



============================================================================


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
                 
                         -=[ HackLabz Staff ]=-

                  Status-x <===>  Status-x@HackLabz.net]::.
                   
                 HacKZatan <===> Hackzatan@hacklabz.net]::.
 
                  SrOscuro <===>  SrOscuro@hacklabz.net]::.

                      Polk <===>      Polk@hacklabz.net]::.

                         -=[ Webs Oficiales ]=-

                        http://www.ack-scan.org

                        http://www.hacklabz.net


Estos son los miembros oficiales del Team HackLbaz.NeT y si Tu quieres puedes
ser un miembro mas para saber como contactanos en:  Admin@HacKLabz.NeT
 
 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
                      

       [ Tabla de Contenido]                                [Autores] 
  :. - [                                                            ] :. 
00:. - [ Bienvenida ]                            [HackLabz.NeT Staff] :. 
01:. - [ Beige Box ]                                       [Status-x] :. 
02:. - [ Anonimato en Red ]                              [HackZataN!] :. 
03:. - [ Programando en C con el Sroscuro ]                [SrOscuro] :. 
04:. - [ Introduccion a los Sniffers ]                        [J@que] :.
05:. - [ Shells, Sabes que son? ]                          [Status-x] :.  
06:. - [ Herramientas Hack para WinXP ]                        [Polk] :. 
07:. - [ Despedida ]                             [HackLabz.NeT Staff] :. 



 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-





 =o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=

 00:.     [ Bienvenida ]                         [HackLabz.NeT Staff]

                                                 [Admin@HacKLabz.NeT]

 
Bueno pues esta es nuestra primer Revista Electronica que publicamos, esperamos
que les agrade y que la disfruten tanto como nosotros al momento de elaborarla.

El Staff de HacKLabz.Net quiere agradecer a varias personas y equipos que nos
han apoyado a lo largo de nuestra trayectoria, muchos pensaran que somos un 
grupo nuevo sin embargo tenemos ya casi un A~o y dos meses, los cuales nos han servido
para mejorar la calidad del contenido en nuestro sitio Web y para madurar como 
equipo de Hack y Seguridad que somos.

En esta primera entrega traemos textos de todo tipo de temas, Phreak, Hack, Crack
Programacion, Seguridad y Utilidades, esperamos que te sirvan , por ejemplo el texto
Beige Box que es un tutorial de Phreaking y Programando en C paso a paso que es un
curso de C excelente creado por uno de los programadores del Team.

Ojala y les guste el contenido de esta primera Revista, y esperamos que sean muchas mas
apoya el proyecto y recomiendanos con tus conocidos, para que podamos crecer como
un grupo de Hack y Seguridad en Mexico y porque no en Todo el Mundo.

[ De la unica cosa que no nos arrepentimos de la Vida, es de haber nacido ]::.Staff

 =o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=




 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

 01:.     [ Beige Box ]                                    [Status-x]

                                              [status-x@hacklabz.net]


[ Iniciando la Beige Box ]


Bueno pues la Beige Box tendra la funcion de un instalador de lineas, cada phreaker
seguramente aunque sea por diversion ha considerado tener uno.

[ Construyendo la Beige Box ]

La construcción es muy simple. Primero, debes entender el concepto del dispositivo.  
En un gato modular, hay cuatro alambres.  Éstos son rojos, verdes, amarillos, y negro.
Para un solo teléfono de la línea, sin embargo, solamente dos importan: el rojo (anillo)
y verde (extremidad). El amarillos y el negros no son necesarios para este proyecto.
El microteléfono de un instalador de líneas tiene solamente dos clips en él: el anillo 
y la extremidad. Necesitarás un teléfono ( yo recomiendo uno de "touch tone") con un 
enchufe modular, un gato modular, y dos clips de cocodrilo grandes (preferiblemente rojo y verde).  
Toma el gato modular y mira el fondo de su cubierta.  
Debe haber un gato gris con cuatro alambres (rojo, verde, amarillo, y negro) pasando fuera de él.  
Al extremo del cable rojo fija un cocodrilo rojo, asi tambien haz lo mismo con el Verde.
Los alambres amarillos y negros pueden ser quitados, aunque los tambien puedes solamente 
dejarlos a un lado de modo que puedas utilizar el gato modular en los proyectos futuros. 
Ahora inserta el enchufe modular de su teléfono en el gato modular, y eso es.
Este modelo en particular es agradable porque puede ser hecho fácilmente, es barato
utiliza las piezas comunes que están fácilmente disponibles, es pequeño, es ligero, 
y no requiere la destrucción de un teléfono.

[ Usando la Beige Box ]

Hay muchas aplicaciones para la Beige B0x .
Sin embargo, antes de que puedas utilizarla, debes saber unirla a tu dispositivo de salida.  
Este dispositivo puede ser cualquiera de los aparatos de la conmutación de Bell que 
incluyan sistemas terminales.Para abrir la mayoría de los aparato de la conmutación 
del teléfono de Bell, debes de tener un conductor de la tuerca hexagonal de 7/16 pulgadas.
Este pedazo de equipo se puede tomar en cualquier almacen de Hardware xD creo que en Office Depot
si eres de Mexico lo venden. Con tu conductor de la tuerca hexagonal de 7/16, da vuelta al volt(s)
aproximadamente 1/8 de la seguridad de una pulgada a la izquierda y abrelo.

Si tu dispositivo de salida es bloqueado, debes tener cierto conocimiento de destruir y/o 
de escoger las cerraduras. Sin embargo, nunca he encontrado un dispositivo de salida bloqueado.  
Una vez que hayas abierto tu dispositivo de salida, debes ver una masa de los alambres conectados
con los terminales.En la mayoría de sus dispositivos de salida, los terminales se deben etiquetar
"T" (extremidad -- si no esta etiquetado, está generalmente a la izquierda  ) y "R" 
(anillo -- si no esta etiquetada, está generalmente a la derecha  ).  
Recuerda:  Derecho-Anillo-Rojo.  Los "DAR" -- una manera simple de recordar cuál es cuál. 
Ahora debes unir el clip de cocodrilo rojo (anillo) al terminal de "R" (anillo).
Une el clip verde del cocodrilo (extremidad) al terminal de "T" (extremidad).

NOTA: Si en vez señal para marcar no oyes nada, reajusta los clips de cocodrilo de modo que no se
estén tocando u otros terminales. También revisa de que no estén unidos firmemente ya que nunca te dije
que lo hicieras con fuerza.

Bien en este momento tu debes ya oir la señal para marcar ( como me desespera eso :P ).  
Marca ANI y veras el numero que estas utilizando ( digo no creo que quieras usar el tuyo 
para hacer phreaking).  Aquí están algunos usos prácticos: Escucha detras de las puertas 
o de los famosos interfons o llamadas telefónicas estatico-libres de los amigos, o de plano 
chantajear a alguien !!!! xD xD jejeje que malos. 
Si quieres saber quién te esta rastreando o escuchando,después de marcar ANI, tira de un CN/A en el número.

[ Larga Distancia ]


Esta sección es que se explica por sí misma, pero no se te vaya a olvidar marcar un "1" antes del NPA.  
El marcar directo a la comunicación de la alianza:  
-- simplemente marca el  0-700-456-1000 y ahi te daran instrucciones xD que ingenuos! :P  
Prefiero este método sobre PBXs, puesto que PBXs tiene recepción pobre y es a menudo más 
difícil de establecer conexion.

[ Phucking ]

Esto es un asunto para la discusión muy grande.
Apenas usando las otras funciones descritas, puedes crear una cuenta grande del teléfono
para la persona afectada no tendrán que pagarla, pero es un molestia para ellas. 
Además, puesto que tu tienes una extensión de la línea de la persona, deja su teléfono colgado jeje 
a que malo soy Status-x :P, y no podra hacer ni recibir llamadas.  
Esto puede ser extremadamente MALO OJO MALO xD porque nadie sospecharía la causa del problema.

[ Links & Stuff ]

http://www.phrack.org

http://www.phreakers.com.mx

http://www.hacklabz.net

[ Despedida ]

Bueno pues asi concluyo este tutorial para crear una Beige Box espero poder poner
este tutorial en la web pero ya con imagenes para facilitar su comprension.

Nos leemos en el proximo numero de esta Revista.


:::Status-x:::                               [ status-x@hacklabz.net]







 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

 02:.     [ Anonimato en Red ]                             [HackZatan]

                                              [hackzatan@hacklabz.net]



Bueno, este nos sirve para esconder nuestra IP real.
pERO eso no lo es lo importante del bouncer..... ejemplo si nos hacen un ataque no lo vamos a recibir 
nosotros si no la maquina donde subimos el bouncer

Setting the bouncer

Debes de asegurarnos de tener lo siguiente

@ Shell 
@ cliente FTP 
@ cliente TELNET 
@ codigo fuente del BOuncer

(1) Sube el bouncer a tu shell. 

(2) En la shell debes descomprimir el fichero:
tar -zxvf bouncer.tar.gz 

(3) Se tuvo que haber creado un archivo llamado bouncer, 
En esa carpeta se encontraran los archivos del bouncer 
entonces hacemos esto cd bouncer 0 cd /bouncer

(4) Debemos de configurar el bouncer con la shell entonces : 
./configure en la shell. 

(5) Ok cuando se termine debes de compilar todo haciendo esto: 
make 

(6) Cuando este compilado debes de correr el archivo que crea el bouncer a veces se llama setup..etc. 
Corremos asi: ./bouncer, cuando termines ya estaras listo para correr el bouncer:P

Como Usarlo.......

(1) Para poner a correr el BOuncer Debes de pulsar ./bouncer en la shell.

[Hacklabz@shell bouncer]$ ./bouncer 
aqui el daemon del la shell
Coded by el author del bouncer 
--Using conf file ./bouncer.conf 
--Configuration: 
Daemon Port......:8546 
Maxusers.........:2 
Default conn port:6667 
Pid File.........:./pid.bnc 
Vhost Default....:Made-in-shell.com 
Vhost entry......:shell.com 
Vhost entry......:shell.com
Vhost entry......:shell.com
Process Id.......:1686 
Exit ./bouncer{7} : Successfully went into background. 
[HacKLabz@shell bouncer]$ 

(2) Vamos a un cliente de IRC : 

/server Shell.com ((El puerto de la shell))

Recueden que si el puerto esta en uso debes de utilizar otro 
Nunca utilizar 21 23 80 8080 por que seria estupido nunca lograriamos conectarnos por esos puertos

(3) Ok cuando se este conectaando al councer te pedira un pass y user
 

[00:00] -BOuncer- You need to say /quote PASS 

Ok pulsamos: 

/quote PASS Mypasswd 


(4) Nos conectamos al servidor con::::

/quote CONN Server 

ejemplo: /quote CONN IRC.com
ejemplo2: /quote CONN iIrc.com 1000

5) ok si tienen dudas pongan help:P



BY PROXIES

Bouncing through proxies
eS es lo mas comun seria algo asi

    [your computer] -> [proxy] -> [website] 
http://proxy.com:80/http://proxy2.com:80/http://proxy3.com:8000/http://site.com




BY WINGATES >>><<<<<


Pues como ya sabemos los wingates son server de proxy's
Seria casi lo mismo que conectarnos a una shell explicacion?????

Servervulnerable.com 21
Buscamos los exploits correspondientes para dicha version del wingate 
((wingate tambien sirve como servidor proxy))


Primero que todo para empexar este tema de hacking debemos de saber de seguridad entonces empezemos
La mayoria de estos programas son para la seguridad si quieres los bajas y si no no 
lo unico indispenseble para el hacking es la cuenta shell y los clientes de ftp y telnet
1. Debemos de tener un cliente y server de Telnet
2. Debemos de tener un cliente y server de Ftp
3. Un Firewall potente Podria ser el Tiny firewall o el Norton Firewall
4. Una cuenta Shell para poder compilar los xploits en ella (La cuenta Shell la podemos 
conseguir en cualquier parte pero aqui les dejo el link para que no la busquen telnet://sdf.lonestar.org 
Despues de ser la mas vieja en la red y sigue siendo la mejor.
Una cuenta shell es lo que le llaman en espanol una 
cuenta cascara osea que tu puedes subir en ella los proxys y los bouncers para no ser detectados)
Un buena hacker subiria a la shell mas o menos 5 o 6 bouncer para poder desbiar nuestra ip por 
otra parte para que sea imposible la deteccion.
5. Un scaneador de puertos les sugiero el SuperScan 3 o 4 pero el 3 es el mas potente y mas rapido
Pero ahy uno que es el mas poderoso de todos y es el LANguard Network Security Scanner 
Este lo utilizo yo pero es debes de desactivar el firewall 
para poder que funcione con este scaneador puedes saber que bugs tiene la pagina o la pc
6. Scaners de bugs como el CGI Unicode Cis.(este es mas que todo para las webs)
7. Seria indispensable tener un Crackeador por fuerxa bruta yo utilizo el Brutus por 
lo que es muy bueno y te deja mandar archivos a a otras pcs como si fueraan xploits para obtener root. 
Pero el Unico problema de este es que debes de desactivar los firewalls 
para poder que corra por que o sino nunca te servira por que el brutus trabaja 
con los puertos de tu pc como 60%
8. Tambien seria bueno tener un encripatador para tus archivos por ejemplo si eres 
de las personas que se te olvida las claves o por si acaso tienes muchas clavex y las guardas 
en archivox de texto es mejor que te bajas un encriptador para que ninguna persona pueda leer
lo que dice ahi.
9. Otra cosa muy importante un programita peque~o en el que tu le colocas el host y te da la 
ip ese programa es muy importante ejemplo: Host: msn.com ========== Ip=207.68.172.246
10. Otra de las cosas es tener un flood de puertos Como el UdpFLood Eso nos sirve para poder
desabilitar los puertos de una web o de una web para podernos meter pero ya saben vamos contra el reloj
11. Hay una forma no tan complicada de manejar la Shell por que la shell si es complicadisima 
Por ahy en la red me encontre con un programa que les dara mucha ayuda para los principiantes
con la shell El programa se llama SSHSecureShellClient-3.2.2 
ESte es un cliente de la shell sera de mucha ayuda para aquellas personas que no la saben manejar.
12. Debemos de tener el NetCat
13. El subseven tambien.
LenGuaje nuevo por el dia de Hoy sera 
Bug:
Es un error en programación, es decir, cuando encontramos un error en un programa se llama: Bug
Scanner:
se trata de programas que permiten rastrear la red en busca de puertos abiertos por el cual acceder y 
manipular un sistema o introducir un virus o trayano



Ok empexaremos con un cliente de telnet Para poder intruducirnos en la pc Victima en internet a muchos 
como los hay freeware y shareware Ok No importa ahy 
unos muy bueno otros malos en fin descojan el que quieran Yo utilizo el 
El NdTelnet Es el mas pequeno del mundo solo pesa 50 kb y es muy bueno aa tambien sirve como server 
tambien ok podemos cojer ina ip para mirar si si tiene el puerto 23 abierto 
( Solo PCS tienes puerto 23) Por ejemplo podemos cojer unas ips por ejemplo Cojan el scaner de ips y 
hagan un scan de 81.225.78.0 a 81.225.78.255 y le apareceran muchas ips con 
puertos abiertos Unas van a estar con el puerto 21(ftp) 
otras con 25(smpt) Etc...Ok despues cojeremos una que tenga el puerto 21 abierto para mirar si nos deja 
entrar como anonimos o invitados Cojeremos nuestro Atacante por 
fuerxa bruta (yo utilixo el brutus es muy bueno por que se coneta a todos los puerto) ok 
Entonces modificamoslas listas de passwords y usuarios a sus gustos y empiexan a hacerle el 
ataque si por si acaso el ataque no empiexa desactiven sus firewalls o  otra razon sera que 
no deja que le hagan ataque osea configuran el server de ftp para que solo entren 1 passwd por minuto
o un passwd por 9 segundos en fin .......Nos tocaria que Tumbarles el puerto 21 para que nos 
deje trabajar tranquilos ENtonces nos bajamos un floodeador de puertos y nuke para poder tumbar
el puerto y volverlo sensible una vex que agamos esto vamos contra el tiempo por que el firewall
y la pc trataran de componer el puerto para dejarlo normal osea que lo mejor es que lo hagan rapido...
aaaahahha no se les olvido provar primero Los USer y passwd mas esenciales ejemplo:






Login:                                Password: 
Admin                                 admin
root                                  root





Estos son defaults mas que todo para unix
Pero para windows ahy uno muy simple eso si no se si todos lo tienen el mio yo lo tengo con 
contrase~a Seria asi de esta manera ...cuando formateas windows Y lo estas instalando el te va
a pedir una contrase~a para que el administrador del equipo coja control la mayoria de las veces
no le colocan contrase~a pero ese es el problema por que si alguien te llegua a cojer la ip estas
muerto por la sencilla razon que:



Login:Administrador     Login:Administrador   Login:Administrador
Pass:Administrador      Pass:                               Pass Invitado
Login:Administrador     ESto aveces podria ir en ingles osea Administrator Guest
Pass:Anonimo             Anonymous en fin hay les dejo mucha informacion


 
Todo esto lo pueden hacer en cualquier puerto(25,23,110,25,80,8080)
Ok Una vex adentro Podran empexar a utilixar los comandos de msdos:
Menu Inicio - Ejecutar - cmd
nos metemos por el puerto el puerto que ayamos cojido root(admin) o lo pueden intentar por ftp que 
es mas rapido.Netstat, Tracert, Ping, ftp, telnet, route, ipconfig, nbstat, Arp, net...
Estos son los comandos mas utilizados en la red
una vex Conectados COn ftp 
vamos a hacer este comando ''''''''get''''''' ese es para leer y abrir documento y a veces 
tambien abre programas ese lo utilixamos para mirar los passwds 
(esto lo utilizamos si entramos como invitado o anonimo)
Los comando para pegar borrar subir y bajar archivos estan el tuto numero 1 ok Hasta la proxima 
Hoy veremos Comoo hackear webs es algo pareccido a lo de las pcs pero bueno llegamos hasta al 
punto que hacemos el ataque y todo eso despues entramos como invitado o anonimo una vex que hagamos 
eso nos vamos a esta parte /etc/passwd ahy conseguiras los passwd de la pagina web o sino nos vamos
a /etc/shadow pero como ya sabes estos 
passwd vienen encriptados de una manera asi:


usuario    - 
contrase¤a - 
ID         -
grupo      -  
descripcion- 
directorio -  
shell      - 


 Un ejemplo podria ser: 
    pepe:234abc56:9999:13:pepe HaCkZaTaN:/home/dir/pepe:/bin/pepe

Nombre de usuario: pepe 
Password encriptado: 234abc56 
Usuario numero: 9999 
Numero de grupo: 13 
Descripcion: pepe HaCkZaTaN
Directorio de acceso: /home/dir/juan
Shell: /bin/pepe
Ok si por si acaso esta informacion aparece 
root:*:0:1:HaCkZaTaN:/:/bin/sh
ftp:*:202:102:Anonymous FTP:/U1/ftp
ftpadmin:*:203:102:ftp Administrator:/u1/ftp

Bueno eso seria todo, disculpen las faltas de ortografia.


[ HackZatan ]                                              [Hackzatan@hacklabz.Net]







 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

 03:.     [ Programando en C con el SrOscuro ]              [SrOscuro]

                                               [sroscuro@hacklabz.net]

- Introduccion
- Tipos de Datos
- Definicion de comandos comunes en C
- Empezando a Programar
- Glosario
- Agradecimientos


 ===============
| Introduccion  |
 ===============

El lenguaje C es un lenguaje de programacion de nivel medio, es decir, puede ocupar comandos
de lenguajes de alto nivel y bajo nivel, normalmente este lenguaje se ocupa para hacer
diferentes tipos de programas ya que tiene una gran compatibilidad con casi todos si no es que
todos los sistemas operativos, UNIX fue desarrollado bajo este lenguaje, Linux tambien, claro,
hay que tomar en cuenta que Linux tiene partes de Unix dentro de el, eso es algo que lo hace
sumamente poderoso en varios aspectos.

El lenguaje C al tener gran compatibilidad con la mayoria de los sistemas operativos se ocupa
para desarrollar:

	1. Sistemas Operativos
	2. Compiladores
	3. Programas sencillos XD
	4. Procesadores de Palabras
	5. Controladores de RED
	6. Bases de Datos
	7. Interpretes
	8. ETC

El lenguaje C es un lenguaje estructurado, es decir, que puede sorportar el uso de bloques. Un
bloque es un conjunto de secuencias relacionadas logicamente.

Los lenguajes estructurados son caracterizados por:
	
	- El soporte de variables* locales y bucles*
	- El uso del famoso GOTO* no es recomendado aun por ser permitido
	- Permitir compilar* por separado las subrutinas

Para comcluir esta breve introduccion hay que hacer notar unos significados que posteriormente
estaremos utilizando como son interpretes y compiladres.

Estos terminos se refieren a la forma en que un programa  es  ejecutado. Los interpretes y 
compiladores son programas que operan sobre  el  codigo fuente de su programa. El codigo fuente 
es el texto del programa  que  uno escribe.

Un interprete lee el codigo fuente del programa linea a linea, llevando a cabo cada vez las 
instrucciones especificas contenidas en la linea.

Un  compilador  lee  el  programa  entero y lo convierte en codigo objeto (o codigo binario, o 
codigo maquina) directamente ejecutable por la computadora.

BASIC normalmente es interpretado, el C casi siempre es compilado.

El proceso de compilacion lleva tiempo pero produce un programa directamente ejecutable que se 
ejecuta mucho mas rapidamente que un programa interpretado.

Con  los programas compilados se introducen, entonces, dos conceptos nuevos, a saber "tiempo de 
compilacion" y "tiempo de ejecucion" que,  por desgracia, se  encuentran  muy  a menudo  asociado
a  la  palabra error: "compile-time errors" y "run-time errors".


 ================
| Tipos de Datos |
 ================

Los tipos de datos en lenguaje C son varios, como los muestro ahora:

- Declaracion de Variables -

Int <- Entero -> Tipo de dato para valores numericos sin decimales
Long <- Largo -> Tipo de dato para valores numericos con decimales
Char <- Caracter -> Tipo de dato para valores de caracteres, pueden ser tipo cadena o simples
FILE <- Archivo -> No necesita explicacion XD
Doble <- Doble -> Tipo de dato para valores numericos de longitud larga
struct <- Estructura -> Tipo de dato para registros, puede almacenar gran cantidad de datos

- Para lectura escritura

Entero -> %d, %i
Long -> %l
char -> %c (para un solo caracter), %s (para muchos caracteres, o llamado Cadena de Caracteres)




=====================================
| Definicion de comandos comunes en C |
 =====================================

Las funciones* mas usadas en lenguaje C para trabajos sencillos ( que son con los que se pueden
empezar a programar XD ) seran los siguientes ( Los mostrare en forma de lista, seguidamente de
su descripcion y cual es su sintaxis ):

=================================================================================================
   Funcion	|	               Descripcion                   |           Sintaxis
=================================================================================================
		|						     |
printf		| Esta función lo que hace es escribir en pantalla   | printf("expresion",
		| lo que nosotros le especifiquemos dentro del	     |         argumentos);
		| codigo fuente, es decir, los datos resultantes de  |
		| alguna operacion				     |
=================================================================================================
		|						     |
scanf           | Esta funcion tiene la capacidad de leer desde      | scanf("formato",variable);
		| teclado algun dato especificado dentro de su       |
		| sintaxis					     |
=================================================================================================
		|						     |
gets		| Esta funcion nos sirve para leer los datos de tipo | gets(variable cadena);
		| cadena (anteriormente nombre los tipos de datos    |
		| existentes.				             |
=================================================================================================
		|						     |
FILE		| Constante que especifica un tipo de dato           | FILE variable;
=================================================================================================
		| 						     |
fopen		| Funcion para abrir algun archivo especificado      | fopen("archivo","modo");
=================================================================================================
		|						     |
fprintf		| Funcion para imprimir dentro de algun archivo	     | fprintf("archivo",
		|						     |   "expresion",argumentos);
=================================================================================================
		|						     |
fscanf		| Esta funcion nos permite leer datos dentro de	     | fscanf("archivo",
		| algun archivo especificado			     |       "formato",variable);
=================================================================================================
		|						     |
fclose		| Cierra el archivo				     | fclose("archivo");
=================================================================================================
		|						     |
getch		| Da una pausa en la ejecucion del programa	     | getch();
=================================================================================================
		|						     |
clrscr		| Limpia o borra, como se le quiera llamar, todo lo  | clrscr();
		| lo que esta escrito en nuestra pantalla            |
=================================================================================================

Estas las funciones que vamos a usar momentaneamente en lo que nos introducimos poco a poco en el
entorno del lenguaje C



=======================
| Empezando a Programar |
 =======================

Ejemplo 1:

En este articulo solo mostrare como programar en manera basica, sin tantas complicaciones, ya que
si nos vamos a lo mas avanzado no entendriamos nada XD, entonces, para entender mas sobre esto
te recomiendo tener a la mano algun compilador en C, recomendaria mas el que compila bajo modo
MS-DOs, ya que es mas practico, o mejor aun, si tienes el Editor de lenguaje C, para ir mostrando
lo que hace cada linea. Empezemos con este primer ejemplo (Ire explicando despues del ejemplo lo 
que hace cada linea):

1:  #include <conio.h>
2:  #include <stdio.h>
3: 
4:  main()
5:  {
6:   clrscr();
7:   printf("Hola Mundo!!! XD");
8:   getch();
9:   return 0;
10: }

-> Explicacion <-

Lo que hace ese pequeño codigo en C es:
	-> 2 Primera lineas: Declaramos o abrimos las librerias que vamos a ocupar, pueden ser
	   tantas como las que vayamos a ocupar en nuestro programa
	-> main(): Es una funcion, que declara el cuerpo de nuestro programa
	-> clrscr(): <- Ya mencione para que sirve dicha funcion
	-> printf: Ya sabemos para que sirve esta funcion, aqui lo que hacemos es escribir un
	   mensaje en pantalla, este mensaje fue "HOLA MUNDO!!! XD"
	-> getch(): Hacemos una pequeña pausa, esa pausa demora la cantidad de tiempo dada por el
	   usuario, como?, pues hasta que el usuario presione alguna tecla XD
	-> return 0: Definimos que vamos a liberar espacio en memoria

Hay dos caracteres o simbolos que no he definido, que son las llaves, las llaves nos van a
mostrar un INICIO y FIN de alguna funcion, en PASCAL seria BEGIN y END. El significado de estas
llaves son:

Llave abierta ( { ): Indica el principio de la funcion o bucle (los bucles los mostrare despues)
Llave cerrada ( } ): Indica el fin de la funcion o bucle

Ejemplo 2, Haciendo alguna operacion matematica:

1:  #include <conio.h>
2:  #include <stdio.h>
3:
4:  main()
5:  {
6:   int var1,var2,var3;
7:   clrscr();
8:   printf("Hola usuario, vamos a hacer una suma XD");
9:   printf("\nIntroduce el primer valor: ");
10:  scanf("%d",&var1);
11:  printf("Introduce el segundo valor; ");
12:  scanf("%d",&var2);
13:  var3=var1+var2;
14:  printf("El resultado es %d",var3);
15:  getch();
16:  return 0;
17: }

Algunas funciones ya la hemos explicado, ahora explicare solo algunas que no he mostrado

En la linea 9, hemos escrito un "\n", ese "\n" lo que va a realizar es un salto de linea, es
decir, escribira en la linea siguiente dentro de nuestra pantalla, si no escribimos ese par de
caracteres, la frase se escribira siguiendo a alguna frase escrita anteriormente

En la linea 10, al momento de leer, devemos especificar con el operador & la variable, este 
operador nos denota una direccion, que va a ser en el lugar donde se va a guardar el valor 
introducido desde teclado (por el usuario).

En las lineas 10, 12 y 14, hemos puesto un %d, que significa el tipo de valor a tomar y a mostrar
al momento de escribir en pantalla

Estos dos ejemplos son basicos, pero ahora mostrare algunas otras cosas que se pueden poner
dentro del codigo fuente del programa como son:

-> Los comentarios <-

Los comentarios se usan para mostrarle a un futuro programador lo que realizan las lineas mas
importantes, asi como algunas reseñas.

Los comentarios se puede crear de la siguiente manera:

/* Comentario de una sola linea */

/* Comentario 
   de
   multiples
   lineas
*/

// Comentario de una sola linea

-> Las Variables <-

Las variables van a ser tipos de datos que van a capturar valores desde teclado o usados por el
programa, de hecho estos tipos de datos tienen una funcion especifica, que es la de ir cambiando
de valor cuantas veces sea.

Hay variables que se leen igual, pero la escritura es diferente; eso no es problema, ya que son
distintas variables, es decir, por ejemplo,

int Var1,var1,VAR1;

Ahi declaramos 3 variables, sin embargo se leen igual, pero... la escritura es diferente.

-> El GOTO <-

El goto es una palabra reservada dentro del lenguaje c, que es un IR A, es decir, podemos ir de
una linea a otra especificandole dentro del codigo y su sintaxis, aunque es muy eficiente esta
palabra, no es muy recomendable su uso, ya que puede provocar problemas al estar ejecutando
el programa.

La sintaxis del GOTO puede estar de dos maneras:

manera 1:

goto <identificador>;
 .
 .
 .
<indentificador>:

<identificador>:
 .
 .
 .
goto <identificador>;

Nota: Cabe aclarar que los puntos ( . ) son las lineas que siguen dentro del codigo.

Esto ha sido solo la introduccion de la programacion en lenguaje C, espera nuestra siguiente
E-Zine para seguir aprendiendo sobre este maravilloso lenguaje, despues hablare sobre cosas
complejas, esto es solo para empezar.

Saludos y Buena suerte!!!


[ SrOscuro ]                                       [sroscuro@hacklabz.Net]





-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

 04:.     [ Introduccion a los Sniffers ]                          [J@que]

                                              [jaque_alrey@topmail.com.ar]



SNIFFERS 
--------


 Los <<sniffers>>, tal y como se conocen son una de las utlilidades mas 
usadas en un hackeo tipico.
Esto es asi principalmente porque los sniffers permiten a los atacantes 
actuar sobre todos los sistemas que envian algun trafico al host que ha 
sido capturado, asi como sobre cualquier otro usuario o sistema 
conectado al segmento de la red local, totalmente ignorante de la 
existencia de un espia.
Estas aplicaciones capturan, interpretan y almacenan los paquetes que 
viajan por la red para analizarlos posteriormente.
El uso de esta herramienta es peligrosa para nuestra victima ya que 
imagina la enorme cantidad de datos sensibles que pasan a travez de una 
red con mucho trafico, incluso en un poco tiempo.  Estos datos incluyen 
pares de nombres de usuarios /contrase¤a, mensajes de correo electronico 
confidenciales, transferencia de archivos con informes, etc. En un 
momento u otro, si esta informacion  se envia a travez de una red, se 
conbierte en bits y bytes que son visibles para cualquier escucha 
"indiscreta" que emplee un sniffer en algun punto de la ruta de datos.

A continuacion mostrare un ejemplo de la huella que produce una 
herramienta de este tipo. El ID del usuario es <guest> (invitado) con 
una contrase¤a <guest>. Aparecen tambien todos los mandatos que siguen 
al inicio de sesion.


 - - - - - - - - - - - - [SYN]     (slot  1)
pc6  =>> target3  [23]
%&&  #  '$ansi" !guest
guest
ls
cd  /
ls
cd /etc
cat  /etc/passwd
more  hosto.equiv
more  /root/.bash_history

Como Funcionan los Sniffers:
El modo mas sencillo de comprender su funcionamiento  es examinando la 
forma en que funciona un sniffer en una red Ethernet. Naturalmente 
existen sniffers para cada tipo de red de transmicion de datos,  pero, 
puesto que Ethernet es la mas comun, vamos a concentrarnos en ella. 
Generalmente se aplican los mismos principios para otras arquitecturas 
de red.

Un sniffer de Ethernet es un software que trabaja en conjunto con la 
tergeta de interfaz de la red (NIC, Network Interface Card) para 
absorber indiscriminadamente todo el trafico que este dentro del unmbral 
de audicion del sistema de escucha y no solo el trafico que no vaya 
dirigido a ella o a la direccion de difucion de la red, por lo que el 
sniffer debera hacer que la targeta entre en un estado especial 
denominado modo promiscuo, en el que recibira todos los paquetes que se 
desplazan por la red.

Una vez que el harware de la red se encuentre de modo promiscuo, el 
software del sniffer puede capturar y analizar  cualquier trafico que 
pase por el segmento local de Ethernet.  Eso limita de algun modo el 
alcance de un sniffer, puesto que no sera capaz de captar el trafico 
externo al dominio local de la red ( es decir, mas alla de los routers, 
conmutadores u otros dispositivos de segmentacion).  Es obvio  que un 
sniffer habilmente situado en la columna vertebral de la red, en un 
elace interred, o en otro punto de agregacion de la red, podra capturar 
un volumen mayor de trafico que otro colocado en un segmento aislado de 
Ethernet.

Sniffers conocidos:

Sniffit                
http://reptile.rug.ac.be/~coder/sniffit/sniffit.html               
Funciona con: Linux, SunOs, Solaris, FreeBSD e Irix.

tcpdump         http://www-nrg.ee.lbl.gov/              
Funciona con: Se puede utilizar en una amplia variedad de plataformas.

linsniff               http://www.rootshell.com/               
Funciona con: Dise¤ada para asiprar contrase¤as en Linux.

solsniff             http://www.rootshell.com/               
Funciona con: Sniffer modificado para funcionar en sistemas Sun Solaris 
2.x

Deteccion de Sniffers:

Hay dos tecnicas basicas para detectar sniffers: una basada en host y 
otra basada en la red.  La tecnica mas directa basada en host es 
determinar si la targeta de red del sistema esta funcionando en modo 
promiscuo.  En UNIX, existen varios programas que pueden realizar esta 
tarea como el Check Promiscuous mode (cmp).

Los sniffers tambien se muestran en la lista de procesos y tienden a 
crear, con el tiempo, grandes archivos de registro, asi que sencillos 
scripts de UNIX que utilicen los mandatos ps, lsof y grep pueden sacar a 
la luz alguna actividad sospechosa de tipo sniffer.  Los intrusos mas 
inteligentes casi siempre disfrazan el proceso de sus sniffers e 
intentan esconder en un directorio oculto los archivos del registro que 
crean, por lo que estas tecnicas no son siempre efectivas.

Final:

Espero que esto les sirva de mucho para entender lo que es esta 
herramienta llamada sniffer y que puedan comprender su funcionamiento y 
como defenderse de el mismo.
Bueno antes de terminar, esta parte se la dedico a mi Hermano Maurex que 
lo extra¤o mucho y que se que pronto estaremos juntos.
Adios y que les sea leve.



[ J@que ]                                 [jaque_alrey@topmail.com.ar]




-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

 04:.     [ Shells, ¿Sabes que son? ]                       [Status-x]

                                               [status-x@hacklabz.net]



==========================
    Introduccion     
==========================

Bueno pues otro tutorial bien pues tratare de explicar todo de manera muy breve.

Texto 1 / 2

- Status-x

Comentarios en : status-x@hacKLabz.neT

==========================
   ¿Que es una Shell?
==========================

Bueno pues seguramente muchos de uds. habran oido hablar de las famosas
shell, pero te has puesto a preguntar ¿ que es una shell ? antes de conseguirla!!!

Pues bien una shell es un interprete de comandos en Unix y es el equivalente
del COMMAND.COM del MS-DOS, es decir convierte todo lo que tecleamos y lo convierte
en un programa que se ejecuta.

No hay solo una shell sino varias.

El más simple es sh, o Bourne shell, que es tan simple que practicamente nadie utiliza, 
sin embargo, es el más comun a todos los sistemas, y además, ciertos programas lo usan, 
sobre todo los programas de instalación
(precisamente por eso, por ser el minimo comun denominador de los shells). 

Algunos shells se derivan de este, como el bash (Bourne again shell, el oficial de la GNU), 
y el Korh shell, ksh.

La o el shell mas utilizado es el C shell y sus variantes sobre todo el tcsh que es el que usa el 
ordenador de la Escuela de informatica de México. 
El tcsh tiene mas facilidades para edición de la línea de comandos, 
completa los nombres de los ficheros, y muchas más cosas.

El shell maneja un entorno de trabajo con una seria de comandos internos, como sabras 
la mayoria de los comandos en UNIX son externos, como por ejemplo el ls aunque algunos tambien son internos.

El shell se puede cambiar de diferentes formas:

Pedírselo al administrador del sistema 

En algunos casos se puede usar chsh; como hay que acceder al fichero de passwords, normalmente pide la clave. 

Simplemente, ejecutar el shell que uno quiera; por ejemplo, tcsh 



===========================
    Comandos Simples
===========================

Bueno pues estos son algunos de los comandos mas usados aunquela mayoria solo en 
Shell Scripts o en programas de ejecucion por lotes.

alias.- Alias permite llamar a un comando, con sus opciones, alias dir -alt permitira
sustituir el comando dir, por poner un ejemplo. La orden alias sin nunguna opcion
da todos los comandos que hay definidos de esa forma; y un alias elimina un alias.
Con alias se pueden formar comandos complejos, separando varias órdens por ; por ejemplo:


alias pushd 'pushd \ !*;cd .'

En ese ejemplo el alias sustituye pushd por la secuencia de comandos indicados, en este caso
se usa el nombre de una orden ya existente, los alias la sustituyen y tienen mas prioridad que ellas.

Por ejemplo para que cambie el directorio en el PROPMT hay que hacer un alias:


alias cd 'chdir \!*;set prompt="(%B%M%b) %~> ";echo
-n ""'

En bash ( ya vimos que es bash ) es de manera diferente:

alias dir= '/bin/ls \$LS_OPTIONS
  --format=vertical'

echo.- Echo simplemente escribe lo que tiene detrás, si acaso metido entre parentesis. O sea, como en MSDOS. 
Tiene alguna ventaja más, por ejemplo, puede usar globbing (es decir, expansión de comodines de ficheros) 
y además se sustituyen las variables por su valor. 


==================
    Despedida
==================


Bueno pues esto solo es un tutorial de dos , en el proximo seguiremos viendo sobre Shell y veremos las variables.
Por lo que espera el siguiente de esta E-zine para poder seguir leyendo este tutorial, en el
próximo tutorial veremos como conseguir una cuenta shell y sus variables




[ Status-x ]                                                        [status-x@hacklabz.net]














	HERRAMIENTAS DE WINXP PARA EL HACK


1.-  netstat
2.-  nbtstat
3.-  telnet
4.-  shutdown
5.-  finger
6.-  ftp
7.-  ping
8.-  nslookup
9.-  tracert



1.- NETSTAT

La funcion de este comando es mostrar estadísticas del protocolo y conexiones TCP/IP actuales.

SINTAXIS:

NETSTAT [-a] [-e] [-n] [-o] [-s] [-p proto] [-r] [intervalo]


OPCIONES:

  -a       		Muestra todas las conexiones y puertos de escucha.
                		(Normalmente, el extremo servidor de las conexiones no se
                		muestra).
  -e           		Muestra estadísticas Ethernet.  Se puede combinar con la
                		opción -s.
  -n            		Muestra números de puertos y direcciones en formato
                		numérico.
  -o            		Muestra la Id. de proceso asociado con cada conexión.
  -p proto      	Muestra conexiones del protocolo especificado por proto;
                		que puede ser TCP, UDP, TCPv6 o UDPv6. Si se usa con la opción
 -s 		para mostrar estadísticas por protocolo, proto puede ser
                		TCP, UDP, TCPv6 o UDPv6.
  -r            		Muestra el contenido de la tabla de rutas.
  -s            		Muestra estadísticas por protocolo. De forma predeterminada,
                		se muestran para IP, IPv6, ICMP, ICMPv6, TCP, TCPv6, UDP y
                		UDPv; se puede utilizar la opción -p para especificar un
                		subconjunto de los valores predeterminados.
  intervalo		 Vuelve a mostrar las estadísticas seleccionadas, haciendo
                		pausas en el intervalo de segundos especificado entre cada
                		muestra. Presione Ctrl+C para detener la actualización de
                		estadísticas. Si se omite, netstat imprimirá la información
                		de configuración una vez.



2.- NBTSTAT

Muestra las estadísticas del protocolo y las conexiones actuales de TCP/IP
usando NBT (NetBIOS sobre TCP/IP). Este comando tamben sirve para explotar 
el famoso bug  de NetBIOS (la explicacion para explotar este bug esta abajo)

SINTAXIS:

NBTSTAT [ [-a Nombreremoto] [-A dirección IP] [-c] [-n] [-r] [-R] [-RR]
[-s] [-S] [intervalo] ]


OPCIONES:

  -a  	 (estado del adaptador) Hace una lista de la tabla de nombres de
       	los equipos remotos según su nombre
  -A   	(estado del adaptador) hace una lista de la tabla de nombres de
      	 los equipos remotos según sus direcciones de IP.
  -c   	(caché)   Hace una lista de los nombres [equipo]remotos de la caché
       	NBT y sus  direcciones de IP
  -n   	(nombres)   Hace una lista de los nombres NetBIOS locales.
  -r   	(resueltos)   Lista de nombres resueltos por difusión y vía WINS
  -R   	(Volver a cargar)   Purga y vuelve a cargar la tabla de nombres de
       	la caché remota
  -S   	(Sesiones)   Hace una lista de la tabla de sesiones con las
       	direcciones de destino de IP
  -s   	(sesiones)   Hace una lista de la tabla de sesiones convirtiendo
       	las direcciones de destino de IP en nombres de equipo NETBIOS.
  -RR  	(LiberarActualizar) Envía paquetes de Liberación de nombres a WINS
       	y después, inicia Actualizar


-EXPLOTACION DEL BUG DE NetBIOS-

Aki explicare como hacer el asalto a dicho bug, cabe aclarar que para esto 
tenemos que tener bien cnfigurada nuestra maquina (la configuarcion para
esto no la explicare en este articulo ya que ese no es el objetivo de este texto)

Hay varias formas de hacerlo, ante todo cuando le hacemos un port scan al server si el Puerto
139 esta abierto, eso es una buena señal ya que ese el puerto que utiliza el Netbios

bueno lo primero que tenemos que hacer es abrir una ventana de "simbolo del sistema " 
o ms-dos como es mejor conocido, en dicha ventana teclearemos nuestro comando
seguido de las opciones correspondientes, de la siguiente manera:

c:\> nbtstat -A 10.10.10.10  <<< aqui tambien podemos colocar un host asi:  host101010.some.com

si todo va bien hasta aki obtendremos algo como esto:


		NetBIOS Remote Machine Name Table

  		 Name               Type         Status
		---------------------------------------------
		victimamachine        <00>  UNIQUE      Registered
		victimagroup       <00>  GROUP       Registered
		victimamachine        <20>  UNIQUE      Registered
		victimamachine       <03>  UNIQUE      Registered
		victimamachine         <03>  UNIQUE      Registered
		victimagroup        <01>  GROUP      Registered

O.k una ves que has llegado aki lo siguiente es facil:

C:\>net view \\10.10.10.10

Shared resources at \\10.10.10.10


		Share name   Type         Used as  Comment

		-------------------------------------------------------------------------------
		Accelerator  Disk                  Agent Accelerator share for Seagate backup
		Inetpub      Disk
		mirc         Disk
		NETLOGON     Disk                  Logon server share
		www_pages    Disk
		The command completed successfully. 


bueno aki estan nombrados los archivos compartidos, y lo que sigue ya es tarea tuya
p.ej.: si quieres ver el contenido solo has esto:

c:\>dir \\10.10.10.10\www_pages.    xD




3.- TELNET

       eh aki el famoso telnet, seguramente ya has oido de el :-), bueno el telnet sirve mas que nada
para estableser conexiones con un servidor determinado.

SINTAXIS:

telnet 10.10.10.10 23  <<< el numero 23 es el pueto al que quieres conectarte, puedes poner 
                                                 cualquiera por ejemplo el 80 o el 25 ;-)

OPCIONES: 

c    - close	cierra la conexión actual
d    - display	muestra los parámetros de visualización
o    - open             	conectarse a un sitio
q    - quit             	salir de telnet
set  - set              	establecer opciones (escriba 'set ?' para mostrar lista
sen  - send       	envía cadenas al servidor
st   - status           	escribe la información de estado
u    - unset            	desactivar opciones (escriba 'unset ?' para mostrar
                        	lista)


4.- SHUTDOWN

      bueno la verdad esta no es una herramienta para el hacking, es solo la herramienta de apagado 
remoto que trae el winxp, esto no es muy util pero la puedes usar para ganar tiempo 
mas que nada en los cibers. Como todos sabemos esta es la herramienta que usa el virus blaster
que volvio locos a todos los sistemas win (como siempre el SO mas vulnerable jajaja xD).

SINTAXIS:

shutdown [-l | -s | -r | -a] [-f] [-m \\equipo] [-t xx] [-c "comentario"] [
-d up:xx:yy]


OPCIONES:

-i                		Mostrar interfaz GUI, debe ser la primera opción
-l                     	Cerrar sesión (no se puede usar con la opción -m)
-s                    	Apagar el equipo
-r                     	Apagar y reiniciar el equipo
-a                     	Anular el apagado de equipo
-m \\equipo            	Equipo que se apagará/reiniciará/anulara
 -t xx                   	Establecer el tiempo de espera de apagado en xx
                               	segundos
-c "comentario"       Comentario de apagado (máximo, 127 caracteres)
-f                      	Fuerza el cierre de aplicaciones sin advertir
-d [u][p]:xx:yy         	Código de motivo de apagado


                                u	 	es el código de usuario
                                p 		es el código de apagado planeado
                                xx 	es el código primario del motivo de apagado
                             		 (entero positivo menor que 256)
                                yy 		es el código secundario del motivo de apagado
                               		(entero positivo menor que 65536)




5.-  FINGER

         Esta es una utilidad bastante simple, pero nos puede servir ya que lo que hace el finger 
es darnos informacion detallada de elgun usuario en espcial
      

SINTAXIS

FINGER [-l] [user]@host

OPCIONES:

  -l        	Muestra información en un gran formato de lista.
  user     	 Especifica el usuario del que desea obtener información. Omi
           	 parámetro del usuario para mostrar información acerca de tod
            	usuarios del host especificado.
  @host     Especifica el servidor en el sistema remoto en cuyos usuario
           	 recabar información.




6.-  FTP

         El ftp (file transfer protocol o protocolo de transferencia de archivos), nos  sirve como su nombre lo indica
para bajar, subir y ver informacion de la victima.com, y bueno si te pones listo y exploras bien a tu victima.com pues
le puedes sacar el pass.


SINTAXIS:

c:\>ftp 10.10.1.10

OPCIONES:



        	      delete          	literal         prompt           send
             	      debug           	ls              	 put                  status
append           dir             	mdelete     pwd                trace
ascii               disconnect     	mdir           quit                  type
bell                 get             	mget          quote              user
binary            glob            	mkdir         recv                verbose
bye                 hash            	mls             remotehelp
cd                   help           	mput          rename
close             lcd             	open          rmdir




7.- PING

         Esta utilidad sirve mas que nada para testear a un determinado serv, y paraque queremos testear?, pues
es solo para ver si nuestra victima esta activa (osea conectada a internet)

SINTAXIS:

 ping    [-t] [-a] [-n cuenta] [-l tamaño] [-f] [-i TTL] [-v TOS]
             [-r cuenta] [-s cuenta] [[-j lista-host] | [-k lista-host]]
             [-w tiempo de espera] nombre-destino


OPCIONES:


  -t            		Ping el host especificado hasta que se pare.
                 		Para ver estadísticas y continuar - presionar Control-Inter;
                 		Parar - presionar Control-C.
  -a             	Resolver direcciones en nombres de host.
  -n cuenta      	Número de peticiones eco para enviar.
  -l tamaño      	Enviar tamaño del búfer.
  -f             		Establecer No fragmentar el indicador en paquetes.
  -i TTL         	Tiempo de vida.
  -v TOS         	Tipo de servicio.
  -r cuenta      	Ruta del registro para la cuenta de saltos.
  -s count       	Sello de hora para la cuenta de saltos.
  -j lista-host  	Afloja la ruta de origen a lo largo de la lista- host.
  -k lista-host  	Restringir la ruta de origen a lo largo de la lista- host.
  -w 	    	Tiempo de espera en milisegundos para esperar cada
                 		respuesta.


aki te muenstro un ejemplo de como usar el ping:

c:\>ping 10.10.10.10   <<< esto te dara un resultado asi:

Haciendo ping a 10.10.10.10 con 32 bytes de datos:

Tiempo de espera agotado para esta solicitud.
Tiempo de espera agotado para esta solicitud.
Tiempo de espera agotado para esta solicitud.
Tiempo de espera agotado para esta solicitud.

Estadísticas de ping para 10.10.10.10:
    Paquetes: enviados = 4, recibidos = 0, perdidos = 4
    (100% perdidos),


y que es lo que ha pasado??, pues esto quiere decir que el serv no responde y esto puede ser por 2 razones
la primera es que el serv no este activo y la segunda que el admin no nos haya salido tan !"$·%$%//%&  y tenga
un firewall bien instalado, pero si obtenemos algo como esto:



Haciendo ping a 10.10.10.10 con 32 bytes de datos:

Respuesta desde 10.10.10.10: bytes=32 tiempo<1m TTL=128
Respuesta desde 10.10.10.10: bytes=32 tiempo<1m TTL=128
Respuesta desde 10.10.10.10: bytes=32 tiempo<1m TTL=128
Respuesta desde 10.10.10.10: bytes=32 tiempo<1m TTL=128

Estadísticas de ping para 10.10.10.10:
    Paquetes: enviados = 4, recibidos = 4, perdidos = 0
    (0% perdidos),
Tiempos aproximados de ida y vuelta en milisegundos:
    Mínimo = 0ms, Máximo = 0ms, Media = 0ms


listo!!!! el serv esta activo y listo para un buen port scanning :-)



8.- NSLOOKUP

	El nslookup es una utilidad que  lo que hace es darnos el nobre host y la ip de un servidor determinado,
como puedes ver es algo sencillo pero aveces es muy util. ;-)

C:\>nslookup www.google.com.mx


DNS request timed out.
    timeout was 2 seconds.
*** No se puede encontrar el nombre de servidor para la dirección 148.246.249.4:
 Timed out
Servidor:  dns2.infosel.net.mx
Address:  148.246.247.126

Respuesta no autoritativa:
Nombre:  www.google.akadns.net	  <<<<<<
Addresses:  66.102.7.99, 66.102.7.104     <<<<<<      esto es lo que nos interesa ;-D
Aliases:  www.google.com.mx                   <<<<<<





9.-  TRACERT

          tracert es un comando que lo que hace es trasar la ruta de un paquete, esto abeces resulta interesante, yo
he llegado a localizar geograficamente a algunos serv gracias a esta simple utilidad


 SINTAXIS:

tracert [-d] [-h saltos_máximos] [-j lista_de_hosts] [-w tiempo_de_espera]
nombre_destino

OPCIONES:

-d                   		No convierte direcciones en nombres de hosts.
-h saltos_máximos  	Máxima cantidad de saltos en la búsqueda del
                         		objetivo.
-j lista-de-host    		Enrutamiento relajado de origen a lo largo de la
                         		lista de hosts.
-w tiempo_espera  		Cantidad de milisegundos entre intentos.



*******Ejemplo de un tracert******


C:\>tracert 10.10.10.10

Traza a la dirección www.victima.com [10.10.10.10]
sobre un máximo de 20 saltos:

  1   130 ms   140 ms   140 ms  acceso-mex18.terra.net.mx [200.39.61.2]
  2   171 ms   140 ms   124 ms  corecicsa-fe11.infosel.net.mx [148.246.32.1]
  3   624 ms   140 ms   140 ms  148.246.90.61
  4   218 ms   140 ms  1390 ms  148.246.102.1
  5  1296 ms   296 ms   155 ms  coreterra-MxMty-hssi010.infosel.net.mx [148.246.90.65]
  6   890 ms   155 ms   155 ms  148.246.81.20
  7   593 ms   171 ms   155 ms  P9-0-0-grtmtyte1.ri.telefonica-data.net [213.140.38.81]
  8   608 ms   140 ms   155 ms  A2-0-0-100-grtmtyte2.ri.telefonica-data.net [213.140.36.78]
  9  1187 ms   187 ms  1312 ms  P3-0-grtdaleq2.ri.telefonica-data.net [213.140.36.69]
 10   166 ms  1325 ms   171 ms  GE0-3-0-0-grtdaleq1.ri.telefonica-data.net [213.140.36.233]
 11  1156 ms  1593 ms   217 ms  So5-1-0-0-grtmiatc1.ri.telefonica-data.net [213.140.36.14]
 12   671 ms   265 ms   249 ms  So7-1-0-0-grtnycpt2.ri.telefonica-data.net [213.140.36.10]
 13  1281 ms   280 ms   249 ms  P10-0-grtwaseq1.ri.telefonica-data.net [213.140.36.237]
 14  1093 ms   280 ms   249 ms  GigabitEthernet1-0.GW5.IAD8.ALTER.NET [157.130.49.29]
 15  1312 ms   280 ms  1452 ms  0.so-5-1-0.CL2.IAD8.ALTER.NET [152.63.36.66]
 16  1763 ms   265 ms  1687 ms  0.so-3-0-0.TL2.DCA8.ALTER.NET [152.63.144.29]
 17  1529 ms   389 ms  1843 ms  0.so-4-0-0.TL2.DFW9.ALTER.NET [152.63.0.182]
 18  1482 ms   390 ms  1747 ms  0.so-7-0-0.XL2.DFW9.ALTER.NET [152.63.2.182]
 19  1931 ms  1968 ms  1859 ms  0.so-0-0-0.XR2.DFW9.ALTER.NET [152.63.102.6]
 20  1667 ms   342 ms  1436 ms  184.at-5-1-0.WR2.DFW9.ALTER.NET [152.63.96.97]
traza completa


ok y con esto termina este articulo    GRACIAS!!!!!!




DESPEDIDA:


Espero que les haya servido este aticulo, les doy gracias de antemano a las personas que han terminado 
de leerlo y al team  ""HaCkLaBz"" que me ha pedido que escriba este articulo para su E-zine, a las personas que
ya habian leido alguno de mis manuales espero que sigan la secuencia de todos los manuales que escribire
mas adelante en mi carrera en el submundo hacker ;-) y bueno para no aburrirte mi querido lector para cualkier duda,
aclaracion o sugerensia aki dejo mi mail.


polk@hacklabz.net                  ¡¡¡¡¡¡¡¡¡¡FeLiZ HaCkInG!!!!!!!!                         


Prohibido cambiar el contenido de este documento, este txt esta hecho exclusivamente para  "hacklabz",
si quieres publicar este texto en tu web tendras que avisar a www.ack-scan.org o www.hacklabz.net o a mi :D. 
Y por favor no quites ni cambies mi nick :@




[ Polk ]                                              [ Polk@HacKlabz.NeT ]




=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=o=

 00:.     [ Despedida ]                         [HackLabz.NeT Staff]

                                                [ADMIN@HACKLABZ.NET]



Bueno pues esperamos que este primer numero de nuestra Revista Electronica les sirva, esperamos
que pronto podamos lanzarla en Formato PDF ya que por razones de tiempo esta vez no pudimos editarla
en formato PDF.

Les recordamos que aceptamos nuevos miembros dispuestos a colaborar, o simplemente colaboradores, 
para hacer esto contactanos en admin@hacklabz.net cualquiera los miembros del Team te puede contestar.

En el proximo numero pondremos la continuacion de algunos de los tutoriales que aki les presentamos
asi como tambien algunos nuevos de nuestra autoria, sin embargo tu tambien nos puedes enviar tu articulo para
complementa esta e-zine en su proximo numero que ya ha salido publicada en Hackers.Com.Mx.

Los envios para la proxima e-zine se hacen a e-zine@hacklabz.net, agradecermos tus articulos enviados.

Y asi con este E-Zine comenzamos nuestra travesia por Internet, esperamos sea de su agrado.


¡¡¡¡¡Hasta el proximo Numero!!!!!!


HackLabz.NeT Staff


SrOscuro, Status-x, Polk, HackZatan.


::[Editor]::  Status-x
::[Team]::::

status-x@hacklabz.net
sroscuro@hacklabz.net
hck_zatan@hacklabz.net
polk@hacklabz.net

::[Colaboradores]::

Root21t........webmaster@hacker.com.ve

Megabyte.......Megabyte@gobiernofederal.com


===============================================================================



Derechos Reservados en Nic.Mx, 2004 HackLabz.NeT HT No modificar sin permiso de sus autores.


